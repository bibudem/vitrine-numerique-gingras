{"version":3,"mappings":"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","names":["importVimeoPlayer","__vitePreload","importYouTubePlayer","n","VIDEO_PLATFOMS","UiVideo","defineComponent","props","emit","viewport","toRefs","interfaceStore","player","data","reactive","onInitUi","useFlow","onMounted","computeFormat","isEmbedPlayer","initEmbedPlayer","addPlaybackListeners","play","useIntersectionObserver","isIntersecting","stop","initCircle","killCircle","debouncedWatch","_a","gsap","onBeforeUnmount","removePlaybackListeners","watch","state","emitter","EVENTS","posterProps","computed","_b","_c","StringsHelper","onPlay","onPause","onStop","youtubeStateChange","event","nextTick","Module","YouTubePlayer","id","getYoutubeVideoID","VimeoPlayer","v","resolve","reject","pause","duration","mute","muted","unmute","mouseEnter","render","mouseLeave","mouseMove","e","cursorW","cursorH","minX","maxX","minY","maxY","x","y","IconPlay","beforeEnterAction","enterAction","leaveAction","beforeEnterActionFade","enterActionFade","leaveActionFade","url","regExp","match","el","done","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_resolveComponent","src","_createElementBlock","_ctx","_Transition","_withCtx","_cache","args","hasPlayBtn","_openBlock","_createBlock","_component_ui_button","_createElementVNode","_createCommentVNode","_createVNode","_resolveDynamicComponent","_mergeProps","autoplay","controls","_Fragment","_renderList","source","type","_hoisted_6","_hoisted_7"],"ignoreList":[],"sources":["../../src/vue/src/components/UiKit/Video/index.vue"],"sourcesContent":["<docs>\n# ui-video\n\nbasic support of ui-video\n\n\n</docs>\n\n<script lang=\"ts\">\nimport { debouncedWatch, useIntersectionObserver } from '@vueuse/core';\nimport emitter, { EVENTS } from 'store/events';\nimport interfaceStore from 'store/interface';\nimport useFlow from 'utils/flow';\nimport StringsHelper from 'utils/helpers/Strings';\nimport { gsap } from 'vendors/gsap';\nimport { computed, defineComponent, nextTick, onBeforeUnmount, onMounted, reactive, toRefs, watch } from 'vue';\nimport IconPlay from './assets/play.svg?raw';\n\nconst importVimeoPlayer = () => import(/* webpackChunkName: \"video-vimeo\" */'@vimeo/player')\nconst importYouTubePlayer = () => import(/* webpackChunkName: \"video-youtube\" */'youtube-player')\n\nconst VIDEO_PLATFOMS = {\n  YOUTUBE: 'youtube',\n  VIMEO: 'vimeo',\n};\n\ntype State = {\n  playing: boolean,\n  muted: boolean,\n  ended: boolean,\n  loaded: boolean,\n};\n\nexport interface Data {\n  el?: HTMLElement,\n  playEl?: any,\n  circle?: HTMLElement,\n  iframe?: HTMLElement,\n  video?: HTMLVideoElement,\n  VIDEO_PLATFOMS: typeof VIDEO_PLATFOMS,\n  rafMouse?: any,\n  timelineMouse?: any,\n  clientX?: number,\n  clientY?: number,\n  defaultX?: number,\n  defaultY?: number,\n  format?: string,\n  isEmbedPlayer: boolean,\n  isInScreen: boolean,\n  state: State\n}\n\nconst UiVideo = defineComponent({\n  name: \"UiVideo\",\n  props: {\n    // vimeo url || youtube url || file link\n    src: {\n      type: String,\n      default: '',\n    },\n    /** poster image can be image url or image object - @see `<UiPicture />` */\n    poster: {\n      type: [String, Object],\n      default: undefined,\n    },\n    /** action play options */\n    hasPlayBtn: {\n      type: Boolean,\n      default: true,\n    },\n    hasPlayAnim: {\n      type: Boolean,\n      default: false,\n    },\n    hasPlayRotate: {\n      type: Boolean,\n      default: false,\n    },\n    loop: {\n      type: Boolean,\n      default: false,\n    },\n    autoplay: {\n      type: Boolean,\n      default: false,\n    },\n    muted: {\n      type: Boolean,\n      default: false,\n    },\n    controls: {\n      type: Boolean,\n      default: true,\n    },\n    cover: {\n      type: String,\n      default: 'cover'\n    },\n    alt: {\n      type: String,\n      default: undefined\n    },\n    full: {\n      type: Boolean,\n      default: false,\n    },\n    sources: {\n      type: Object,\n      default: undefined,\n    },\n  },\n  emits: ['play', 'pause', 'stop'],\n  setup(props, { emit }) {\n    const { viewport } = toRefs(interfaceStore.state);\n    let player: any = null;\n    const data: Data = reactive(\n      {\n        el: undefined,\n        playEl: undefined,\n        circle: undefined,\n        iframe: undefined,\n        video: undefined,\n        VIDEO_PLATFOMS,\n        rafMouse: undefined,\n        clientX: 0,\n        clientY: 0,\n        defaultX: 0,\n        defaultY: 0,\n        format: undefined,\n        isEmbedPlayer: false,\n        isInScreen: false,\n        /**\n         * component state sync within video playback events\n         * if we do a play action, it may take time for video to actualy play (buffer etc)\n         * and once it's playing, it trigger some events, that will update our state :)\n         */\n        state: {\n          playing: false,\n          muted: false,\n          ended: true,\n          loaded: true, // @todo preload\n        }\n      }\n    );\n    const { onInitUi } = useFlow()\n\n    onMounted(() => {\n      // sync state with props\n      data.state.muted = props.muted || props.autoplay;\n\n      // compute data\n      data.format = computeFormat();\n      data.isEmbedPlayer = isEmbedPlayer();\n\n      if (data.isEmbedPlayer) {\n        initEmbedPlayer();\n      } else {\n        addPlaybackListeners();\n        if (props.autoplay && data.isInScreen) {\n          play();\n        }\n      }\n    });\n\n    onInitUi(() => {\n      useIntersectionObserver(\n        data.el,\n        ([{ isIntersecting }]) => {\n          if (isIntersecting) {\n            /** observe cpn visibility to stop video if scrolled */\n            if (props.autoplay && isIntersecting) {\n              play();\n            }\n            if (data.state.playing && !isIntersecting) { // may be loadi\n              stop();\n            }\n\n            if (isIntersecting) {\n              initCircle();\n            } else {\n              killCircle();\n            }\n            data.isInScreen = isIntersecting;\n          }\n        },\n        {\n          threshold: 0.3\n        }\n      )\n    });\n\n    debouncedWatch(\n      () => viewport.value.width,\n      () => {\n        if (data.playEl?.$el) {\n          gsap.set(data.playEl.$el, {\n            clearProps: 'left,top',\n            onComplete: () => {\n              data.defaultX = data.playEl.$el.offsetLeft;\n              data.defaultY = data.playEl.$el.offsetTop;\n            }\n          });\n        }\n      },\n      { debounce: 500, deep: true }\n    )\n\n    onBeforeUnmount(() => {\n      // @todo destroy YTPlayer and listeners\n      removePlaybackListeners();\n    });\n\n    // Watch state change\n    watch(\n      () => data.state,\n      (state: State) => {\n        if (state.playing) {\n          killCircle();\n        } else {\n          initCircle();\n        }\n      },\n      { deep: true, }\n    )\n\n    emitter.on(EVENTS.VIDEO_STOP_ALL, () => {\n      stop();\n    });\n\n    const initCircle = () => {\n      setTimeout(() => {\n        if (data.circle && props.hasPlayRotate) {\n          data.timelineMouse = gsap.timeline()\n            .to(data.circle, { scale: 0.95, repeat: -1, yoyo: true, duration: 3 })\n        }\n      }, 50);\n    };\n\n    const killCircle = () => {\n      if (data.timelineMouse) {\n        data.timelineMouse.kill();\n      }\n    };\n\n    const posterProps = computed(() => {\n      return typeof (props.poster) === 'string' ? {\n        src: props.poster\n      } : props.poster\n    })\n\n    /**\n     * @returns {String} video format ('videp/mp4') based on file extension\n     * or 'youtube' | 'vimeo' etc\n     * @todo webm\n     * @note : not based on `type` props aniway since it make no sence...\n     * an external mp4 video would act exactly like an internal one\n     */\n    const computeFormat = (): string => {\n      // return `video/mp4`;\n      if (props.src?.search('youtube') >= 0 || props.src?.search('youtu.be') >= 0) {\n        return VIDEO_PLATFOMS.YOUTUBE;\n      }\n      if (props.src?.search('vimeo') >= 0) {\n        return VIDEO_PLATFOMS.VIMEO;\n      }\n\n      // // @todo may be improved...\n      if (typeof (props.src) !== 'string' || props.src === '') return '';\n\n      return `video/${StringsHelper.getFileExtension(props.src)}`;\n\n    };\n\n    const isEmbedPlayer = (): boolean => {\n      return ([VIDEO_PLATFOMS.YOUTUBE, VIDEO_PLATFOMS.VIMEO]).indexOf(computeFormat()) >= 0;\n    };\n\n    const onPlay = () => {\n      data.state.playing = true;\n      data.state.ended = false;\n      /**\n       * play event\n       * @type {Event}\n       */\n      emit('play');\n    };\n\n    const onPause = () => {\n      data.state.playing = false;\n      data.state.ended = false;\n      /**\n       * pause event\n       * @type {Event}\n       */\n      emit('pause');\n    };\n\n    const onStop = () => {\n      data.state.playing = false;\n      data.state.ended = true;\n      /**\n       * stop event (on stop or ended)\n       * @type {Event}\n       */\n      emit('stop');\n    };\n\n    const youtubeStateChange = (event: any) => {\n      // https://developers.google.com/youtube/iframe_api_reference#onStateChange\n      switch (event.data) {\n        case 1: // playing\n          return onPlay();\n        case 2: // paused\n          return onPause();\n        case 0: // ended\n        case 5: // stopped\n          return onStop();\n        default:\n          return null;\n      }\n    };\n\n    /** init embed player (youtube/vimeo)\n     * @returns {Promise}\n     */\n    const initEmbedPlayer = () => {\n      nextTick(() => {\n        switch (data.format) {\n          case VIDEO_PLATFOMS.YOUTUBE:\n            importYouTubePlayer().then((Module) => {\n              const YouTubePlayer = Module.default;\n              const id = getYoutubeVideoID(props.src);\n              player = YouTubePlayer(data.iframe as HTMLElement, {\n                host: 'https://www.youtube-nocookie.com', // GDPR thingy, block tracking on vimeo side.\n              });\n              // .loadVideoByUrl(this.src); // expect very specific format\n\n              // wait player ready, video loaded, and stop it because default autoplay\n              // note that will watch this.player and re-autoplay if needed\n              if (player) {\n                if (props.muted) {\n                  player.mute();\n                }\n\n                player.loadVideoById(id)\n                  .then(() => player.stopVideo())\n                  .then(() => {\n                    addPlaybackListeners();\n                    if (props.autoplay && data.isInScreen) {\n                      play();\n                    }\n                  });\n              }\n            });\n            break;\n          case VIDEO_PLATFOMS.VIMEO:\n            importVimeoPlayer().then((Module) => {\n              const VimeoPlayer = Module.default;\n              player = new VimeoPlayer(data.iframe as HTMLElement, {\n                url: props.src,\n                loop: props.loop,\n                muted: props.muted,\n                controls: props.controls,\n                dnt: true, // dnt = do not Track = GDPR thingy, block tracking on vimeo side.\n              });\n\n              player.on('loaded', () => {\n                addPlaybackListeners();\n                if (props.autoplay && data.isInScreen) {\n                  play();\n                }\n              });\n            });\n            break;\n          default:\n            break;\n        }\n      })\n    };\n\n    /** add playback listener - and emit events based on those\n     * actually only for internal videos - YT player will also watch is state change\n     * @returns void\n     */\n    const addPlaybackListeners = () => {\n      if (data.isEmbedPlayer) {\n        switch (data.format) {\n          case VIDEO_PLATFOMS.YOUTUBE:\n            player.on('stateChange', youtubeStateChange);\n            break;\n          case VIDEO_PLATFOMS.VIMEO:\n            player.on('play', onPlay);\n            player.on('pause', onPause);\n            player.on('ended', onStop);\n            break;\n          default:\n            break;\n        }\n      } else if (data.video) {\n        data.video.addEventListener('play', onPlay); // playing\n        data.video.addEventListener('pause', onPause);\n        data.video.addEventListener('ended', onStop);\n      }\n    };\n\n    /** remove playback listeners */\n    const removePlaybackListeners = () => {\n      if (!data.isEmbedPlayer && data.video) {\n        data.video.removeEventListener('play', onPlay);\n        data.video.removeEventListener('pause', onPause);\n        data.video.removeEventListener('ended', onStop);\n      }\n    };\n\n    /** play video\n     * @returns {Promise}\n     */\n    function play() {\n      document.querySelectorAll('video').forEach(v => v.pause())\n      nextTick(() => {\n        if (data.isEmbedPlayer) {\n          switch (data.format) {\n            case VIDEO_PLATFOMS.YOUTUBE:\n              return player?.playVideo();\n            case VIDEO_PLATFOMS.VIMEO:\n              return player.play();\n            default:\n              return new Promise((resolve, reject) => {\n                reject(new Error('incorrect video url'));\n              });\n          }\n        }\n        return data.video?.play(); // native player\n      })\n    }\n\n    /** pause video\n     * @returns {Promise}\n     */\n    function pause() {\n      if (data.isEmbedPlayer) {\n        switch (data.format) {\n          case VIDEO_PLATFOMS.YOUTUBE:\n            return player.pauseVideo();\n          case VIDEO_PLATFOMS.VIMEO:\n            return player.pause();\n          default:\n            return new Promise((resolve, reject) => {\n              reject(new Error('incorrect video url'));\n            });\n        }\n      }\n      return data.video?.pause(); // native player\n    }\n\n    /** stop video\n     * @returns {Promise}\n     */\n    function stop() {\n      if (data.isEmbedPlayer) {\n        if (!player) {\n          return new Promise((resolve): void => {\n            resolve(null);\n          });\n        }\n\n        switch (data.format) {\n          case VIDEO_PLATFOMS.YOUTUBE:\n            return player.stopVideo();\n          case VIDEO_PLATFOMS.VIMEO:\n            // no stop method... so seek to end - 0.5 (because if just seek to end it bug)\n            return player.getDuration()\n              .then((duration: number) => {\n                player.setCurrentTime(duration - 0.5);\n                return player;\n              });\n          default:\n            return new Promise((resolve, reject) => {\n              reject(new Error('incorrect video url'));\n            });\n        }\n      }\n      if (data.video) {\n        data.video?.pause();\n        const { duration } = data.video;\n        if (!Number.isNaN(duration) && data.video) {\n          data.video.currentTime = 0;\n        }\n      }\n      return new Promise((resolve): void => {\n        resolve(null);\n      });\n    }\n\n    /** mute video\n     * @param {Boolean} muted - if false, unmute video - but default to true\n     * @returns void\n     */\n    function mute(muted = true) {\n      data.state.muted = muted;\n    }\n\n    /** unmute video\n     * @returns void\n     */\n    function unmute() {\n      data.state.muted = false;\n    }\n\n    /** MOUSE EVENTS - ENTER\n     * @returns void\n     */\n    function mouseEnter() {\n      if (interfaceStore.isDesktopDevice) {\n        if (data.playEl?.$el && props.hasPlayAnim) {\n          // set initial position // for mouse out anim\n          if (!data.defaultX) {\n            data.defaultX = data.playEl.$el.offsetLeft;\n            data.defaultY = data.playEl.$el.offsetTop;\n          }\n\n          // gsap.set(data.playEl.$el, {\n          //   left: data.defaultX,\n          //   top: data.defaultY,\n          //   force3D: true,\n          //   overwrite: true,\n          // });\n\n          data.rafMouse = requestAnimationFrame(render);\n        }\n\n        if (data.timelineMouse) {\n          data.timelineMouse.timeScale(1.4)\n        }\n      }\n    }\n\n    /** MOUSE EVENTS - RAF\n     * @returns void\n     */\n    function render() {\n      if (data.playEl?.$el) {\n        gsap.to(data.playEl.$el, 0.25, {\n          left: data.clientX,\n          top: data.clientY,\n        });\n      }\n\n      data.rafMouse = requestAnimationFrame(render);\n    }\n\n    /** MOUSE EVENTS - LEAVE\n     * @returns void\n     */\n    function mouseLeave() {\n      if (interfaceStore.isDesktopDevice) {\n        if (props.hasPlayAnim) {\n          nextTick(() => {\n            cancelAnimationFrame(data.rafMouse);\n            if (data.playEl?.$el) {\n              gsap.to(data.playEl.$el, 0.8, {\n                left: data.defaultX,\n                top: data.defaultY,\n                overwrite: true,\n              });\n            }\n          })\n        }\n\n        if (data.timelineMouse) {\n          data.timelineMouse.timeScale(1)\n        }\n      }\n    }\n\n    /** MOUSE EVENTS - MOVE\n     * @returns void\n     */\n    function mouseMove(e: MouseEvent) {\n      if (props.hasPlayAnim && interfaceStore.isDesktopDevice) {\n        const w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        if (w < 1000 || !data.playEl?.$el || !data.el) {\n          return false;\n        }\n        const cursorW = data.playEl.$el.getBoundingClientRect().width / 2;\n        const cursorH = data.playEl.$el.getBoundingClientRect().height / 2;\n\n        const minX = 10 + cursorW;\n        const maxX = data.el.getBoundingClientRect().width - 10 - cursorW;\n        const minY = 10 + cursorH;\n        const maxY = data.el.getBoundingClientRect().height - 10 - cursorH;\n\n        const x = e.clientX - data.el.getBoundingClientRect().left; // x position within the element.\n        const y = e.clientY - data.el.getBoundingClientRect().top; // y position within the element.\n\n        if (x <= minX) {\n          data.clientX = minX;\n        } else if (x >= maxX) {\n          data.clientX = maxX;\n        } else {\n          data.clientX = x;\n        }\n\n        if (y <= minY) {\n          data.clientY = minY;\n        } else if (y >= maxY) {\n          data.clientY = maxY;\n        } else {\n          data.clientY = y;\n        }\n      }\n      return true;\n    }\n\n    // return public data for our template\n    return {\n      ...toRefs(data), //data for refs...\n      posterProps,\n      IconPlay,\n      // functions\n      onClick: play,\n      play,\n      pause,\n      stop,\n      mute,\n      unmute,\n      // anim\n      beforeEnterAction,\n      enterAction,\n      leaveAction,\n      beforeEnterActionFade,\n      enterActionFade,\n      leaveActionFade,\n      onMouseEnter: mouseEnter,\n      onMouseLeave: mouseLeave,\n      onMouseMove: mouseMove,\n    };\n\n  },\n});\nexport default UiVideo\n\nconst getYoutubeVideoID = (url: string): string => {\n  const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n  const match = url.match(regExp);\n  return (match && match[7].length === 11) ? match[7] : '';\n};\n\nconst beforeEnterAction = (el: Element) => {\n  gsap.set(el, { opacity: 0, scale: 0.4 });\n};\nconst enterAction = (el: Element, done: () => void) => {\n  gsap.to(el, {\n    duration: 0.4, opacity: 1, delay: 0.2, scale: 1, onComplete: done,\n  });\n};\nconst leaveAction = (el: Element, done: () => void) => {\n  gsap.to(el, {\n    duration: 0.2, opacity: 0, scale: 0.4, onComplete: done,\n  });\n};\nconst beforeEnterActionFade = (el: Element) => {\n  gsap.set(el, { opacity: 0 });\n};\nconst enterActionFade = (el: Element, done: () => void) => {\n  gsap.to(el, {\n    duration: 0.4, opacity: 1, delay: 0.2, onComplete: done,\n  });\n};\nconst leaveActionFade = (el: Element, done: () => void) => {\n  gsap.to(el, {\n    duration: 0.2, opacity: 0, onComplete: done,\n  });\n};\n\n</script>\n\n<template>\n  <div ref=\"el\"\n       :key=\"src\"\n       class=\"UIVideo\"\n       :data-cover=\"cover\"\n       :data-full=\"full\"\n  >\n    <transition :css=\"false\"\n                @before-enter=\"beforeEnterAction\"\n                @enter=\"enterAction\"\n                @leave=\"leaveAction\"\n    >\n      <div v-if=\"state.ended || !state.playing\"\n           class=\"actions\"\n           @click=\"onClick\"\n           @mouseenter=\"onMouseEnter\"\n           @mouseleave=\"onMouseLeave\"\n           @mousemove=\"onMouseMove\"\n      >\n        <ui-button v-if=\"hasPlayBtn\"\n                   ref=\"playEl\"\n                   theme=\"reset\"\n                   class=\"button\"\n                   name=\"play\"\n                   aria-label=\"play-button\"\n        >\n          <span ref=\"circle\" class=\"circle\" />\n          <span class=\"icon\" v-html=\"IconPlay\" />\n          <!-- <span class=\"alt\" v-text=\"alt\" /> -->\n        </ui-button>\n      </div>\n    </transition>\n\n    <transition :css=\"false\"\n                @before-enter=\"beforeEnterActionFade\"\n                @enter=\"enterActionFade\"\n                @leave=\"leaveActionFade\"\n    >\n      <component :is=\"poster ? 'ui-picture' : 'div'\"\n                 v-if=\"(!state.playing || state.ended)\"\n                 class=\"poster\"\n                 v-bind=\"posterProps\"\n                 alt=\"\"\n                 full\n                 cover=\"cover\"\n                 :lazy=\"false\"\n                 sizes=\"(min-width: 1024px) 50vw, 100vw\"\n      />\n    </transition>\n\n    <div v-if=\"isEmbedPlayer\"\n         ref=\"iframe\"\n         class=\"video -embed\"\n    />\n    <video v-else\n           ref=\"video\"\n           :loop=\"loop\"\n           :muted=\"state.muted\"\n           :autoplay=\"autoplay\"\n           :controls=\"controls\"\n           class=\"video -native\"\n           controlsList=\"nodownload\"\n    >\n      <template v-if=\"sources\">\n        <source v-for=\"(source, type) in sources\"\n                :key=\"source\"\n                :src=\"source\"\n                :type=\"`video/${type}`\"\n        >\n      </template>\n      <source v-else\n              :src=\"src\"\n              :type=\"format\"\n      >\n    </video>\n  </div>\n</template>\n\n\n<style lang=\"stylus\" scoped>\n  /**\n  *\n  * TABLE OF CONTENT\n  * --------\n  * =LAYOUT\n  * =DEBUG\n  */\n  $video-play-color ?= $c-white\n  $video-play-background ?= $c-accent\n  $video-action-background ?= #F5F5F5\n  $video-color-overlay ?= rgba($c-black, 0.3)\n\n\n  /* ===LAYOUT=== */\n  .UIVideo\n    position relative\n    width 100%\n    background $c-black\n\n  .actions\n  .poster\n    absolute 0\n    size 100%\n\n  .video.-native\n  :deep(iframe)\n    z-index 10\n    width 100%\n    display block\n\n  [data-cover='cover']\n    .video.-native\n    :deep(iframe)\n      object-fit cover\n      font-family 'object-fit:cover;'\n\n  [data-cover='contain']\n    .video.-native\n    :deep(iframe)\n      object-fit contain\n      font-family 'object-fit:contain;'\n\n  [data-full]\n    .video.-native\n    :deep(iframe)\n      width 100%\n    \n    &[data-cover=\"cover\"]\n    &[data-cover=\"contain\"]\n      .video.-native\n      :deep(iframe)\n        absolute 0\n        size 100%\n\n  .poster\n    z-index 20\n    background $video-action-background\n\n  .actions\n    z-index 30\n    flexbox(center)\n    &:before\n      content ''\n      absolute 0\n      background rgba($c-black, .3)\n    .button.UiButton\n      display block\n      position absolute\n      top 50%\n      left 50%\n      transform translate(-50%, -50%)\n      color $video-play-color\n      rp(width, 40px )\n      rp(height, 30px)\n      display: flex;\n      border-radius: 5px;\n      border 1px solid currentColor\n      f(center)\n      :deep(.inner)\n        position static\n\n      \n      .icon\n        display block\n        rp(size, 10px)\n        :deep() svg\n          path\n            fill currentColor\n      \n      .alt\n        position relative\n        f-style(eyebrow)\n        z-index 10\n\n  /* ===DEBUG=== */\n\n</style>\n"],"file":"assets/index-Bc4gXT_k.js"}