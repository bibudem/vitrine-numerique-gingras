{"version":3,"mappings":"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","names":["IconError","IconInfo","KoddeinFormField","defineComponent","defineAsyncComponent","__vitePreload","props","emit","data","reactive","_a","uniqueId","component","computed","isActive","isInlineField","showPlaceholder","watch","value","getComponentBindings","component2","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","_resolveDirective","_openBlock","_createElementBlock","_ctx","isFocus","error","type","label","tooltip","_createTextVNode","_toDisplayString","_withDirectives","_directive_tooltip","_createCommentVNode","_createElementVNode","_hoisted_8","_renderSlot","id","_createBlock","_resolveDynamicComponent","_mergeProps","disabled","autocomplete","ariaLabel","updateValue","onCustom","_cache","$event","_createVNode","_withCtx","_hoisted_12"],"ignoreList":[],"sources":["../../src/vue/src/components/UiKit/KoddeinVueForm/assets/svg/error-field.svg?raw","../../src/vue/src/components/UiKit/KoddeinVueForm/assets/svg/info.svg?raw","../../src/vue/src/components/UiKit/KoddeinVueForm/Field/index.vue"],"sourcesContent":["export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 32 32\\\"><circle cx=\\\"16\\\" cy=\\\"16\\\" r=\\\"16\\\" fill=\\\"currentColor\\\"/><path d=\\\"M14.82,13.75v-2.42h2.12v2.42l-.53,3.89h-1.05l-.53-3.89Zm-.03,5.12h2.17v2.13h-2.17v-2.13Z\\\" fill=\\\"#fff\\\"/></svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 20 20\\\"><path fill=\\\"#2b2b2b\\\" fill-rule=\\\"evenodd\\\" d=\\\"M10 0a10 10 0 1010 10A10 10 0 0010 0zm.82 15H9.2V8.32h1.62zm-.11-8.1a.93.93 0 01-1.42 0A1.13 1.13 0 019 6.13a1.19 1.19 0 01.29-.8.93.93 0 011.42 0 1.16 1.16 0 01.29.8 1.13 1.13 0 01-.29.77z\\\"/></svg>\\n\"","<docs>\n# KoddeinFormField\n> Base field (like text input)\n\n## behavior\n\n- show error ~~/ success~~\n\n- use a slot for the input itself\n  - let the ability to change the input for, let say a textarea\n  - but you may use some fields that dont extend this base (if really different)\n\n- **BUT** does not validate itself, just display props and emit new value\n\n@author Nicolas Husson <nicolas@kffein.com>\n@author Kevin Bastien <kevin@kffein.com>\n</docs>\n\n<script lang=\"ts\">\nimport { defineComponent, defineAsyncComponent, reactive, toRefs, computed, watch, inject } from 'vue';\nimport { uniqueId } from 'lodash';\nimport StringsHelper from 'utils/helpers/Strings';\nimport IconError from '../assets/svg/error-field.svg?raw';\nimport IconInfo from '../assets/svg/info.svg?raw';\n\ninterface Data {\n  id: string,\n  internalValue: any,\n  isFocus: boolean,\n}\n\nconst KoddeinFormField = defineComponent({\n  name: \"KoddeinFormField\",\n  components: {\n    KoddeinFieldSwitch:     defineAsyncComponent(()=>import('./Switch.vue')),\n    KoddeinFieldCheckbox:   defineAsyncComponent(()=>import('./Checkbox.vue')),\n    KoddeinFieldCheckboxes: defineAsyncComponent(()=>import('./Checkboxes.vue')),\n    KoddeinFieldDate:       defineAsyncComponent(()=>import('./Date.vue')),\n    KoddeinFieldRadio:      defineAsyncComponent(()=>import('./Radio.vue')),\n    KoddeinFieldText:       defineAsyncComponent(()=>import('./Text.vue')),\n    KoddeinFieldTextarea:   defineAsyncComponent(()=>import('./Textarea.vue')),\n    KoddeinFieldPassword:   defineAsyncComponent(()=>import('./Password.vue')),\n    KoddeinFieldWysiwyg:    defineAsyncComponent(()=>import('./Wysiwyg.vue')),\n    KoddeinFieldSelect:     defineAsyncComponent(()=>import('./Select.vue')),\n    KoddeinFieldUpload:     defineAsyncComponent(()=>import('./Upload.vue')),\n    KoddeinFieldSlider:     defineAsyncComponent(()=>import('./Slider.vue')),\n  },\n  props: {\n    /** input name / for validation */\n    name: {\n      type: String,\n      required: true,\n    },\n    /** input label  */\n    label: {\n      type: String,\n      default: undefined,\n    },\n    /** input placeholder */\n    placeholder: {\n      type: String,\n      default: undefined,\n    },\n    /** input tooltip helper on label */\n    tooltip: {\n      type: String,\n      default: undefined,\n    },\n    /** input type */\n    type: {\n      type: String,\n      default: 'text',\n    },\n    /** input value */\n    value: {\n      type: [String, Number, Array, Object, Boolean, Date, File],\n      default: undefined,\n    },\n    /** input required */\n    required: {\n      type: Boolean,\n      default: false,\n    },\n    /** input multiple selection (select) / files */\n    multiple: {\n      type: Boolean,\n      default: false,\n    },\n    /** input options - select */\n    options: {\n      type: [Array, Object],\n      default: undefined,\n    },\n    /** error message for that field - if defined, will display it */\n    error: {\n      type: String,\n      default: undefined,\n    },\n    /** limit value textarea */\n    limit: {\n      type: Number,\n      default: undefined,\n    },\n    /** limit file size */\n    size: {\n      type: Number,\n      default: undefined,\n    },\n    /** some fields can have some autocomplete param (html5 auto complete) */\n    autocomplete: {\n      type: String,\n      default: undefined,\n    },\n    /** fileupload accept extensions */\n    accept: {\n      type: Array,\n      default: undefined,\n    },\n    /* props binded to input field - use this for specific attrs like textarea rows */\n    fieldProps: {\n      type: Object,\n      default: undefined,\n    },\n    /** standard disabled attribute will be binded directly on input */\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    /** aria-label text */\n    ariaLabel: {\n      type: String,\n      default: undefined,\n    },\n  },\n  emits: ['update:modelValue', 'focus'],\n  setup(props, { emit }){\n    const data: Data = reactive(\n      {\n        /** @param {String} id - field id, just for label/input relation */\n        id: props.fieldProps?.id as string ?? uniqueId('field') as string,\n        /** @param {any} internalValue - clone value\n         * - because we must not change props\n         * - in `watch` will sync value within internalValue\n         */\n        internalValue: null,\n        /** @param {Boolean} focus - is field focus */\n        isFocus: false,\n      }\n    );\n\n    /* get dynamic component from cpn name */\n    const component = computed(():string => {\n      if (props.type) {\n        return computeType(props.type) as string;\n      }\n      return '';\n    });\n\n    /** @returns {Boolean} true if focus or has value */\n    const isActive = computed(()=> {\n      return (props.value || props.value === 0);\n    });\n\n    const isInlineField = computed(():boolean => {\n      switch (component.value as any) {\n        case 'KoddeinFieldText':\n        case 'KoddeinFieldPassword':\n          return true;\n        default:\n          return false;\n      }\n    });\n\n    const showPlaceholder = computed(():boolean => {\n      switch (props.type) {\n        case 'slider':\n        case 'checkbox':\n        case 'checkboxes':\n        case 'radio':\n          return false;\n        default:\n          return true;\n      }\n    }); \n\n\n    // WATCHER\n    /**\n     * Watch value, on value update -> set internal value\n     */\n    watch(\n      ()=>props.value,\n      (value: any) => { \n        data.internalValue = value;\n      },\n      { immediate:true }\n    )\n    /**\n     * Watch internal value, on value update -> send value to parent\n     */\n    watch(\n      ()=>data.internalValue,\n      (value: any) => { \n        if (value === props.value) return;\n        emit('update:modelValue', value) \n      },\n      // { immediate:true }\n    )\n\n    /* create an object to be bind to our child component\n     ** they will all bind data, plus some extra per components\n    */\n    const getComponentBindings = (component: string) => {\n      const extraProps = (() => {\n        switch (component) {\n          case 'textarea':\n            return {\n              limit: props.limit,\n              placeholder: props.placeholder,\n            };\n          case 'wysiwyg':\n            return {\n              placeholder: props.placeholder,\n            };\n          case 'select':\n            return {\n              options: props.options,\n              multiple: props.multiple,\n              placeholder: props.placeholder,\n            };\n          case 'checkbox':\n          case 'switch':\n            return {\n              label: props.label,\n            };\n          case 'checkboxes':\n            return {\n              options: props.options,\n            };\n          case 'radio':\n            return {\n              options: props.options,\n            };\n          case 'date':\n            return {\n              placeholder: props.placeholder,\n            };\n          case 'slider':\n            return {\n              options: props.options,\n            };\n          case 'upload':\n            return {\n              accept: props.accept,\n              size: props.size,\n            };\n          default:\n            return {};\n        }\n      })();\n\n      return {\n        ...extraProps,\n        ...props.fieldProps,\n        type: props.type,\n      };\n    }\n\n    const updateValue = (value: any) => {\n      data.internalValue = value;\n    }\n\n    const onFocus = () => {\n      data.isFocus = true;\n      emit('focus');\n    }\n    const onCustom = ({event, value}: any) => {\n      emit(event, value);\n    }\n\n    const theme = inject('theme', null);\n\n    return {\n      ...toRefs(data), //data\n      theme,\n      // computed\n      component,\n      isActive,\n      isInlineField,\n      showPlaceholder,\n      // methods\n      getComponentBindings,\n      updateValue,\n      onFocus,\n      onCustom,\n      // icons\n      IconError,\n      IconInfo,\n    }; \n  },\n});\nexport default KoddeinFormField;\n\nfunction computeType(type: string):string {\n  if (type === 'hidden') {\n    return 'input';\n  }\n\n  if (['text', 'email', 'tel', 'number'].indexOf(type) > -1) {\n    type = 'text';\n  }\n  return `KoddeinField${StringsHelper.capitalize(type)}`;\n}\n</script>\n\n<template>\n  <div :data-name=\"name\"\n       :data-theme=\"theme\"\n       :data-active=\"isActive ? true : undefined\"\n       :data-focus=\"isFocus ? true : undefined\"\n       :data-error=\"error ? true : undefined\"\n       :data-type=\"type\"\n       :data-component=\"component\"\n       :data-inline-field=\"isInlineField ? true : undefined\"\n       :data-placeholder=\"showPlaceholder && placeholder ? true : undefined\"\n       class=\"koddein-field\"\n  >\n    <!-- @todo label in input wraper or not depending on styles -->\n    <label v-if=\"label && ['checkbox', 'switch', 'hidden'].indexOf(type) <=-1\"\n           :for=\"id\"\n           class=\"label\"\n    >\n      <span class=\"label-text\"\n            v-html=\"label\"\n      />\n      {{ required ? '*' : '' }}\n      <span v-if=\"tooltip\"\n            v-tooltip=\"tooltip\"\n            class=\"info\"\n            v-html=\"IconInfo\"\n      />\n    </label>\n    <label v-else-if=\"!label && ['checkbox', 'switch', 'hidden'].indexOf(type) <=-1\"\n           :for=\"id\"\n           class=\"label -hidden\"\n    />\n\n    <!-- fake label for minimalist animation -->\n    <span v-if=\"label && ['checkbox', 'switch', 'hidden'].indexOf(type) <=-1 && theme == 'minimalist'\" class=\"label-fake\">\n      <span class=\"label-text\"\n            v-html=\"label\"\n      />\n      {{ required ? '*' : '' }}\n    </span>\n\n    <div class=\"inputWrapper\">\n      <!-- @slot default - easy override with slot **just be sure to emit `input` with new value** -->\n      <slot>\n        <component :is=\"component\"\n                   :id=\"id\"\n                   ref=\"input\"\n                   v-bind=\"getComponentBindings(type)\"\n                   :value=\"internalValue\"\n                   :error=\"error ? error : undefined\"\n                   :disabled=\"disabled\"\n                   :autocomplete=\"autocomplete\"\n                   class=\"field\"\n                   :aria-label=\"ariaLabel || label\"\n                   @on-focus=\"onFocus\"\n                   @on-blur=\"isFocus=false\"\n                   @input-change=\"updateValue\"\n                   @custom-event=\"onCustom\"\n        />\n      </slot>\n\n      <!-- If we need some icons -->\n      <slot name=\"icon\" />\n\n      <!-- border animation -->\n      <span class=\"border\" />\n\n      <!-- placeholder as span because of annimation -->\n      <span v-if=\"showPlaceholder\"\n            class=\"placeholder\"\n            v-text=\"placeholder\"\n      />\n    </div>\n\n    <!-- always render this `<p>` so not page jump when error -->\n    <p v-if=\"type !== 'hidden'\"\n       class=\"errors\"\n    >\n      <transition name=\"fade\">\n        <span v-if=\"error\"\n              class=\"error\"\n        ><i class=\"error-icon icon\" v-html=\"IconError\" />{{ error }}</span>\n      </transition>\n    </p>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n  /**\n   * TABLE OF CONTENT\n   * --------\n   *  - LAYOUT\n   *  - FOCUS ERROR ETC\n   *  - ANNIMATIONS\n   *  - THEMES\n   *  - DEBUG\n   *  - NO_SCOPE\n   */\n\n  $c-f-main ?= black\n  $c-f-input ?= black\n  $c-f-placeholder ?= grey\n  $c-f-border ?= grey\n  $c-f-border-focus ?= black\n  $c-f-error ?= red\n\n  $form_input_padding ?= 11px 25px\n  $form_input_padding_m ?= 12px 15px\n  $form_input_margin_top_next ?= 35px 5px // marge between cpn\n  \n  //  THEME: DEFAULT\n  .koddein-field\n    position relative\n    flex 1 1 100%\n    rp(margin-top, $form_input_margin_top_next)\n\n    &:first-child\n      margin-top 0\n\n    &[data-error] \n      :deep()\n        .label\n          color $c-f-error\n        .input\n        .box\n          border-color $c-f-error\n          color $c-f-error\n          + .icon svg\n            color $c-f-error\n\n    &[data-focus] \n      :deep()\n        .input\n          border-color $c-f-border-focus\n\n  .inputWrapper\n    position relative\n\n  .placeholder\n    absolute top left\n    border 1px solid transparent\n    color $c-f-placeholder\n    opacity 0\n    pointer-events none\n    trans(opacity)\n    rp(font-size, 18px 16px)\n    line-height normal\n  \n    +layout(desktop)\n      padding $form_input_padding\n    +layout(mobile)\n      padding $form_input_padding_m\n\n  .label\n  .label-fake\n    f(row, $justify: flex-start)\n    color $c-f-main\n    rp(font-size, 13px 13px)\n    text-transform uppercase\n    border-radius 0\n    z-index 10\n    margin-bottom 11px\n    trans(color)\n    &.-hidden\n      display none\n\n  .label-fake\n    display none\n\n  .info\n    size 20px\n    margin-left 15px\n    cursor pointer\n\n    :deep(svg)\n      pointer-events none\n\n  .field\n    width 100%\n    outline none\n    color $c-f-input\n    border 0\n    border-radius 0\n    padding 0\n  \n  :deep()\n    .input\n      padding 0\n      margin 0\n      background none\n      border 1px solid $c-f-border\n      border-radius $form_radius\n      font-family $ff-text\n      rp(font-size, 18px 16px)\n      trans()\n\n      +layout(desktop)\n        padding $form_input_padding\n      +layout(mobile)\n        padding $form_input_padding_m\n\n  .errors\n    color $c-f-error\n    margin-top 12px\n    rp(font-size, 13px 12px)\n    text-align right\n\n    > .error\n      f(row, $justify: flex-end, $align: center)\n\n    .error-icon\n      rp(size, 32px 22px)\n      rp(margin-right, 14px 9px)\n      flex-shrink 0\n      // margin-top 2px\n      :deep(svg)\n        fill $c-f-error\n\n  // THEME: MINIMALIST\n  .koddein-field[data-theme=\"minimalist\"]\n    .placeholder\n      padding-left 0\n    \n    &[data-component=\"KoddeinFieldText\"]\n    &[data-component=\"KoddeinFieldPassword\"]\n    &[data-component=\"KoddeinFieldTextarea\"]\n    &[data-component=\"KoddeinFieldSelect\"]\n    &[data-component=\"KoddeinFieldDate\"]\n      .label\n      .label-fake\n        margin-bottom 0\n    \n    &[data-inline-field]\n\n      .label\n        opacity 0\n      .label-fake\n        display flex\n        pointer-events none\n        absolute top left\n        trans()\n\n      &:not([data-active]):not([data-focus]):not([data-placeholder])\n        .label-fake\n          rp(font-size, 18px 16px)\n          transform translateY(130%)\n\n      &[data-focus]\n      // &[data-active]\n        :deep()\n          .input \n            border-color $c-f-border\n        .border\n          transform scaleX(1)\n\n      .border\n        absolute left bottom right\n        height 1px\n        background $c-f-border-focus\n        trans()\n        transform scaleX(0)\n        transform-origin bottom left\n\n    :deep()\n      .vue-input\n        padding-left 0\n      .input\n        border-top 0\n        border-left 0\n        border-right 0\n        border-radius 0\n        padding-left 0\n       \n\n  //  ===FOCUS ERROR ETC===\n  .fade-leave-active\n  .fade-enter-active\n    transition 0.3s\n  .fade-enter-from\n  .fade-leave-to\n    opacity 0\n\n  [data-inline-field]\n    &:not([data-active]):not([data-focus])\n    // &:not([data-active]) // if you want when NOT EMPTY, even on focus\n      .placeholder\n        opacity 1\n\n  //  ===DEBUG===\n  [data-debug-mode=\"true\"] .KoddeinFormField\n    //\n</style>\n"],"file":"assets/index-CheEQU80.js"}