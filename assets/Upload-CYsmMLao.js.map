{"version":3,"file":"Upload-CYsmMLao.js","sources":["../../src/vue/src/components/UiKit/KoddeinVueForm/assets/svg/upload.svg?raw","../../src/vue/src/components/UiKit/KoddeinVueForm/assets/svg/image.svg?raw","../../src/vue/src/components/UiKit/KoddeinVueForm/assets/svg/success-field.svg?raw","../../src/vue/src/components/UiKit/KoddeinVueForm/Field/Upload.vue"],"sourcesContent":["export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 29.29 30.74\\\"><path d=\\\"M14.66,0V30\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" vector-effect=\\\"non-scaling-stroke\\\"/><path d=\\\"M.35,15.71l14.29,14.29,14.29-14.29\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" vector-effect=\\\"non-scaling-stroke\\\"/><path d=\\\"M29.18,30.24H.11\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" vector-effect=\\\"non-scaling-stroke\\\"/></svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 19.8 18.8\\\"><path d=\\\"M17 6.1L15 .5c-.2-.4-.6-.6-1-.5L.5 5c-.4.1-.6.5-.5 1l2.1 5.9V8.7c0-1.4 1.1-2.6 2.5-2.6h3.6l4.2-3 2.5 3H17zm2 1.8H4.7c-.4 0-.7.4-.7.8V18c0 .4.3.8.8.8H19c.4 0 .8-.4.8-.8V8.7c0-.4-.3-.8-.8-.8zm-1 8.9H6.1v-1.7l1.8-4.3 2.7 3.4 2.6-2.6 3.3-1.2 1.4 3.2v3.2h.1z\\\" fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"/></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 16.6 16.6\\\"><path d=\\\"M8.3 0C3.7 0 0 3.7 0 8.3s3.7 8.3 8.3 8.3 8.3-3.7 8.3-8.3S12.9 0 8.3 0zM6.6 12.5L2.5 8.3l1.2-1.2 3 3L13 3.8 14.1 5l-7.5 7.5z\\\" fill-rule=\\\"evenodd\\\" clip-rule=\\\"evenodd\\\"/></svg>\"","<docs>\n# KoddeinFormUpload\n> Upload field\n\n@author Kevin Bastien <kevin@kffein.com>\n</docs>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs, watch, nextTick, onBeforeUnmount, PropType } from 'vue';\nimport { gsap } from 'vendors/gsap';\nimport { each, isEqual } from 'lodash';\nimport Upload from '../assets/svg/upload.svg?raw';\nimport Media from '../assets/svg/image.svg?raw';\nimport Success from '../assets/svg/success-field.svg?raw';\nimport { useI18n } from 'vue-i18n';\n\ninterface Data {\n  el?: HTMLElement,\n  files?: any,\n  fileform?: HTMLElement,\n  dragAndDropCapable: boolean,\n  internalValue: Array<File>,\n  errorSize: boolean,\n}\n\nconst KoddeinFormUpload = defineComponent({\n  name: \"KoddeinFormUpload\",\n  props: {\n    id: {\n      type: String,\n      required: true,\n    },\n    /** input value */\n    value: {\n      type: Array as PropType<Array<File>>,\n      default: () => [],\n    },\n    accept: {\n      type: Array,\n      default: () => [],\n    },\n    size: {\n      type: Number,\n      default: undefined,\n    },\n  },\n  emits: ['inputChange', 'onFocus', 'onBlur'],\n  setup(props, { emit }){\n    const {t} = useI18n()\n    const data:Data = reactive(\n      {\n        el: undefined,\n        files: undefined,\n        fileform: undefined,\n        dragAndDropCapable: false,\n        /** @param {any} internalValue - clone value\n         * - because we must not change props\n         * - in `watch` will sync value within internalValue\n         */\n        internalValue: [],\n        errorSize: false,\n      }\n    );\n\n    nextTick(() => {\n      if (data.fileform) {\n        data.dragAndDropCapable = determineDragAndDropCapable();\n    \n        // If drag and drop capable, then we continue to bind events to our elements.\n        if (data.dragAndDropCapable) {\n          // Listen to all of the drag events and bind an event listener to each for the fileform.\n          ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'].forEach((evt) => {\n            data.fileform?.addEventListener(evt, (e) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }, false);\n          });\n    \n          data.fileform.addEventListener('drop', handleFilesUpload);\n        }\n      }\n    })\n\n    onBeforeUnmount(() => {\n      if (data.dragAndDropCapable && data.fileform) {\n        data.fileform.removeEventListener('drop', handleFilesUpload);\n      }\n    });\n\n    /**\n     * Watch value, on value update -> set internal value\n     */\n    watch(\n      ()=>props.value,\n      (value) => { \n        if (value && value.length) {\n          data.internalValue = value;\n        }\n      },\n      { immediate:true }\n    )\n\n    /**\n     * Watch internal value, on value update -> send value to parent\n     */\n    watch(\n      ()=>data.internalValue,\n      (value) => { \n        if (isEqual(value, props.value)) return;\n        emit('inputChange', value);\n      },\n      { deep:true }\n    )\n\n    const addFiles = () => {\n      // click on actual input\n      data.files?.click();\n    }\n    const removeFile = (key:any) => {\n      // console.log(data.internalValue, data.internalValue[key], data.internalValue.splice(key, 1));\n      if (data.internalValue && data.internalValue[key]) {\n        data.internalValue.splice(key, 1);\n      }\n    }\n\n    const handleFilesUpload = (e?: Event) => {\n      if (data.files) {\n        const uploadedFiles = (e as DragEvent)?.dataTransfer?.files || data.files.files;\n  \n        // single file\n        // data.internalValue = uploadedFiles[0];\n\n        // multiple\n        each(uploadedFiles, (file) => {\n          const size = file.size / 1000 / 1000;\n          if (props.size && size <= props.size) {\n            data.internalValue.push(file);\n          } else if (props.size) {\n            data.errorSize = true;\n            setTimeout(() => {\n              data.errorSize = false;\n            }, 5000);\n          }\n          // if (data.el) {\n          //   loadPreview(data.el, data.internalValue.length - 1, file);\n          // }\n        });\n  \n        // reset files value so we can reupload basicly any file.\n        data.files.value = '';\n      }\n    }\n\n    // const loadPreview = (el: HTMLElement, key: number, file: File) => {\n    //   nextTick(() => {\n    //     // load actual preview of the image.\n    //     if (el && file.type.includes('image')) {\n    //       const preview = el.querySelector(`.file-item[data-key=\"${key}\"] .preview`) as HTMLImageElement;\n    //       if (preview) {\n    //         preview.src = URL.createObjectURL(file);\n    //         preview.onload = function() {\n    //           URL.revokeObjectURL(preview.src) // free memory\n    //           preview.classList.add('-loaded')\n    //         }\n    //       }\n    //     }\n    //   });\n    // };\n\n    const focus = () => {\n      emit('onFocus');\n    }\n    const blur = () => {\n      emit('onBlur');\n    }\n\n    return {\n      t,\n      ...toRefs(data), //data\n      // events\n      isFocus: focus,\n      isBlur: blur,\n      handleFilesUpload,\n      addFiles,\n      removeFile,\n      // svgs\n      Upload,\n      Media,\n      Success,\n      // anim\n      beforeEnter,\n      enter,\n      leave,\n      enterProgress,\n    };\n  },\n});\nexport default KoddeinFormUpload\n\n// Determines if the drag and drop functionality is in the window\nconst determineDragAndDropCapable = () => {\n  // Create a test element to see if certain events are present that let us do drag and drop.\n  const div = document.createElement('div');\n\n  // Check to see if the `draggable` event is in the element or the `ondragstart` and `ondrop` events are in the element. If they are, then we have what we need for dragging and dropping files.\n  return (('draggable' in div)\n          || ('ondragstart' in div && 'ondrop' in div))\n          && 'FormData' in window\n          && 'FileReader' in window;\n}\n\nconst beforeEnter = (el: Element) => {\n  gsap.set(el, {\n    opacity: 0,\n    y: 30,\n  });\n};\nconst enter = (el: Element, done: ()=>void) => {\n  gsap.to(el, {\n    duration: 0.3,\n    opacity: 1,\n    y: 0,\n    onComplete: done,\n    ease: 'power1.out',\n  });\n};\nconst leave = (el: Element, done: ()=>void) => {\n  gsap.to(el, {\n    duration: 0.3,\n    opacity: 0,\n    y: -30,\n    onComplete: done,\n    ease: 'power1.in',\n  });\n};\nconst enterProgress = (el: Element, done: ()=>void)  =>{\n  const value = el.querySelector('.value');\n  const item = el.parentNode as HTMLElement;\n  const randTime = Math.random() * (600) + 1000;\n  const tween = gsap.to(el.querySelector('.current'), {\n    duration: (randTime / 1000),\n    width: '100%',\n    ease: 'power1.inOut',\n    onUpdate: () => {\n      if (value) {\n        value.innerHTML = `${Math.floor((tween.progress() * 100))}%`;\n      }\n    },\n    onComplete: () => {\n      if (item) {\n        item.setAttribute('ready', 'true');\n      }\n      done();\n    },\n  });\n};\n\n</script>\n\n<template>\n  <div ref=\"el\" class=\"koddein-field-upload\">\n    <input :id=\"`field-${id}`\"\n           ref=\"files\"\n           :accept=\"accept.join(', ')\"\n           type=\"file\"\n           class=\"input file\"\n           multiple\n           @change=\"handleFilesUpload\"\n           @focus=\"isFocus\"\n           @blur=\"isBlur\"\n    >\n    <button ref=\"fileform\"\n            type=\"button\"\n            class=\"dragndrop\"\n            tabindex=\"-1\"\n            @click.prevent=\"addFiles\"\n    >\n      <i class=\"icon -upload\"\n         v-html=\"Upload\"\n      />\n      <span v-html=\"t('FORMS.upload.drop')\" />\n    </button>\n    <transition-group tag=\"div\"\n                      class=\"files\"\n                      @css=\"false\"\n                      @enter=\"enter\"\n                      @leave=\"leave\"\n                      @before-enter=\"beforeEnter\"\n    >\n      <div v-for=\"(file, key) in internalValue\"\n           :key=\"`file-${key}`\"\n           class=\"file-item\"\n           :data-key=\"key\"\n      >\n        <!-- <img :key=\"`file-preview-${key}`\"\n             class=\"preview\"\n             :alt=\"t('FORMS.upload.preview')\"\n        > -->\n        {{ file.name }}\n        <span class=\"remove-file\"\n              @click=\"removeFile(key)\"\n        />\n        <transition appear\n                    @css=\"false\"\n                    @enter=\"enterProgress\"\n        >\n          <div class=\"progress\">\n            <span class=\"bar\">\n              <span :style=\"{width: '0%'}\"\n                    class=\"current\"\n              />\n            </span>\n            <span class=\"value\"\n                  v-text=\"'0%'\" \n            />\n          </div>\n        </transition>\n      </div>\n    </transition-group>\n    <span v-if=\"errorSize\"\n          class=\"error\"\n          v-text=\"t('FORMS.upload.size', {size: size})\"\n    />\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n  /**\n   * TABLE OF CONTENT\n   * --------\n   *  - LAYOUT\n   *  - FILE\n   *  - THEMES\n   *  - DEBUG\n   *  - NO_SCOPE\n   */\n  \n  $c-f-main ?= black\n  $c-f-accent ?= black\n  $c-f-border ?= grey\n  $c-f-error ?= red\n\n  //  ===LAYOUT===\n  .koddein-field-upload\n    f(column, $align:flex-start)\n    &[error]\n      .dragndrop\n        &::after\n          border-color $c-f-error\n        .icon\n          fill $c-f-error\n        span\n          color $c-f-error\n      .file-item\n        color $c-f-error\n      .file-item::after\n        background $c-f-error\n      .remove-file\n        &::before\n        &::after\n          background $c-f-error\n\n  .input\n    position absolute\n    opacity 0\n    &:focus + .dragndrop::after\n      border-color $c-f-border-focus\n\n  .dragndrop\n    f(column, $align:center, $justify: center)\n    position relative\n    border none\n    background none\n    padding 0\n    margin 0\n    width 100%\n    padding 20px\n\n    +layout(mobile)\n      min-height 260px\n\n    +layout(desktop)\n      min-height 310px\n\n    &::after\n      content ''\n      absolute 0\n      border-radius $form_radius\n      border 1px solid $c-f-border\n\n    .icon\n      fill $c-f-main\n      rp(size, 30px 20px)\n    \n    span\n      margin-top 26px\n      rp(font-size, 1.8rem 1.5rem)\n      color $c-f-main\n      :deep()\n        strong\n          font-weight $fw-semibold\n  \n  .files\n    width 100%\n    margin-top 15px\n  \n  .file-item\n    position relative\n    f(row, $justify: flex-start, $wrap: wrap)\n    padding-bottom 30px\n    margin-bottom 15px\n    font-size 1.5rem\n    line-height 2.2\n    trans(all, 0.3s)\n    color $c-f-main\n\n    &[ready]\n      padding-bottom 15px\n      // transition-delay 300ms\n\n      .progress\n        opacity 0\n\n      .remove-file\n        opacity 1\n        transform scale(1) rotate(45deg)\n        transition-delay 300ms\n      \n      .preview.-loaded\n        opacity 1\n        transition-delay 300ms\n\n\n    &:last-child\n      margin-bottom 0\n\n    &::after\n      content ''\n      absolute auto 0 0 0\n      height 1px\n      background $c-f-border\n\n  .progress\n    pointer-events none\n    absolute bottom 25px left 0 right 85px\n    height 5px\n    f(row)\n    background $c-f-border\n    trans(all, 0.3s)\n\n    .current\n      absolute top 0 left 0 bottom 0\n      background $c-f-accent\n\n    .value\n      absolute top 50% right -85px\n      transform translateY(-50%)\n      font-family $ff-title\n      font-weight 700\n      font-size 1.9rem\n      line-height 1\n  \n  .preview\n    size 50px\n    object-fit cover\n    opacity 0\n    margin-right 20px\n    trans(all, 0.3s)\n  \n  .remove-file\n    cursor pointer\n    size 18px\n    transform scale(0) rotate(45deg)\n    transform-origin center center\n    opacity 0\n    trans(all, 0.3s)\n    absolute top 6.5px right 0\n\n    &:hover,\n    &:active\n      transform scale(0.8) rotate(45deg)\n\n    &::before\n      content ''\n      absolute top 10px left 0\n      size 20px 1px\n      background $c-f-accent\n      transition all 0.3s easing('in-out-quad')\n\n    &::after\n      content ''\n      absolute top 0 left 10px\n      size 1px 20px\n      background $c-f-accent\n  \n  .error\n    color $c-f-error\n    font-size 1.6rem\n    margin-top 15px\n\n\n  //  ===DEBUG===\n  [data-debug-mode=\"true\"] .KoddeinFormUpload\n    //\n</style>\n"],"names":["Upload$1","Media","Success","KoddeinFormUpload","defineComponent","props","emit","t","useI18n","data","reactive","nextTick","determineDragAndDropCapable","evt","_a","e","handleFilesUpload","onBeforeUnmount","watch","value","isEqual","addFiles","key","uploadedFiles","each","file","size","focus","blur","toRefs","removeFile","Upload","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_createElementVNode","accept","args","_withModifiers","_createVNode","_TransitionGroup","leave","_Fragment","_renderList","_createTextVNode","_toDisplayString","$event","_hoisted_6","_Transition","_withCtx","errorSize","_hoisted_7","_createCommentVNode"],"mappings":"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"}