{"version":3,"file":"BookScene-BVqZCVxq.js","sources":["../../src/vue/src/pages/Thematique/blocks/webgl/BookScene.ts"],"sourcesContent":["import { store as loaderStore } from 'components/ui/Loader/store';\nimport { WebGLRenderParams, WebGLSceneOptions } from \"components/WebGL/gl\";\nimport { WebGLScene } from 'components/WebGL/three/glScene';\nimport { damp } from 'maath/easing';\nimport emitter, { EVENTS } from \"plugins/store/events\";\nimport { mainWebGLRenderer } from \"plugins/webgl/three\";\nimport { store as interfaceStore } from \"store/interface\";\nimport { AmbientLight, BoxGeometry, CompressedTexture, DirectionalLight, Group, LinearToneMapping, Mesh, MeshBasicMaterial, MeshStandardMaterial, NearestFilter, PlaneGeometry, PMREMGenerator, Raycaster, SRGBColorSpace, Texture, Vector2 } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { RoomEnvironment } from 'three/examples/jsm/environments/RoomEnvironment.js';\nimport { gsap } from \"vendors/gsap\";\n\ninterface InteractiveMeshes {\n  tranche?: Mesh;\n  front?: Group;\n  back?: Mesh;\n  pageLeft?: Mesh;\n  pageRight?: Mesh;\n  click?: Mesh;\n  picto?:Mesh;\n}\n\nconst DELAY_CLICK = 350;\n\nconst boxGeom = new BoxGeometry(1,1, 1);\nconst blackMaterial = new MeshStandardMaterial({color:0x000000, roughness:0.5, metalness:0.5});\nconst whiteMaterial = new MeshStandardMaterial({color:0xFFFFFF, roughness:0.5, metalness:0.5});\n\nexport class BookScene extends WebGLScene {\n \n  handlers : Obj;\n  mouse : Vector2 = new Vector2();\n\n  raycaster : Raycaster;\n\n  container : Group;\n  interactiveMesh : InteractiveMeshes = {}\n\n  lights : Obj = {};\n\n  clickTimers = { start:0, end:0 };\n  isDown = false;\n\n  ready : boolean = false;\n  showButton : boolean = false;\n  \n  status = {\n    toggle: false,\n  }\n\n  orbitControls : OrbitControls;\n  pmremGenerator : PMREMGenerator\n\n  constructor(options:WebGLSceneOptions) {\n    // new glScene(options)\n    super(options);\n\n    mainWebGLRenderer!.toneMapping = LinearToneMapping;\n\n    this.handlers = {\n      clickDown: this.onClickDown.bind(this),\n      click: this.onClick.bind(this),\n      move: this.onMouseMove.bind(this),\n    }\n\n    if((this.settings?.tranche as string).charAt(0) === \"#\") blackMaterial.color.setStyle(this.settings?.tranche);\n\n    this.container = new Group();\n    this.container.position.z = -0.5;\n    this.container.visible = false;\n    this.orbitControls = new OrbitControls(this.getActiveCamera(), mainWebGLRenderer!.domElement);\n    this.orbitControls.enableDamping = true;\n    this.orbitControls.enablePan = false;\n    this.orbitControls.dampingFactor = 0.1\n    this.orbitControls.enableZoom = false;\n    \n    this.pmremGenerator = new PMREMGenerator(mainWebGLRenderer!);\n\t\tthis.pmremGenerator.compileEquirectangularShader();\n    this.scene.environment = this.pmremGenerator.fromScene(new RoomEnvironment()).texture;\n    this.scene.environmentIntensity = .25; \n\n    this.raycaster = new Raycaster();\n\n    return this;\n  }\n\n  async build() {\n    this.scene.add(this.container);\n\n    //---create the case\n    const frontGroup = new Group();\n    this.interactiveMesh.front = frontGroup;\n    this.container.add(this.interactiveMesh.front);\n\n    const coverFront = await loaderStore.getLoader(\"texture\")?.loadAsync(this.settings?.folder + this.settings?.recto);\n    if(coverFront) {\n      this.prepareTexture(coverFront)\n    }\n\n    const ratio = coverFront?.image.width / coverFront?.image.height;\n    const frontCover = new Mesh(boxGeom, [\n      blackMaterial, //tranche droite\n      blackMaterial, // tranche gauche\n      blackMaterial, //tranche haut\n      blackMaterial, //tranche bas\n      new MeshStandardMaterial({map:coverFront, roughness:0.5, metalness:0.5}), //front\n      blackMaterial //back\n    ]);\n      \n    frontCover.name = \"frontCover\";\n    frontCover.scale.set(2, 2 / ratio, 0.02)\n    frontCover.position.x = frontCover.scale.x / 2;\n    frontGroup.add(frontCover);\n    frontGroup.position.x = -frontCover.position.x;\n\n    \n    const trancheCover = new Mesh(boxGeom, new MeshStandardMaterial({color:this.settings?.tranche, roughness:0.5, metalness:0.5}));\n    trancheCover.scale.set(0.1, frontCover.scale.y, 0.02)\n    trancheCover.rotation.y = Math.PI / 2;\n    trancheCover.position.set((-frontCover.scale.x / 2), 0, -trancheCover.scale.x / 2);\n    this.interactiveMesh.tranche = trancheCover;\n    this.container.add(this.interactiveMesh.tranche);\n\n    const coverBack = await loaderStore.getLoader(\"texture\")?.loadAsync(this.settings?.folder + this.settings?.verso);\n    if(coverBack) {\n      this.prepareTexture(coverBack)\n    }\n\n    const backCover = new Mesh(boxGeom, [\n      blackMaterial, //tranche droite\n      blackMaterial, // tranche gauche\n      blackMaterial, //tranche haut\n      blackMaterial, //tranche bas\n      blackMaterial, //back\n      new MeshStandardMaterial({map:coverBack, roughness:0.5, metalness:0.5}), //front\n    ]);\n    backCover.scale.copy(frontCover.scale)\n    backCover.position.set(0, 0, -trancheCover.scale.x);\n    this.interactiveMesh.back = backCover;\n    this.container.add(this.interactiveMesh.back);\n\n    const texRight = await loaderStore.getLoader(\"texture\")?.loadAsync(this.settings?.folder + this.settings?.page_1);\n    if(texRight) {\n      this.prepareTexture(texRight)\n    }\n\n    const pageRight = new Mesh(boxGeom, [\n      whiteMaterial, //tranche droite\n      whiteMaterial, // tranche gauche\n      whiteMaterial, //tranche haut\n      whiteMaterial, //tranche bas\n      new MeshStandardMaterial({map:texRight, roughness:0.5, metalness:0.5}), //front\n      whiteMaterial //back\n    ]);\n    pageRight.scale.set(frontCover.scale.x, frontCover.scale.y * .98, 0.05);\n    pageRight.position.z = (-trancheCover.scale.x / 2) - 0.02;\n    pageRight.position.x = 0;\n    this.interactiveMesh.pageRight = pageRight;\n    this.container.add(this.interactiveMesh.pageRight);\n\n    const texLeft = await loaderStore.getLoader(\"texture\")?.loadAsync(this.settings?.folder + this.settings?.page_2);\n    if(texLeft) {\n      this.prepareTexture(texLeft)\n    }\n\n    const pageLeft = new Mesh(boxGeom, [\n      whiteMaterial, //tranche droite\n      whiteMaterial, // tranche gauche\n      whiteMaterial, //tranche haut\n      whiteMaterial, //tranche bas\n      whiteMaterial, //back\n      new MeshStandardMaterial({map:texLeft, roughness:0.5, metalness:0.5}), //front\n    ]);\n    pageLeft.scale.copy(pageRight.scale);\n    pageLeft.position.z = (trancheCover.scale.x / 2) - 0.08;\n    pageLeft.position.x = (pageLeft.scale.x / 2);\n    this.interactiveMesh.pageLeft = pageLeft;\n    frontGroup.add(this.interactiveMesh.pageLeft);\n\n    //-- Add Sprite\n    \n    const spriteTexture = loaderStore.getTexture(\"sprite-object\");\n    if(spriteTexture) {\n      this.prepareTexture(spriteTexture, false)\n      \n      const ratioTexture = spriteTexture.image.width / spriteTexture.image.height;\n      const button = new Mesh(new PlaneGeometry(1,1), new MeshBasicMaterial({map:spriteTexture, transparent:true}));\n      button.name = \"click\";\n      button.scale.set(1, 1/ratioTexture, 1).multiplyScalar(.5);\n      button.position.x = (frontCover.scale.x / 2);\n      button.position.z = 0.03;\n      button.userData.scale = button.scale.clone();\n      button.scale.set(0, 0, 0);\n      this.interactiveMesh.click = button;\n      this.container.add(button);\n    }\n    \n    if(interfaceStore.state.supports.install && !interfaceStore.hasInteract.book) {\n      const touchTexture = loaderStore.getTexture(\"touch-object\");\n      if(touchTexture) {\n        this.prepareTexture(touchTexture, false)\n        \n        const ratioTexture = touchTexture.image.width / touchTexture.image.height;\n        const button = new Mesh(new PlaneGeometry(1,1), new MeshBasicMaterial({map:touchTexture, transparent:true}));\n        button.name = \"picto\";\n        button.scale.set(1, 1/ratioTexture, 1).multiplyScalar(.5);\n        button.position.x = (frontCover.scale.x / 2);\n        button.position.z = 0.03;\n        button.userData.scale = button.scale.clone();\n        button.scale.set(0, 0, 0);\n        this.interactiveMesh.picto = button;\n        this.container.add(button);\n       }\n    }\n\n    //--- Add Lights\n    this.lights = {\n      ambient: new AmbientLight(0xffffff, 3),\n      directional: new DirectionalLight(0xFFFFFF, 1),\n    }\n    \n    this.container.add(this.lights.ambient);    \n    this.lights.directional.position.set(-3, 2, 7.5);\n    this.container.add(this.lights.directional); \n\n    emitter.emit(EVENTS.OBJECT_DETAIL_READY);\n\n    this.ready = true;\n    this.addEvents();\n\n    gsap.timeline()\n      .from(this.container.rotation, {z:Math.PI / 4, x:-Math.PI / 2, ease:\"power4.inOut\", duration:2})\n  }\n\n  addEvents() {\n    mainWebGLRenderer?.domElement.addEventListener(\"pointerdown\", this.handlers.clickDown);\n    mainWebGLRenderer?.domElement.addEventListener(\"pointerup\", this.handlers.click);\n    mainWebGLRenderer?.domElement.addEventListener(\"pointermove\", this.handlers.move);\n  }\n  \n  removeEvents() {\n    mainWebGLRenderer?.domElement.removeEventListener(\"pointerdown\", this.handlers.clickDown);\n    mainWebGLRenderer?.domElement.removeEventListener(\"pointerup\", this.handlers.click);\n    mainWebGLRenderer?.domElement.removeEventListener(\"pointermove\", this.handlers.move);\n  }\n\n  // Resize is called by default (by the plugin) when the scene is created\n  resize() {\n    // glScene.resize()\n    super.resize();\n  }\n\n  render(params:WebGLRenderParams) {\n  \n    if(!this.scene.children.length) {\n      super.render(params);\n      this.build();\n    }\n    else{\n      super.render(params);\n\n      if(this.ready) {\n\n        const frontCover = this.interactiveMesh.front?.getObjectByName(\"frontCover\") as Mesh;\n        const tranche = this.interactiveMesh.tranche as Mesh;\n\n        damp(this.interactiveMesh.front!.rotation, 'y', !this.status.toggle ? 0 : -Math.PI , .2, params.delta);\n        damp(this.interactiveMesh.front!.position, 'x', !this.status.toggle ? -frontCover.scale.x / 2 : (-frontCover.scale.x / 2) - tranche.scale.x , .2, params.delta);\n        damp(this.interactiveMesh.front!.position, 'z', !this.status.toggle ? 0 : -tranche.scale.x , .2, params.delta);\n        \n        damp(this.interactiveMesh.tranche!.rotation, 'y', !this.status.toggle ? Math.PI / 2 : 0 , .2, params.delta);\n        damp(this.interactiveMesh.tranche!.position, 'x', !this.status.toggle ? (-frontCover.scale.x / 2) : (-frontCover.scale.x / 2) - (tranche.scale.x / 2), .2, params.delta);\n        damp(this.interactiveMesh.tranche!.position, 'z', !this.status.toggle ? -(tranche.scale.x / 2) : -tranche.scale.x, .2, params.delta);\n        \n        \n        damp(this.interactiveMesh.pageRight!.position, 'x', !this.status.toggle ? 0 : -tranche.scale.x / 2 + 0.02, .2, params.delta);\n        damp(this.interactiveMesh.pageLeft!.position, 'x', !this.status.toggle ? (this.interactiveMesh.pageLeft!.scale.x /2) : (this.interactiveMesh.pageLeft!.scale.x /2) -(tranche.scale.x /2), .2, params.delta);\n        \n        //----\n        damp(this.interactiveMesh.pageRight!.scale, 'z', !this.status.toggle ? 0.05 : 0.02, .2, params.delta);\n        damp(this.interactiveMesh.pageLeft!.scale, 'z', !this.status.toggle ? 0.05 : 0.02, .2, params.delta);\n        \n        //\n        damp(this.container.position, 'x', !this.status.toggle ? 0 : this.container.scale.x, .2, params.delta);\n        damp(this.container.position, 'z', !this.status.toggle ? -0.5 : 1, .2, params.delta);\n      }\n    }\n    this.orbitControls.update();\n  }\n\n  dispose() {\n    // glScene.dispose()\n    // dispose every geometry and material for every Mesh children\n    this.disposeGeometries(this.container);\n    this.interactiveMesh = {};\n    super.dispose(); \n    this.removeEvents();\n    document.body.style.cursor = 'default';\n  }\n\n  // Click Down\n  onClickDown() : void {\n    this.clickTimers.start = Date.now(); \n    this.clickTimers.end = 0; \n    this.isDown = true;\n  }\n\n  // Click Up\n  onClick(e:MouseEvent) : void {\n    this.clickTimers.end = Date.now();\n    this.isDown = false;\n    \n    const isRealClick = this.clickTimers.end - this.clickTimers.start;\n    if(isRealClick <= DELAY_CLICK) {\n      if(this.interactiveMesh.front) {\n        this.getMousePosition(e);\n        \n        this.checkIntersection(e, \"click\");\n      }\n    }  \n  }\n\n  onMouseMove(e:PointerEvent) : void {\n    \n    if(interfaceStore.state.supports.install) {\n      this.userInteract();\n      return;\n    }\n    \n    this.getMousePosition(e);\n\n    if(this.interactiveMesh.front) {\n      this.checkIntersection(e, \"move\");\n    }\n  }\n\n  // Get The Real Mouse Position with the offset position to the top left point\n  getMousePosition(evt : MouseEvent) {\n    const el = evt.currentTarget as HTMLElement;\n    const bounds = el.getBoundingClientRect();\n\n    let x = 0,\n        y = 0;\n\n    x = evt.clientX - bounds?.left;\n    y = evt.clientY - bounds?.top;\n\n    this.mouse.x = (x / mainWebGLRenderer!.domElement.offsetWidth) * 2 - 1;\n    this.mouse.y = -(y / mainWebGLRenderer!.domElement.offsetHeight) * 2 + 1;\n  }\n\n  show() {\n    this.container.visible = true;\n  }\n\n  toggleShowingInside(value : boolean) {\n    if(value) {\n      if(!this.interactiveMesh.picto) {\n        gsap.timeline()\n          .set(this.interactiveMesh.click!.scale, {x:0, y:0, z:0}, 0)\n          .to(this.interactiveMesh.click!.scale, {x:this.interactiveMesh.click?.userData.scale.x, y:this.interactiveMesh.click?.userData.scale.y, z:this.interactiveMesh.click?.userData.scale.z, ease:\"power4.out\", overwrite:false, duration:.5}, .5)\n      }\n      else{\n        gsap.timeline()\n          .set(this.interactiveMesh.picto!.scale, {x:0, y:0, z:0}, 0)\n          .to(this.interactiveMesh.picto!.scale, {x:this.interactiveMesh.picto?.userData.scale.x, y:this.interactiveMesh.picto?.userData.scale.y, z:this.interactiveMesh.picto?.userData.scale.z, ease:\"power4.out\", overwrite:false, duration:.5}, .5)\n      }\n    }\n  }\n\n  prepareTexture(tex : Texture | CompressedTexture, noMipmaps = true) {\n    tex.colorSpace = SRGBColorSpace;\n    if(noMipmaps) {\n      tex.generateMipmaps = false;\n      tex.minFilter = NearestFilter;\n    }\n  }\n\n  checkIntersection(e:MouseEvent, type:string = \"click\") {\n    \n    this.raycaster.setFromCamera(this.mouse, this.getActiveCamera());\n\n    // calculate objects intersecting the picking ray\n\t  const intersection = this.raycaster.intersectObject( this.interactiveMesh.click  as Mesh );\n\n    //change body cursor\n    if(type === 'move') {\n      const hasIntersection = intersection.length > 0;\n      document.body.style.cursor = hasIntersection ? 'pointer' : 'default';\n    }\n\n    //handle the click and reduce the scene\n    if(intersection.length && type === 'click') {\n      this.status.toggle = !this.status.toggle;\n    \n      gsap.timeline()\n        .to(this.interactiveMesh.click!.scale, {x:0, y:0, z:0, ease:\"power4.out\",  duration:.5}, 0)\n        .to(this.interactiveMesh.click!.scale, {x:this.status.toggle ? .35 : this.interactiveMesh.click?.userData.scale.x, y:this.status.toggle ? .35 : this.interactiveMesh.click?.userData.scale.y, z:this.status.toggle ? .35 : this.interactiveMesh.click?.userData.scale.z, ease:\"power4.out\", overwrite:false, duration:.5}, 1)\n    }\n  }\n\n  revertToInteractive() {}\n\n  userInteract() {\n    if(!interfaceStore.hasInteract.book) {\n      interfaceStore.toggleInteraction(true, 'book');\n    \n      if(this.interactiveMesh.picto) {\n        gsap.timeline()\n          .to(this.interactiveMesh.picto!.scale, {x:0, y:0, z:0, ease:\"power4.out\",  duration:.5, onComplete: () => {\n            (this.interactiveMesh.picto?.material as MeshBasicMaterial).map?.dispose();\n            this.container.remove(this.interactiveMesh.picto!);\n            this.interactiveMesh.picto = undefined;\n          }}, 0)\n          .set(this.interactiveMesh.click!.scale, {x:0, y:0, z:0}, 0)\n          .to(this.interactiveMesh.click!.scale, {x:this.interactiveMesh.click?.userData.scale.x, y:this.interactiveMesh.click?.userData.scale.y, z:this.interactiveMesh.click?.userData.scale.z, ease:\"power4.out\", overwrite:false, duration:.5}, .7);\n      }\n    }\n  }\n}\n\n"],"names":["DELAY_CLICK","boxGeom","BoxGeometry","blackMaterial","MeshStandardMaterial","whiteMaterial","BookScene","WebGLScene","options","__publicField","Vector2","mainWebGLRenderer","LinearToneMapping","_a","_b","Group","OrbitControls","PMREMGenerator","RoomEnvironment","Raycaster","frontGroup","coverFront","loaderStore","ratio","frontCover","Mesh","trancheCover","_d","coverBack","_e","_f","backCover","texRight","_h","_i","pageRight","texLeft","_k","_l","pageLeft","spriteTexture","ratioTexture","button","PlaneGeometry","MeshBasicMaterial","interfaceStore","touchTexture","AmbientLight","DirectionalLight","emitter","EVENTS","gsap","params","tranche","damp","evt","bounds","x","y","value","_c","tex","noMipmaps","SRGBColorSpace","NearestFilter","type","intersection","hasIntersection"],"mappings":"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"}