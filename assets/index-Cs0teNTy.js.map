{"version":3,"file":"index-Cs0teNTy.js","sources":["../../src/vue/node_modules/lodash/isNumber.js","../../src/vue/src/components/UiKit/Swiper/index.vue"],"sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","<docs>\n  # ui-swiper\n  swiper system\n  \n</docs>\n\n<script lang=\"ts\">\nimport { templateRef, until } from '@vueuse/core';\nimport scrollStore from 'components/SmoothScroll/store';\nimport { motion } from 'config';\nimport { each, isNumber, merge } from 'lodash';\nimport Swiper from 'swiper';\n////import { Autoplay, FreeMode, Keyboard, Navigation, Pagination, Scrollbar, Thumbs } from 'swiper/modules';\nimport 'swiper/css';\nimport 'swiper/css/effect-creative';\nimport type { AutoplayOptions } from 'swiper/types/modules/autoplay';\nimport type { NavigationOptions } from 'swiper/types/modules/navigation';\nimport type { PaginationOptions } from 'swiper/types/modules/pagination';\nimport type { ScrollbarOptions } from 'swiper/types/modules/scrollbar';\nimport type { SwiperOptions } from 'swiper/types/swiper-options';\nimport { computed, defineComponent, nextTick, onBeforeUnmount, onMounted, PropType, reactive, toRefs, useSlots, watch } from 'vue';\n\nimport { gsap, ScrollTrigger } from 'vendors/gsap';\n//Swiper.use([Navigation, Pagination, Autoplay, Scrollbar, Keyboard, Thumbs, FreeMode]);\n\n//import 'swiper/css/effect-creative';\nexport interface Data {\n  swiper?: Swiper,\n  thumbSwiper?: Swiper,\n  options?: SwiperOptions,\n  optionsThumb?: SwiperOptions,\n  index: number,\n  allowSlidePrev: boolean,\n  allowSlideNext: boolean,\n}\n\nconst UiSwiper = defineComponent({\n  name: \"UiSwiper\",\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    /** Number of slides per view : 1 or `auto` */\n    slidesPerView: {\n      type: [Number, String] as PropType<number | 'auto'>,\n      default: 'auto',\n    },\n    /** Swiperjs options - Attention, will override default props : https://swiperjs.com/swiper-api#parameters */\n    options: {\n      type: Object as PropType<SwiperOptions>,\n      default: undefined,\n    },\n    /** easy pagination : https://idangero.us/swiper/api/#pagination */\n    pagination: {\n      type: [Boolean, Object] as PropType<boolean | PaginationOptions>,\n      default: false,\n    },\n    /** easy navigation : https://idangero.us/swiper/api/#navigation */\n    navigation: {\n      type: [Boolean, Object] as PropType<boolean | NavigationOptions>,\n      default: false,\n    },\n    /** easy autoplay : https://idangero.us/swiper/api/#autoplay */\n    autoplay: {\n      type: [Boolean, Object] as PropType<boolean | AutoplayOptions>,\n      default: false,\n    },\n    /** if true (and autoplay), display some progressbar for autoplay */\n    progressBar: {\n      type: Boolean,\n      default: false,\n    },\n    /** if true display a scrollbar */\n    scrollbar: {\n      type: [Boolean, Object] as PropType<boolean | ScrollbarOptions>,\n      default: false,\n    },\n\n    /** Distance between slides in px */\n    spaceBetween: {\n      type: Number,\n      default: 0,\n    },\n    /** is slides centered */\n    centeredSlides: {\n      type: Boolean,\n      default: false,\n    },\n    /** is swiper loop */\n    loop: {\n      type: Boolean,\n      default: false,\n    },\n    thumb: {\n      type: Boolean,\n      default: false,\n    },\n    /** listen to onChange event */\n    onChange: {\n      type: Boolean,\n      default: false,\n    },\n    watchEnd: {\n      type: Boolean,\n      default: false,\n    },\n    /** if true display a custom cursor hold & grab */\n    cursor: {\n      type: Boolean,\n      default: true,\n    },\n    /** if true disply overflow scroll from swiper container */\n    overflow: {\n      type: Boolean,\n      default: false,\n    },\n    /** if true show intro animation */\n    animated: {\n      type: Boolean,\n      default: true,\n    },\n    /** if we need to overwritte the intro animation */\n    animation: {\n      type: Object as PropType<GSAPAnimation>,\n      default: undefined,\n    },\n    /** Swiperjs thumb options - Attention, will override default props : https://swiperjs.com/swiper-api#parameters */\n    optionsThumb: {\n      type: Object as PropType<SwiperOptions>,\n      // default: () => {\n      //   return {\n      //     spaceBetween: 10,\n      //     slidesPerView: 2,\n      //     FreeMode: true,\n      //     breakpoints: {\n      //       768: {\n      //         slidesPerView: 4,\n      //       }\n      //     },\n      //   }\n      // }\n      default: null,\n    },\n  },\n  emits: [\n    'slide-change',  // on slide change\n    'reach-end' // at last slide\n  ],\n  setup(props, { emit }) {\n    const { scrollable } = toRefs(scrollStore.state);\n\n    const data: Data = reactive(\n      {\n        swiper: undefined,\n        thumbSwiper: undefined,\n        options: undefined,\n        index: 0,\n        allowSlidePrev: false,\n        allowSlideNext: false,\n      }\n    );\n    const el = templateRef<HTMLElement | null>('el', null)\n    const thumbElem = templateRef<HTMLElement | null>('thumbElem', null)\n    const wrapper = templateRef<HTMLElement | null>('wrapper', null)\n    const wrapperThumb = templateRef<HTMLElement | null>('wrapperThumb', null)\n    const pagination = templateRef('pagination')\n    const next = templateRef('next')\n    const prev = templateRef('prev')\n    const progressBar = templateRef('progressBar')\n    const slots = useSlots();\n\n    const isSingle = computed(() => {\n      return wrapper?.value ? isNumber(wrapper?.value.children?.length) && wrapper?.value.children?.length <= 1 : false;\n    })\n\n    onMounted(() => {\n      nextTick(() => {\n        if (el.value && wrapper?.value) {\n          data.swiper = createSwiper() as Swiper;\n          initSt();\n        }\n      })\n    });\n\n\n    onBeforeUnmount(() => {\n      if (data.swiper) {\n        // will destroy instance but keep style aka keep currentslide active. :magic:\n        data.swiper.destroy(true, false);\n        data.swiper = undefined;\n      }\n    });\n\n    // Watch resize\n    watch(\n      () => window.innerWidth,\n      () => {\n        update();\n      },\n    )\n\n    const initSt = async () => {\n      if (motion && props.animated) {\n        await until(scrollable).toBe(true)\n        const children = wrapper?.value?.children;\n        const slides = [].slice.call(children);\n        const tween = props.animation ? props.animation : gsap.to(slides, { opacity: 1, y: 0, stagger: 0.09, duration: 0.4, delay: 0.2 })\n\n        const st = ScrollTrigger.create({\n          // markers: true,\n          trigger: el.value,\n          start: 'top bottom',\n          end: 'bottom top',\n          animation: gsap.timeline({\n            onComplete: () => {\n              nextTick(() => { st.kill() }) // only 1time ?\n            }\n          }).add(tween),\n        })\n      }\n    }\n    initSt();\n\n    // compute all swiper options withh curent props + add default specs\n    const computeOptions = (): SwiperOptions => {\n      const opts: SwiperOptions = {\n        loop: props.loop,\n        centeredSlides: props.centeredSlides,\n        //'slides-per-view': props.slidesPerView ? props.slidesPerView as number | 'auto' : 1,\n        spaceBetween: props.spaceBetween,\n        pagination: computePagination(),\n        navigation: computeNavigation(),\n        autoplay: computeAutoplay(),\n        scrollbar: computeScrollbar(),\n        threshold: 0,\n        resistanceRatio: 0.1,\n        longSwipesRatio: 0.1,\n        speed: 800,\n        grabCursor: true,\n        slideToClickedSlide: false,\n        touchStartPreventDefault: false,\n        watchOverflow: true,\n        keyboard: {\n          enabled: true,\n          onlyInViewport: true,\n          pageUpDown: false,\n        },\n        ...props.options,\n      };\n      if (isSingle.value) {\n        opts.loop = false;\n        opts.grabCursor = false;\n      }\n\n      if (props.cursor) {\n        opts.grabCursor = false;\n      }\n\n      return opts as SwiperOptions;\n    }\n\n    /* compute pagination to easy set up if pass `pagination` props to true */\n    const computePagination = (): boolean | PaginationOptions => {\n      if (!props.pagination || isSingle.value) return false;\n      if (props.pagination === true) {\n        return {\n          el: pagination?.value,\n          // el: '.swiper-pagination',\n          clickable: true,\n          type: 'bullets',\n        } as PaginationOptions;\n      }\n      return props.pagination as PaginationOptions;\n    }\n\n    /* compute navigation to easy set up if pass `navigation` props to true */\n    const computeNavigation = (): boolean | NavigationOptions => {\n      if (!props.navigation) return false;\n      if (props.navigation === true) {\n        return {\n          nextEl: next?.value,\n          prevEl: prev?.value,\n        } as NavigationOptions;\n      }\n      return props.navigation as NavigationOptions;\n    }\n\n    /* compute autoplay to easy set up if pass `autoplay` props to true */\n    const computeAutoplay = (): boolean | AutoplayOptions => {\n      if (!props.autoplay || isSingle.value) return false;\n      if (props.autoplay === true) {\n        return {\n          delay: 6000,\n          disableOnInteraction: false,\n        } as AutoplayOptions;\n      }\n      return props.autoplay as AutoplayOptions;\n    }\n\n    /* compute scrollbar to easy set up if pass `scrollbar` props to true */\n    const computeScrollbar = (): boolean | ScrollbarOptions => {\n      if (!props.scrollbar || isSingle.value) return false;\n      if (props.scrollbar === true) {\n        return {\n          el: '.swiper-scrollbar',\n          hide: false,\n          dragSize: 235,\n        } as ScrollbarOptions;\n      }\n      return props.scrollbar as ScrollbarOptions;\n    };\n\n    /* actual swiper cration with all the computed options */\n    const createSwiper = (): Swiper => {\n      data.options = computeOptions();\n      // ensure `swiper-slide` class to slides\n      if (wrapper?.value && wrapper?.value.children.length) {\n        each(wrapper.value.children, (node) => {\n          node?.classList.add('swiper-slide');\n        });\n      }\n\n      if (props.thumb) {\n        if (wrapperThumb?.value && wrapperThumb?.value.children.length) {\n          each(wrapperThumb.value.children, (node) => {\n            node?.classList.add('swiper-slide');\n          });\n        }\n        const thumbsOptions = {\n          spaceBetween: 10,\n          slidesPerView: 2,\n          FreeMode: true,\n          breakpoints: {\n            768: {\n              slidesPerView: 4,\n            }\n          },\n          ...props.optionsThumb\n        }\n        data.thumbSwiper = new Swiper(thumbElem.value as HTMLElement, thumbsOptions as SwiperOptions) as Swiper;\n\n        data.options.thumbs = {\n          swiper: data.thumbSwiper\n        }\n      }\n\n      const swiper: Swiper = new Swiper(el.value as HTMLElement, data.options as SwiperOptions) as Swiper;\n      swiper.on('slideChange', () => {\n        if (data.swiper) {\n          data.index = data.swiper.realIndex;\n        }\n        if (props.onChange) emit('slide-change');\n      })\n      if (props.watchEnd) {\n        swiper.on('reachEnd', () => emit('reach-end', true));\n      }\n\n      if (props.progressBar && props.autoplay) {\n        swiper.on('progress', animProgressBar);\n      }\n\n      setTimeout(() => {\n        update();\n      }, 1000);\n\n      return swiper as Swiper;\n    };\n\n    /* anim progress bar if enabled */\n    const animProgressBar = () => {\n      if (progressBar?.value && data.options && data.options?.autoplay && data.options?.autoplay !== true && data.options?.autoplay?.delay) {\n        const duration = Math.floor(data.options?.autoplay?.delay / 1000);\n        gsap.timeline()\n          .set(progressBar?.value, { transformOrigin: 'left center', scaleX: 0 })\n          .fromTo(progressBar?.value, { scaleX: 0 }, { scaleX: 1, duration, ease: 'power1.easeIn' });\n      }\n    };\n\n    /* just in case we actually need it, probably with the watch system */\n    const update = () => {\n      data.swiper?.update();\n    };\n\n    watch(() => props.options,\n      (opts) => {\n        if (!data.swiper) return\n        merge(data.swiper?.params, opts)\n      })\n\n    // return public data for our template\n    return {\n      ...toRefs(data), //data for refs...\n      slots,\n      // hasCursor: props.cursor, // not reactive\n      hasProgressBar: props.progressBar,\n      // if true, compute auto so add slots - !== if object may be external so no slot here\n      hasNavigation: props.pagination === true,\n      hasPagination: !!computePagination(),\n      hasScrollbar: !!computeScrollbar(),\n      computeOptions,\n      isSingle,\n      // //functions\n    };\n  },\n});\nexport default UiSwiper\n\n</script>\n\n<template>\n  <div class=\"UiSwiper\">\n    <!-- Slider main container -->\n    <div ref=\"el\"\n         class=\"swiper-container\"\n         :class=\"{\n           'cursor-swiper': (cursor /*&& !isSingle*/),\n           '-overflow': overflow\n         }\"\n         :data-cursor=\"cursor\"\n    >\n      <!-- Additional required wrapper -->\n      <component :is=\"tag\"\n                 ref=\"wrapper\"\n                 class=\"swiper-wrapper\"\n      >\n        <!-- @slot Default - slides - will auto append 'swiper-slide' class -->\n        <slot />\n      </component>\n\n      <!-- need `pagination` props to true  -->\n      <div v-if=\"hasPagination\"\n           ref=\"pagination\"\n           :class=\"`swiper-pagination ${cursor ? 'cursor-remove' : ''}`\"\n      />\n\n      <!-- need `progress-bar` props to true  -->\n      <div v-if=\"hasProgressBar\"\n           ref=\"progressBar\"\n           :class=\"`swiper-progress-bar ${cursor ? 'cursor-remove' : ''}`\"\n      />\n\n      <!-- need `navigation` props to true (default)  -->\n      <button v-if=\"hasNavigation\"\n              ref=\"prev\"\n              :class=\"`swiper-button-prev _no-btn ${cursor ? 'cursor-remove' : ''}`\"\n      />\n\n      <!-- need `navigation` props to true (default)  -->\n      <button v-if=\"hasNavigation\"\n              ref=\"next\"\n              :class=\"`swiper-button-next _no-btn ${cursor ? 'cursor-remove' : ''}`\"\n      />\n\n      <!-- need `scrollbar` props to true  -->\n      <div v-if=\"hasScrollbar\" class=\"swiper-scrollbar\">\n        <div :class=\"`swiper-scrollbar-drag ${cursor ? 'cursor-remove' : ''}`\" />\n      </div>\n    </div>\n    <div v-if=\"thumb\"\n         ref=\"thumbElem\"\n         class=\"thumbs swiper-container\"\n         :class=\"{\n           'cursor-link': (cursor /*&& !isSingle*/),\n         }\"\n         :data-cursor=\"cursor\"\n    >\n      <!-- Additional required wrapper -->\n      <component :is=\"tag\"\n                 ref=\"wrapperThumb\"\n                 class=\"swiper-wrapper\"\n      >\n        <!-- @slot Thumbs -> fallback to default if empty - slides - will auto append 'swiper-slide' class -->\n        <slot v-if=\"!slots.thumbs\" />\n        <slot v-else name=\"thumbs\" />\n      </component>\n    </div>\n  </div>\n</template>\n\n<style lang=\"stylus\">\n  .UiSwiper\n    overflow visible\n    \n  .swiper-container\n    overflow hidden\n    &.-overflow\n      overflow visible\n  \n    .swiper-wrapper\n      :deep(> *)\n        opacity 0\n        transform translateY(10px)\n        \n  .swiper-button-disabled\n    opacity 0.1\n    pointer-events none\n  \n  .swiper-pagination-bullet\n    cursor pointer\n    outline none\n  \n  .swiper-progress-bar\n    display block\n    margin-top 10px\n    height 5px\n    background $c-black\n    opacity 0.55\n\n  .swiper-slide\n    flex-shrink 0\n  \n  .thumbs\n    margin-top 10px\n  \n    .swiper-slide\n      trans(opacity)\n      opacity 1\n\n  \n    .swiper-slide-thumb-active\n      opacity 0.1\n</style>\n"],"names":["baseGetTag","require$$0","isObjectLike","require$$1","numberTag","isNumber","value","isNumber_1","UiSwiper","defineComponent","props","emit","scrollable","toRefs","scrollStore","data","reactive","el","templateRef","thumbElem","wrapper","wrapperThumb","pagination","next","prev","progressBar","slots","useSlots","isSingle","_a","_b","onMounted","nextTick","createSwiper","initSt","onBeforeUnmount","watch","update","motion","children","slides","tween","gsap","st","ScrollTrigger","computeOptions","computeNavigation","computeScrollbar","opts","computePagination","computeAutoplay","each","node","thumbsOptions","Swiper","_hoisted_2","_hoisted_3","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","overflow","cursor","_createBlock","_resolveDynamicComponent","_renderSlot","hasPagination","_normalizeClass","_createCommentVNode","thumb","_withCtx","_hoisted_4"],"mappings":"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","x_google_ignoreList":[0]}