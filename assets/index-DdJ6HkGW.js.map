{"version":3,"file":"index-DdJ6HkGW.js","sources":["../../src/vue/src/components/UiKit/Pagination/assets/arrow.svg?raw","../../src/vue/src/components/UiKit/Pagination/index.vue"],"sourcesContent":["export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 19.44 18.8\\\"><path d=\\\"M0,9.39H18.73\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\"/><path d=\\\"M9.81,18.45l8.92-9.05L9.81,.35\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\"/></svg>\\n\"","<docs>\n# ui-pagination\n\nsimple Pagination system -> will emit pagination event update -> Parent is supposed to control this items\n\n</docs>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, reactive, toRefs, computed, nextTick, ref } from 'vue';\nimport { templateRef, useIntersectionObserver, debouncedWatch } from '@vueuse/core'\nimport { gsap } from 'vendors/gsap';\nimport useFlow from 'utils/flow';\nimport { store as interfaceStore } from 'plugins/store/interface';\nimport IconArrow from './assets/arrow.svg?raw';\n\nexport interface Data {\n  selectedPage: number,\n  played: boolean,\n  tlIntro?: O<gsap.core.Timeline>,\n}\n\nconst UiPagination = defineComponent({\n  name: \"UiPagination\",\n  props:{\n    /** current page - start to 1 - not 0 */\n    page: {\n      type: Number,\n      default: 1,\n    },\n    /** total pages */\n    totalPages: {\n      type: Number,\n      default: 1,\n    },\n    /** root el's HTML tag */\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  emits: ['input'],\n  setup(props, ctx){\n    const data: Data = reactive(\n      {\n        selectedPage: props.page,\n        played: false,\n        tlIntro: undefined,\n      }\n    );\n    const el = templateRef<HTMLElement | null>('el', null)\n    const list = ref<any>(undefined);\n    const bg = templateRef<HTMLElement | null>('bg', null)\n\n    const { viewport } = toRefs(interfaceStore.state);\n\n    const { onInit, onInitUi } = useFlow()\n\n    onInit(() => {\n      hoverElement(data.selectedPage)\n    })\n    \n    onInitUi(() => {\n      gsap.set(el.value, {y: 20, opacity: 0});\n      data.tlIntro = gsap.timeline({paused: true, delay: 0.1})\n        .to(el.value, {y: 0, opacity: 1})\n      \n      useIntersectionObserver(\n        el,\n        ([{ isIntersecting }]) => {\n          if (isIntersecting && !data.played) {\n            data.played = true;\n            data.tlIntro?.play();\n          }\n        },\n        {\n          threshold: 0.3\n        }\n      )\n    });\n\n    const pagination = computed(() => {\n      const pages = {\n        first: 1,\n        last: props.totalPages,\n        current: data.selectedPage,\n        next: null,\n        prev: null,\n      };\n\n      const response = [];\n\n      // nav <\n      // if (pages.current > pages.first) {\n      //   response.push({\n      //     id: 'nav-previous',\n      //     type: 'navigation',\n      //     value: pages.current - 1,\n      //   });\n      // }\n      // page 1st\n      response.push({\n        id: 'page-first',\n        type: 'page',\n        value: 1,\n        selected: pages.current === 1,\n        edge: pages.current <= 3,\n      });\n\n      // ...\n      if (pages.current > 3 && pages.last > 3) {\n        response.push({\n          id: 'elipsis-first',\n          type: 'elipsis',\n          edge: true,\n        });\n      }\n\n      // page prev\n      if (pages.current > 2 && pages.last > 2) {\n        // if (pages.current == pages.last && pages.current > 3 && pages.last > 3) {\n        //   const value = pages.current - 2;\n        //   response.push({\n        //     id: 'page-next',\n        //     type: 'page',\n        //     value,\n        //     selected: false,\n        //     edge: true,\n        //   });\n        // }\n        const value = pages.current - 1;\n        response.push({\n          id: 'page-previous',\n          type: 'page',\n          value,\n          selected: false,\n          edge: true,\n        });\n      }\n      // page current\n      if (pages.current > 1 && pages.current < pages.last) {\n        response.push({\n          id: 'page-current',\n          type: 'page',\n          value: pages.current,\n          selected: true,\n          edge: true,\n        });\n      }\n      // page next\n      if (pages.current < (pages.last - 1) && pages.last > 2) {\n        const value = pages.current + 1;\n        response.push({\n          id: 'page-next',\n          type: 'page',\n          value,\n          selected: false,\n          edge: true,\n        });\n      }\n      // if (pages.current == 1 && pages.current < (pages.last - 2) && pages.last > 3) {\n      //   const value = pages.current + 2;\n      //   response.push({\n      //     id: 'page-next',\n      //     type: 'page',\n      //     value,\n      //     selected: false,\n      //     edge: true,\n      //   });\n      // }\n\n      // ...\n      if (pages.current < (pages.last - 2) && pages.last > 3) {\n        response.push({\n          id: 'elipsis-last',\n          type: 'elipsis',\n          edge: true,\n        });\n      }\n\n      // page last\n      response.push({\n        id: 'page-last',\n        type: 'page',\n        value: pages.last,\n        selected: pages.current === pages.last,\n        edge: pages.current >= pages.last - 2,\n      });\n\n      return response;\n    })\n\n    // watching value of a reactive object (watching a getter)\n    watch(() => props.page, (newVal) => { \n      data.selectedPage = newVal;\n      setTimeout(() => {\n        hoverElement(newVal)\n      }, 220);\n    });\n\n\n    /**\n     * Emit an `input` event on change page\n     * and prevent outside edges\n     */\n    const update = (page:number) => {\n      if (page < 1 || page > props.totalPages) return;\n\n      /** @event input - on change page | @param page - start to one\n       */\n      ctx.emit('input', page);\n    };\n\n    const hoverElement = (index?: number, fromWatch?:boolean) => {\n      if (!index) return;\n      nextTick(() => {\n        const cta = list.value?.$el?.querySelector(`[data-value=\"${index}\"]`);\n        const elBox = list.value?.$el?.getBoundingClientRect();\n        if (cta && elBox) {\n          const box = cta.getBoundingClientRect();\n          let width = box.width;\n          let left = box.x - elBox.x;\n          width += 2\n          left -= 2\n          \n          if (!fromWatch) {\n            // hovered.value = true\n          }\n          gsap.to(bg.value, { alpha: 1, width, left, duration: 1, ease: 'expo.out', overwrite: true})\n          \n        }\n      })\n    }\n\n    const leaveHover = () => {\n      if (data.selectedPage) {\n        hoverElement(data.selectedPage);\n      } else {\n        nextTick(() => {\n          gsap.to(bg.value, { alpha: 0, duration: 1, ease: 'expo.out', overwrite: true})\n        })\n      }\n    }\n\n    debouncedWatch(\n      viewport,\n      () => {\n        leaveHover()\n      },\n      { debounce: 300, deep: true }\n    )\n\n    // debouncedWatch(\n    //   viewport,\n    //   () => {\n    //     leaveHover()\n    //   },\n    //   { debounce: 300, deep: true }\n    // )\n\n    return {\n      ...props,\n      list,\n      ...toRefs(data), //data\n      pagination,\n      IconArrow,\n      // functions\n      update,\n      hoverElement,\n      leaveHover,\n    };\n  },\n});\nexport default UiPagination\n</script>\n\n<template>\n  <component :is=\"tag\"\n             v-if=\"totalPages>1\"\n             ref=\"el\"\n   \n             class=\"UiPagination\"\n  >\n    <nav class=\"content\"\n         aria-label=\"menu-pagination\"\n         role=\"navigation\"\n    >\n      <ui-button aria-label=\"button previous\"\n                 :disabled=\"selectedPage <= 1\"\n                 class=\"btn -nav -prev\"\n                 theme=\"reset\"\n                 @click.prevent=\"update(selectedPage-1)\"\n      >\n        <span class=\"arrow\" v-html=\"IconArrow\" />\n      </ui-button>\n      <transition-group ref=\"list\"\n                        tag=\"ol\"\n                        name=\"fade\"\n                        class=\"list\"\n                        @mouseleave=\"leaveHover\"\n      >\n        <li v-for=\"{id, type, edge, value, selected} in pagination\"\n            :key=\"`pagination-item-${value}`\"\n            :class=\"`item`\"\n            :data-type=\"type\"\n            :data-id=\"id\"\n            :data-edge=\"edge\"\n            @mouseenter=\"hoverElement(value || pagination.length * 10)\"\n        >\n          <span v-if=\"type==='elipsis'\"\n                class=\"elipsis\"\n                :data-value=\"pagination.length * 10\"\n                v-text=\"'...'\"\n          />\n          <ui-button v-if=\"type === 'page' && value\"\n                     aria-label=\"button page\"\n                     class=\"btn -page\"\n                     :data-value=\"value\"\n                     theme=\"reset\"\n                     :data-active=\"selected || undefined\"\n                     :animated=\"false\"\n                     @click.prevent=\"update(value)\"\n                     v-text=\"value\"\n          />\n        </li>\n        <li ref=\"bg\"\n            key=\"pagination-item-bg\"\n            class=\"bg\"\n        />\n      </transition-group>\n      <!-- <ol ref=\"list\"\n          class=\"list\"\n          \n      > -->\n      <!-- </ol> -->\n      <ui-button aria-label=\"button next\"\n                 :disabled=\"selectedPage >= totalPages\"\n                 class=\"btn -nav -next\"\n                 theme=\"reset\"\n                 @click.prevent=\"update(selectedPage + 1)\"\n      >\n        <span class=\"arrow\" v-html=\"IconArrow\" />\n      </ui-button>\n    </nav>\n  </component>\n</template>\n\n<style lang=\"stylus\" scoped>\n  //  ===LAYOUT===\n  .UiPagination\n    f center\n    margin 20px 0\n    justify-content center\n    align-items center\n\n  .content\n    f row\n    justify-content center\n    align-items center\n\n  .list\n    position relative\n    f row\n    justify-content center\n    align-items center\n    rp(border-radius, 80px 50px)\n    border 1px solid $c-black\n    rp(margin-left, 20px 10px)\n    rp(margin-right, 20px 10px)\n    overflow hidden\n    trans()\n    +hover()\n      .elipsis\n        &:hover\n          color $c-white\n      .btn.-page[data-active]\n        color $c-black\n        &:hover\n          color $c-white\n\n  //  ===ELEMENTS===\n  .elipsis\n    position relative\n    display block\n    rp(size, 60px 40px)\n    rp(line-height, 60px 40px)\n    padding 0\n    text-align center\n    border-radius 50%\n    z-index 5\n    // border 1px solid $c-black\n    // border-right 0\n\n  .btn\n    position relative\n    f row\n    justify-content center\n    align-items center\n    background none\n    outline none\n    color $c-black\n    trans()\n    font-family $ff-title\n    line-height 1\n    rp(font-size, 20px 13px)\n    line-height 1\n    display block\n    cursor pointer\n    background $c-white\n    z-index 5\n    &.-next\n    &.-prev\n      rp(size, 60px 40px)\n      padding 0\n      border 1px solid $c-black\n      border-radius 50%\n      :deep(.inner)\n        position static\n      +hover()\n        background $c-black\n        .arrow\n          color $c-white\n      +below(450px)\n        display none\n    &.-prev\n      transform scaleX(-1)\n    &.-page\n      rp(size, 60px 40px)\n      border-radius 50%\n      padding 0\n      background none\n      +hover()\n        color $c-white\n      \n    &[disabled]\n      pointer-events none\n      opacity 0.4\n      // display none\n\n\n    &[data-active]\n      color $c-white\n      // background $c-black\n\n    .arrow\n      display block\n      absolute top 50% left 50%\n      transform translate(-50%, -50%)\n      color $c-black\n      rp(size, 19px 12px)\n      trans()\n  .bg\n    absolute top bottom left 0\n    border-radius 50%\n    z-index 1\n    background $c-black\n    trans(background)\n\n  // TRANSITIONS GROUP\n  /* 1. declare transition */\n  .fade-move\n  .fade-enter-active\n  .fade-leave-active\n    transition all 0.2s cubic-bezier(0.55, 0, 0.1, 1)\n\n  /* 2. declare enter from and leave to state */\n  .fade-enter-from\n  .fade-leave-to\n    opacity 0\n    transform scale(0.01) translate(0, 0)\n\n  /* 3. ensure leaving items are taken out of layout flow so that moving\n        animations can be calculated correctly. */\n  .fade-leave-active\n    position absolute\n</style>\n"],"names":["IconArrow","UiPagination","defineComponent","props","ctx","data","reactive","el","templateRef","list","ref","bg","viewport","toRefs","interfaceStore","onInit","onInitUi","useFlow","hoverElement","gsap","useIntersectionObserver","isIntersecting","_a","pagination","computed","pages","response","value","watch","newVal","update","page","index","fromWatch","nextTick","cta","_b","elBox","_d","_c","box","width","left","leaveHover","debouncedWatch","_hoisted_1","_hoisted_2","_hoisted_4","_hoisted_5","_component_ui_button","_resolveComponent","_ctx","_openBlock","_createBlock","_resolveDynamicComponent","_withCtx","_createElementVNode","_createVNode","selectedPage","_cache","_withModifiers","$event","_TransitionGroup","_createElementBlock","_Fragment","_renderList","id","type","edge","selected","_normalizeClass","_createCommentVNode","_toDisplayString","_hoisted_3","totalPages","_hoisted_6"],"mappings":"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"}