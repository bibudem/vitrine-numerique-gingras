{"version":3,"file":"Form-BBC3bB2E.js","sources":["../../src/vue/node_modules/lodash/cloneDeep.js","../../src/vue/node_modules/lodash/head.js","../../src/vue/node_modules/lodash/first.js","../../src/vue/node_modules/lodash/mapKeys.js","../../src/vue/node_modules/object-to-formdata/src/index.js","../../src/vue/src/components/UiKit/KoddeinVueForm/SubmitUiButton.vue","../../src/vue/src/components/UiKit/KoddeinVueForm/assets/svg/submit.svg?raw","../../src/vue/src/components/UiKit/KoddeinVueForm/assets/svg/sending.svg?raw","../../src/vue/src/components/UiKit/KoddeinVueForm/assets/svg/success.svg?raw","../../src/vue/src/components/UiKit/KoddeinVueForm/assets/svg/error.svg?raw","../../src/vue/src/components/UiKit/KoddeinVueForm/Submit.vue","../../src/vue/src/components/UiKit/KoddeinVueForm/Form.vue"],"sourcesContent":["var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nmodule.exports = head;\n","module.exports = require('./head');\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nmodule.exports = mapKeys;\n","function isUndefined(value) {\n  return value === undefined;\n}\n\nfunction isNull(value) {\n  return value === null;\n}\n\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\n\nfunction isObject(value) {\n  return value === Object(value);\n}\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n\nfunction isDate(value) {\n  return value instanceof Date;\n}\n\nfunction isBlob(value, isReactNative) {\n  return isReactNative\n    ? isObject(value) && !isUndefined(value.uri)\n    : isObject(value) &&\n        typeof value.size === 'number' &&\n        typeof value.type === 'string' &&\n        typeof value.slice === 'function';\n}\n\nfunction isFile(value, isReactNative) {\n  return (\n    isBlob(value, isReactNative) &&\n    typeof value.name === 'string' &&\n    (isObject(value.lastModifiedDate) || typeof value.lastModified === 'number')\n  );\n}\n\nfunction initCfg(value) {\n  return isUndefined(value) ? false : value;\n}\n\nfunction serialize(obj, cfg, fd, pre) {\n  cfg = cfg || {};\n  fd = fd || new FormData();\n\n  cfg.indices = initCfg(cfg.indices);\n  cfg.nullsAsUndefineds = initCfg(cfg.nullsAsUndefineds);\n  cfg.booleansAsIntegers = initCfg(cfg.booleansAsIntegers);\n  cfg.allowEmptyArrays = initCfg(cfg.allowEmptyArrays);\n  cfg.noAttributesWithArrayNotation = initCfg(\n    cfg.noAttributesWithArrayNotation,\n  );\n  cfg.noFilesWithArrayNotation = initCfg(cfg.noFilesWithArrayNotation);\n  cfg.dotsForObjectNotation = initCfg(cfg.dotsForObjectNotation);\n\n  const isReactNative = typeof fd.getParts === 'function';\n\n  if (isUndefined(obj)) {\n    return fd;\n  } else if (isNull(obj)) {\n    if (!cfg.nullsAsUndefineds) {\n      fd.append(pre, '');\n    }\n  } else if (isBoolean(obj)) {\n    if (cfg.booleansAsIntegers) {\n      fd.append(pre, obj ? 1 : 0);\n    } else {\n      fd.append(pre, obj);\n    }\n  } else if (isArray(obj)) {\n    if (obj.length) {\n      obj.forEach((value, index) => {\n        let key = pre + '[' + (cfg.indices ? index : '') + ']';\n\n        if (\n          cfg.noAttributesWithArrayNotation ||\n          (cfg.noFilesWithArrayNotation && isFile(value, isReactNative))\n        ) {\n          key = pre;\n        }\n\n        serialize(value, cfg, fd, key);\n      });\n    } else if (cfg.allowEmptyArrays) {\n      fd.append(cfg.noAttributesWithArrayNotation ? pre : pre + '[]', '');\n    }\n  } else if (isDate(obj)) {\n    fd.append(pre, obj.toISOString());\n  } else if (isObject(obj) && !isBlob(obj, isReactNative)) {\n    Object.keys(obj).forEach((prop) => {\n      const value = obj[prop];\n\n      if (isArray(value)) {\n        while (prop.length > 2 && prop.lastIndexOf('[]') === prop.length - 2) {\n          prop = prop.substring(0, prop.length - 2);\n        }\n      }\n\n      const key = pre\n        ? cfg.dotsForObjectNotation\n          ? pre + '.' + prop\n          : pre + '[' + prop + ']'\n        : prop;\n\n      serialize(value, cfg, fd, key);\n    });\n  } else {\n    fd.append(pre, obj);\n  }\n\n  return fd;\n}\n\nmodule.exports = {\n  serialize,\n};\n","<docs>\n# KoddeinSubmitUiButton\n> submit using ui-button\n\n@author Nicolas Husson <nicolas@kffein.com>\n</docs>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport i18n from 'plugins/i18n';\n\nconst KoddeinSubmitUiButton = defineComponent({\n  name: \"KoddeinSubmitUiButton\",\n  props:{\n    ariaLabel:  {\n      type: String,\n      default: i18n.global.t('FORMS.labels.submit'),\n    },\n    label: {\n      type: String,\n      default: i18n.global.t('FORMS.labels.submit'),\n    },\n    icon: {\n      type: String,\n      default: undefined,\n    },\n    /** Form state (cf FORM_STATUS) */\n    state: {\n      type: String,\n      default: null,\n    },\n  },\n});\nexport default KoddeinSubmitUiButton\n</script>\n\n<template>\n  <ui-button :data-state=\"state\"\n             tag=\"button\"\n             theme=\"primary\"\n             class=\"KoddeinSubmit\"\n             :label=\"label\"\n             :icon=\"icon\"\n             :aria-label=\"ariaLabel\"\n             :animated=\"false\"\n  />\n</template>\n\n<style lang=\"stylus\" scoped>\n  /**\n   * TABLE OF CONTENT\n   * --------\n   *  - LAYOUT\n   */\n\n  //  ===LAYOUT===\n  .KoddeinSubmit\n    position relative\n    rp(margin-top, 30px 20px)\n\n</style>\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24.71 23.57\\\"><path d=\\\"M0,11.77H24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\"/><path d=\\\"M12.57,23.22l11.43-11.43L12.57,.35\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\"/></svg>\\n\"","export default \"<svg  xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 29 29\\\"><path d=\\\"M.5,14.5c0,7.73,6.27,14,14,14s14-6.27,14-14S22.23,.5,14.5,.5\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-linecap=\\\"round\\\"/></svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 21.61 16.64\\\"><path d=\\\"M.5,10.75l5.18,5.18L21.11,.5\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-linecap=\\\"round\\\"/></svg>\\n\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 16 16\\\">\\n  <line x1=\\\"1\\\" y1=\\\"15\\\" x2=\\\"15\\\" y2=\\\"1\\\" stroke=\\\"currentColor\\\"/>\\n  <line x1=\\\"1\\\" y1=\\\"1\\\" x2=\\\"15\\\" y2=\\\"15\\\" stroke=\\\"currentColor\\\"/>\\n</svg>\\n\"","<docs>\n  # KoddeinSubmit\n  > already skinned, and take some states (loading, failed, success...)\n  \n  @author Nicolas Husson <nicolas@kffein.com>\n</docs>\n\n<script lang=\"ts\">\nimport { defineComponent, inject } from 'vue';\nimport IconSubmit from './assets/svg/submit.svg?raw';\nimport IconSending from './assets/svg/sending.svg?raw';\nimport IconSuccess from './assets/svg/success.svg?raw';\nimport IconError from './assets/svg/error.svg?raw';\nimport { FORM_STATUS } from './utils';\nimport i18n from 'plugins/i18n';\n\nconst KoddeinSubmit = defineComponent({\n  name: \"KoddeinSubmit\",\n  props: {\n    ariaLabel: {\n      type: String,\n      default: i18n.global.t('FORMS.standard.submit button'),\n    },\n    label: {\n      type: String,\n      default: i18n.global.t('FORMS.standard.submit'),\n    },\n  },\n  setup() {\n    const status: any = inject('status');\n    return {\n      status,\n      FORM_STATUS,\n      IconSubmit,\n      IconSending,\n      IconSuccess,\n      IconError,\n    }\n  },\n});\nexport default KoddeinSubmit\n</script>\n\n<template>\n  <button :data-state=\"status.value.value\"\n          type=\"submit\"\n          class=\"KoddeinSubmit\"\n          :aria-label=\"ariaLabel\"\n  >\n    <span class=\"wrapper\">\n      <transition name=\"fade\">\n        <i v-if=\"status.value.value === FORM_STATUS.SENDING\"\n           class=\"icon -sending\"\n           v-html=\"IconSending\"\n        />\n      </transition>\n      <transition name=\"fade\">\n        <i v-if=\"status.value.value === FORM_STATUS.SUCCESS\"\n           class=\"icon -success\"\n           v-html=\"IconSuccess\"\n        />\n      </transition>\n      <transition name=\"fade\">\n        <i v-if=\"status.value.value === FORM_STATUS.ERROR\"\n           class=\"icon -error\"\n           v-html=\"IconError\"\n        />\n      </transition>\n      <span class=\"text\" v-text=\"label\" />\n      <i :class=\"`icon -submit ${status.value.value === FORM_STATUS.PRISTINE || status.value.value === FORM_STATUS.DEFAULT || status.value.value === FORM_STATUS.INVALID ? '' : '-hidden'}`\"\n         v-html=\"IconSubmit\"\n      />\n    </span>\n  </button>\n</template>\n\n<style lang=\"stylus\" scoped>\n  /**\n    * TABLE OF CONTENT\n    * --------\n    *  - LAYOUT\n    *  - ANNIMATIONS\n    *  - DEBUG\n    */\n\n  //  ===LAYOUT===\n.KoddeinSubmit\n  position relative\n  user-select none\n  display inline-block\n  f-style(button)\n  padding 15px 20px\n  color $c-white\n  background $c-black\n  border 0\n  box-shadow 0\n  overflow hidden\n  line-height 1.4\n  opacity 1\n  trans(color)\n  trans(opacity)\n  perspective 1px\n\n  +hover()\n    color $c-accent\n  \n  &[data-state=\"PRISTINE\"]\n    opacity 0.4\n    pointer-events none\n\n.wrapper\n  display block\n  position relative\n  f(row, $justify: space-between, $align: center)\n  width 100%\n\n.icon\n  height 0.75em\n  width 0.75em\n  opacity 1\n  absolute top 50% right 0\n  transform translateY(-50%)\n  transform-origin center center\n\n  &.-sending\n    animation spin 5s linear infinite\n  &.-success\n    height 0.7em\n\n  &.-submit\n    position static\n    transform none\n    opacity 1\n    trans(opacity)\n    &.-hidden\n      opacity 0\n\n.text\n  opacity 1\n  trans(opacity)\n  rp(margin-right, 15px 10px)\n\n//  ===ANNIMATIONS===\n.fade-enter-active\n.fade-leave-active\n  trans(opacity)\n.fade-enter-from\n.fade-leave-to\n  opacity 0\n\n@keyframes spin\n  from\n    transform: translateY(-50%) rotate(0deg)\n  to\n    transform: translateY(-50%) rotate(360deg)\n\n//  ===DEBUG===\n[data-debug-mode] .KoddeinSubmit\n  //\n</style>\n","<docs>\n# KoddeinForm\n\nBase form - handle data, validation and ajax requests\n\n@author Nicolas Husson <nicolas@kffein.com> <br />\n@author Kevin Bastien <kevin@kffein.com>\n</docs>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, PropType, provide, reactive, ref, toRefs, watch, readonly, /*defineEmits*/ } from 'vue';\nimport { assign, cloneDeep, each, first, flatten, isEmpty, keys, map, mapKeys, values, without, zipObject } from 'lodash';\nimport { AxiosRequestConfig, Method } from 'axios';\nimport { useReCaptcha } from 'vue-recaptcha-v3';\nimport { until, templateRef } from '@vueuse/core';\nimport { client, getEnv, motion } from 'config';\nimport { serialize } from 'object-to-formdata';\nimport { gsap, ScrollTrigger } from 'vendors/gsap';\nimport scrollStore from 'components/SmoothScroll/store';\nimport { store as flashStore } from 'components/UiKit/FlashMessage/store';\nimport { store as i18nStore } from 'plugins/i18n/store';\nimport ApiHelper from 'plugins/api';\nimport i18n from 'plugins/i18n';\nimport emitter, { EVENTS } from 'plugins/store/events';\nimport Submit from './SubmitUiButton.vue';\nimport SubmitIcon from './Submit.vue';\nimport { FORM_STATUS } from './utils';\nimport { useI18n } from 'vue-i18n';\n\ninterface Data {\n  submit?: any,\n  next?: any,\n  prev?: any,\n}\n\nexport interface ErrorObject {\n  [key: string]: any,\n}\n\n\nconst KoddeinForm = defineComponent({\n  name: \"KoddeinForm\",\n  components: {\n    Submit,\n    SubmitIcon,\n  },\n  props: {\n    /** default theme */\n    theme: {\n      type: String as PropType<FormTheme>,\n      default: 'default',\n    },\n    /** if form is splitted in multi steps */\n    steps: {\n      type: Number,\n      default: 1,\n    },\n    /** form action - if defined, be sure that this contain a valid route */\n    action: {\n      type: String,\n      default: '',\n    },\n    /** form method */\n    method: {\n      type: String as PropType<Method>,\n      default: 'post',\n    },\n    /** form data model - from our utils `createFormModel()` */\n    model: {\n      type: Object,\n      default: undefined,\n    },\n    /** list of usefull labels id needed */\n    labels: {\n      type: Object as PropType<{\n        submit?: string,\n        next?: string,\n        prev?: string,\n        success?: string,\n        error?: string,\n      }>,\n      default: null,\n    },\n    /** list of usefull icons if needed */\n    icons: {\n      type: Object as PropType<{\n        submit?: any,\n        next?: any,\n        prev?: any,\n      }>,\n      default: null,\n    },\n    /** easy way to override the send method\n     * @returns {Promise} that return your response\n     */\n    onSend: {\n      type: Function,\n      default: undefined,\n    },\n    /** some debugs - bypas some methodes {validation} */\n    debug: {\n      type: Object,\n      default: undefined,\n    },\n    /** invisible recaptcha - only if needed and settings are activated */\n    recaptcha: {\n      type: Boolean,\n      default: true,\n    },\n    /** display flash Message - if true form will call UiFlashMessage for error/success state */\n    flash: {\n      type: Boolean,\n      default: true,\n    },\n    /** after succes submit, rreset the complete form */\n    reset: {\n      type: Boolean,\n      default: true,\n    },\n    /** display intro anim on scroll */\n    animated: {\n      type: Boolean,\n      default: false,\n    },\n    /** display Full ui button with icon display */\n    submitIcon: {\n      type: Boolean,\n      default: false,\n    }\n  },\n  emits: ['update', 'status', 'changeStep', 'errorValidation', 'success', 'error'],\n  setup(props, {emit}) {\n    const {t} = useI18n()\n    const { scrollable } = toRefs(scrollStore.state);\n\n    // global ref, will be passed to children cpn. -> see provide/inject\n    const el = templateRef<HTMLElement | null>('el', null)\n\n    let currentStep = ref(1);\n    let previousStep = ref(1);\n    let status = ref(FORM_STATUS.PRISTINE);\n    let locked = ref(false);\n    let errors = ref({} as ErrorObject);\n    const visible = ref(!props.animated)\n\n    const data: Data = reactive(\n      {\n        submit: undefined,\n        next: undefined,\n        prev: undefined,\n      }\n    );\n    const recaptchaKey = client && getEnv('VITE_RECAPTCHA_ENABLED') && getEnv('VITE_RECAPTCHA_CLIENT_KEY') ? getEnv('VITE_RECAPTCHA_CLIENT_KEY') : null;\n\n    /**\n     * Watch errors, on error -> update model\n     */\n    watch(\n      errors,\n      (errors) => {\n        const model = watchErrors(errors);\n        emit('update', model);\n      },\n      // { deep:true }\n    )\n    /**\n     * Watch status, on status update -> send status to parent\n     */\n    watch(\n      status,\n      (value) => {\n        emit('status', value as FormStatusType);\n      },\n      { immediate: true }\n    )\n    /**\n     * Watch currentStep, on step update -> send new step to parent\n     */\n    watch(\n      currentStep,\n      (value) => {\n        nextTick(() => {\n          changeStepAnim(value, data, props.steps);\n          emit('changeStep');\n          displayVisibleField();\n        })\n      },\n      { immediate: true }\n    )\n\n\n    // RECAPTCHA THINGY\n    let recaptcha = () => { };\n    if (recaptchaKey) {\n      const { executeRecaptcha, recaptchaLoaded }: any = useReCaptcha(); // classic third party typing error :beer:\n      recaptcha = async () => {\n        // (optional) Wait until recaptcha has been loaded.\n        await recaptchaLoaded()\n\n        // Execute reCAPTCHA with action \"login\".\n        const token = await executeRecaptcha('form')\n\n        // Do stuff with the received token.\n        send(token);\n      }\n    }\n    // FORM METHODS ACTION\n    const pristine = () => {\n      errors.value = {};\n      status.value = FORM_STATUS.DEFAULT;\n    };\n\n    /**\n     * Reset form, every state/value/errors\n     */\n    const reset = () => {\n      errors.value = {};\n      status.value = FORM_STATUS.PRISTINE;\n      const newModel = assign({}, props.model);\n      each(newModel, (data) => {\n        data.value = null;\n      });\n      previousStep.value = currentStep.value;\n      currentStep.value = 1;\n\n      emit('update', newModel);\n    };\n\n    const executeRecaptcha = () => {\n      if (recaptchaKey) {\n        const { executeRecaptcha, recaptchaLoaded }: any = useReCaptcha(); // classic third party typing error :beer:\n        return recaptcha = async () => {\n          // (optional) Wait until recaptcha has been loaded.\n          await recaptchaLoaded()\n\n          // Execute reCAPTCHA with action \"login\".\n          const token = await executeRecaptcha('form')\n\n          // Do stuff with the received token.\n          return token;\n        }\n      }\n\n      return false;\n    }\n\n    const resetSteps = () => { //eslint-disable-line @typescript-eslint/no-unused-vars\n      previousStep.value = currentStep.value;\n      currentStep.value = 1;\n    };\n\n    /** \n     * FORM STEPS - PREV\n     */\n    const prev = () => {\n      if (currentStep.value > 1) {\n        pristine();\n        previousStep.value = currentStep.value;\n        currentStep.value -= 1;\n      }\n    };\n\n    /** \n     * FORM STEPS - NEXT\n     */\n    const next = () => {\n      if (props.steps && props.steps > 1 && currentStep.value < props.steps && validate(false, props.debug?.validation)) {\n        pristine();\n        previousStep.value = currentStep.value;\n        currentStep.value += 1;\n      }\n    };\n\n    // WATCH\n    const watchErrors = (errors: ErrorObject) => {\n      const newModel = assign({}, props.model);\n      mapKeys(errors, (fieldErrors, key) => {\n        if (fieldErrors.length) {\n          let error = first(fieldErrors);\n          if (error) {\n            const firsterror: any = first(fieldErrors);\n            if (typeof firsterror === 'string') {\n              const errorI18n = `FORMS.errors.${firsterror}`;\n              const errorI18nTranslated = i18n.global.t ? i18n.global.t(errorI18n) : '';\n              if (errorI18nTranslated !== '' && errorI18n !== errorI18nTranslated) {\n                error = errorI18nTranslated;\n              }\n            } else {\n              const errorI18n = `FORMS.errors.${firsterror.label}`;\n              const errorI18nTranslated = i18n.global.t ? i18n.global.t(errorI18n, firsterror.attr) : '';\n              if (errorI18nTranslated !== '' && errorI18n !== errorI18nTranslated) {\n                error = errorI18nTranslated;\n              }\n            }\n          }\n          newModel[key].error = error;\n        } else {\n          newModel[key].error = '';\n        }\n      });\n      return newModel;\n    }\n\n    /* FORM VALIDATION\n    * Validate form, only visible field without all flag\n    */\n    const validate = (all = false, debug = false) => {\n      if (debug) {\n        return true;\n      }\n\n      // create an object like {email: [list of errors], password: [if empty = success]}\n      const dataModel = cloneDeep(props.model);\n\n      if (!all) {\n        // filter data model to validate only visible fields - very usefull for paginated form\n        each(dataModel, (entry, name) => {\n          if (el.value?.querySelector(`[data-name='${name}']`) === null && dataModel && dataModel[name]) {\n            delete dataModel[name];\n          }\n        });\n      }\n\n      const computeErrors = zipObject(keys(dataModel), map(dataModel, (prop) => {  \n        return without(map(prop.validations, (rule) => rule(prop.value, prop, dataModel)), null, undefined, true);\n      }));\n      errors.value = computeErrors;\n\n      const isSuccess = flatten(values(computeErrors)).length <= 0;\n\n      if (!isSuccess) {\n        nextTick(() => {\n          status.value = FORM_STATUS.INVALID;\n        })\n      }\n\n      // return true if no error\n      return isSuccess;\n    }\n\n    // ANIMATION LAYOUT\n    const changeStepAnim = (value: number, data: Data, steps?: number) => {\n      if (props.steps === 1) return;\n      \n      const tl = gsap.timeline({\n        onStart: () => {\n          locked.value = true;\n        },\n        onComplete: () => {\n          locked.value = false;\n          emitter.emit(EVENTS.CURSOR_UPDATE);\n        },\n      });\n\n      const submit = data.submit?.$el;\n      const next = data.next?.$el;\n      const prev = data.prev?.$el;\n\n      if (value === 1) {\n        prev && tl.to(prev, 0.2, { opacity: 0, ease: 'power1.easeOut' }, '0');\n        submit && tl.to(submit,0.2, { opacity: 0, ease: 'power1.easeOut' }, '0');\n        next && tl.to(next, 0.2, { opacity: 0, ease: 'power1.easeOut' }, '0');\n        next && tl.to(next, 0.2, { opacity: 1, ease: 'power1.easeOut' }, '1.4');\n      } else if (steps && value === steps) {\n        next && tl.to(next, 0.2, { opacity: 0, ease: 'power1.easeOut' }, '0');\n        prev && tl.to(prev, 0.2, { opacity: 0, ease: 'power1.easeOut' }, '0');\n        prev && tl.to(prev, 0.2, { opacity: 1, ease: 'power1.easeOut' }, '1.4');\n        submit && tl.to(submit, 0.2, { opacity: 1, ease: 'power1.easeOut' }, '1.4');\n      } else {\n        submit && tl.to(submit, 0.2, { opacity: 0, ease: 'power1.easeOut' }, '0');\n        next && tl.to(next, 0.2, { opacity: 0, ease: 'power1.easeOut' }, '0');\n        next && tl.to(next, 0.2, { opacity: 1, ease: 'power1.easeOut' }, '1.4');\n        prev && tl.to(prev, 0.2, { opacity: 0, ease: 'power1.easeOut' }, '0');\n        prev && tl.to(prev, 0.2, { opacity: 1, ease: 'power1.easeOut' }, '1.4');\n      }\n    }\n\n    /**\n     * on submit form\n     * - does not happen when ajax call is already in progress\n     * - validate form\n     * - if valid : send\n     */\n    const submit = () => {\n      if (status.value === FORM_STATUS.SUCCESS || status.value === FORM_STATUS.SENDING) {\n        return;\n      }\n\n      errors.value = {};\n      status.value = FORM_STATUS.DEFAULT;\n\n      if (validate(true, props.debug?.validation)) {\n        // if recaptcha execute check else normal flow\n        if (props.recaptcha && recaptchaKey) {\n          recaptcha()\n        } else {\n          send();\n        }\n      } else {\n        emit('errorValidation');\n      }\n    };\n\n    /**\n     * send form\n     * - if added action, this may be automatic\n     * - or you can override this method by setting `onSend` prop\n     */\n    const send = (token?: string) => {\n      return new Promise((resolve, reject) => {\n        if (!props.action && !props.onSend) {\n          reject(new Error('Form send without action. either add action or override this `send` method'));\n        }\n        status.value = FORM_STATUS.SENDING;\n        // if defined, use onSend prop - must return the ajax promise\n        if (props.onSend) {\n          return resolve(props.onSend(token));\n        }\n\n        // auto send\n        if (props.action) {\n          const datas = zipObject(keys(props.model), map(props.model, ({ value }) => value));\n          const options: AxiosRequestConfig = assign({}, {\n            data: serialize(datas),\n            method: props.method || 'post',\n            url: props.action,\n            headers: {},\n            showErrorMessage: props.flash\n          });\n\n          // add recaptcha token if present\n          if (token && props.recaptcha && options.headers) {\n            options.headers['recaptcha-token'] = token;\n          }\n\n          return resolve(\n            ApiHelper.request(options),\n          );\n        }\n\n        return reject(new Error('@todo Ui/Form : auto send if action prop'));\n      })\n        // success\n        .then((response) => {\n          status.value = FORM_STATUS.SUCCESS;\n          emit('success', response);\n\n          if (props.flash) {\n            flashStore.ADD({\n              status: 'success',\n              title: (props.labels && props.labels.success) ? props.labels.success : i18n.global.t('FORMS.labels.success'),\n              important: false,\n              duration: 20000,\n            });\n          }\n\n          if(props.reset) {\n            setTimeout(() => {\n              reset();\n            }, 6000);\n          } else {\n            status.value = FORM_STATUS.PRISTINE;\n          }\n\n          return response;\n        })\n        // error\n        .catch((error: any) => {\n          if (process.env.NODE_ENV === 'development') {\n            console.debug('[form] onsend - catch error', { error });  \n          }\n          if (error.message === 'just-ignore-this') return;\n          const { response } = error;\n\n          // retrieve error message (may be translated etc)\n          const message = (() => {\n            const msg = response?.data?.data?.message;\n            return msg && i18n.global.te(`FORMS.errors.${msg}`, i18nStore.locale?.i18n)\n              ? i18n.global.t(`FORMS.errors.${msg}`)\n              : i18n.global.t('FORMS.errors.generic');\n          })();\n\n          // maybe we also have some field errors\n          const fieldErrors = response?.data?.meta?.errors ?? {};\n          const formatMessage = (errors: any) => {\n            let fieldError: any = first(errors);\n\n            // all require is the same msg\n            if (fieldError.search('ne peut être vide') >= 0\n              || fieldError.search('is required') >= 0\n              || fieldError.search('required') >= 0) {\n              return i18n.global.t('FORMS.errors.required');\n            }\n\n            // i18n msg cant contain `.`\n            const translatedKey = `FORMS.errors.${fieldError.replace(/\\./g, '')}`;\n            if (i18n.global.te(translatedKey, i18nStore.locale?.i18n)) {\n              fieldError = i18n.global.t(translatedKey);\n            }\n            return fieldError;\n          };\n\n          const model = cloneDeep(props.model);\n          each(fieldErrors, (errors, key) => {\n            if (!model || !model[key]) return;\n            model[key].error = formatMessage(errors);\n          });\n\n          if (!isEmpty(fieldErrors)) {\n            emit('update', model);\n          }\n\n          status.value = FORM_STATUS.ERROR;\n          errors.value['generic'] = message;\n\n          emit('error', message);\n\n          setTimeout(() => {\n            pristine();\n          }, 6000);\n        });\n    };\n\n\n    const displayVisibleField = async () => {\n      if (motion && props.animated) {\n        await until(scrollable).toBe(true)\n        nextTick(() => {\n          const elems = el.value?.querySelectorAll('.koddein-field, .actions');\n          const st = ScrollTrigger.create({\n            // markers: true,\n            trigger: el.value,\n            start: 'top bottom',\n            end: 'bottom top',\n            onToggle: ({ isActive }: { isActive: boolean }) => {\n              visible.value = isActive\n              if (isActive) {\n                if (elems)\n                  gsap.to(elems, { opacity: 1, stagger: 0.08, duration: 0.4, delay: 0.3 })\n                nextTick(() => { st.kill() }) // only 1time ?\n              }\n            }\n        })\n        })\n      }\n    };\n\n    const updateStatus = () => {\n      if (status.value === FORM_STATUS.PRISTINE) {\n        status.value = FORM_STATUS.DEFAULT;\n      }\n    }\n\n    // render first view\n    displayVisibleField();\n\n    // provide data to children\n    provide('theme', props.theme)\n    provide('currentStep', currentStep)\n    provide('previousStep', previousStep)\n    // provide('status', status)\n    provide('status', { value: readonly(status), update: updateStatus });\n    provide('errors', errors)\n\n    return {\n      t,\n      ...toRefs(data), //data\n      visible,\n      motion,\n      // ref\n      currentStep,\n      previousStep,\n      status,\n      locked,\n      errors,\n      //\n      FORM_STATUS,\n      onNext: next,\n      onPrev: prev,\n      onSubmit: submit,\n      executeRecaptcha,\n      updateStatus,\n    };\n  }\n});\nexport default KoddeinForm\n</script>\n\n<template>\n  <form ref=\"el\"\n        :method=\"method\"\n        :action=\"action\"\n        :disabled=\"status === FORM_STATUS.SENDING\"\n        :data-status=\"status\"\n        :data-theme=\"theme\"\n        class=\"koddein-form\"\n        novalidate\n        :data-visible=\"visible\"\n        :data-animated=\"animated && motion\"\n        @submit.prevent=\"onSubmit\"\n  >\n    <div class=\"wrapper\">\n      <!-- fields / steps -->\n      <slot />\n    </div>\n\n    <!-- submit -->\n    <slot name=\"actions\">\n      <div :class=\"['actions']\">\n        <ui-button v-if=\"steps && steps > 1\"\n                   ref=\"prev\"\n                   tag=\"span\"\n                   :class=\"['button -prev', currentStep > 1 ? '-active' : '']\"\n                   theme=\"secondary\"\n                   :label=\"labels && labels.prev ? labels.prev : t('FORMS.labels.prev')\"\n                   tabindex=\"0\"\n                   :icon=\"icons && icons.prev ? icons.prev : undefined\"\n                   @click.prevent=\"() => { !locked ? onPrev() : null }\"\n        />\n        <ui-button v-if=\"steps && steps > 1\"\n                   ref=\"next\"\n                   tag=\"span\"\n                   :class=\"['button -next', currentStep < steps ? '-active' : '']\"\n                   theme=\"secondary\"\n                   :label=\"labels && labels.next ? labels.next : t('FORMS.labels.next')\"\n                   :icon=\"icons && icons.next ? icons.next : undefined\"\n                   @click.prevent=\"() => { !locked ? onNext() : null }\"\n        />\n        <SubmitIcon v-if=\"submitIcon\"\n                    ref=\"submit\"\n                    :class=\"['button -submit', steps && currentStep === steps ? '-active' : '']\"\n                    :label=\"labels && labels.submit ? labels.submit : t('FORMS.labels.submit')\"\n                    :icon=\"icons && icons.submit ? icons.submit : undefined\"\n                    :state=\"status\"\n        />\n        <Submit v-else\n                ref=\"submit\"\n                :class=\"['button -submit', steps && currentStep === steps ? '-active' : '']\"\n                :label=\"labels && labels.submit ? labels.submit : t('FORMS.labels.submit')\"\n                :icon=\"icons && icons.submit ? icons.submit : undefined\"\n                :state=\"status\"\n        />\n      </div>\n    </slot>\n\n    <!-- list of generic (api) success -->\n    <slot v-if=\"!flash\" name=\"success\">\n      <p v-if=\"status === FORM_STATUS.SUCCESS\"\n         class=\"success\"\n         v-text=\"(labels && labels.success) || t('FORMS.labels.success')\"\n      />\n    </slot>\n\n    <!-- list of generic (api) errors -->\n    <slot v-if=\"!flash\" name=\"errors\">\n      <p v-if=\"errors && errors.generic\"\n         class=\"errors -generic\"\n         v-html=\"(labels && labels.error) || errors.generic\"\n      />\n    </slot>\n  </form>\n</template>\n\n<style lang=\"stylus\" scoped>\n  /**\n   * TABLE OF CONTENT\n   * --------\n   *  - LAYOUT\n   *  - ANIMATION\n   *  - DEBUG\n   *  - NO_SCOPE\n   */\n\n  $c-f-error ?= red\n\n  //  ===LAYOUT====\n  .wrapper\n    position relative\n  \n  [data-animated=\"true\"]\n    .actions\n      opacity 0\n\n    :deep()\n      .koddein-field\n        opacity 0\n\n  .errors\n    rp(font-size, 13px 12px)\n    color $c-f-error\n\n    &.-generic\n      margin-top 40px\n  \n  .actions\n    .button\n      pointer-events none\n      rp(margin-right, 20px 10px)\n      &:last-child\n        margin-right 0 \n      &.-active\n        pointer-events all\n\n\n  //  ===DEBUG===\n  [data-debug-mode=\"true\"] .KoddeinForm\n    //\n</style>\n"],"names":["baseClone","require$$0","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeep","value","cloneDeep_1","head","array","head_1","first","baseAssignValue","baseForOwn","require$$1","baseIteratee","require$$2","mapKeys","object","iteratee","result","key","mapKeys_1","isUndefined","isNull","isBoolean","isObject","isArray","isDate","isBlob","isReactNative","isFile","initCfg","serialize","obj","cfg","fd","pre","index","prop","src","KoddeinSubmitUiButton","defineComponent","i18n","_resolveComponent","_openBlock","_createBlock","_component_ui_button","_ctx","label","icon","IconSubmit","IconSending","IconSuccess","IconError","KoddeinSubmit","inject","FORM_STATUS","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_sfc_render","status","$props","$setup","$data","$options","_createElementBlock","_withCtx","_createCommentVNode","_createElementVNode","_toDisplayString","_hoisted_6","_normalizeClass","_hoisted_7","KoddeinForm","Submit","SubmitIcon","emit","t","useI18n","scrollable","toRefs","scrollStore","el","templateRef","currentStep","ref","previousStep","locked","errors","visible","props","data","reactive","recaptchaKey","client","getEnv","watch","errors2","model","nextTick","changeStepAnim","displayVisibleField","recaptcha","recaptchaLoaded","useReCaptcha","token","executeRecaptcha","send","pristine","reset","newModel","assign","each","data2","executeRecaptcha2","prev","submit","next","validate","_a","fieldErrors","error","firsterror","errorI18n","errorI18nTranslated","all","debug","dataModel","entry","name","computeErrors","zipObject","keys","map","rule","isSuccess","values","tl","gsap","_b","_c","prev2","submit2","next2","steps","theme","_cache","_withModifiers","args","_renderSlot","labels","icons","submitIcon","_component_SubmitIcon","_component_Submit","flash"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}