{"version":3,"file":"Text-DbQ-OyoO.js","sources":["../../src/vue/node_modules/imask/esm/core/utils.js","../../src/vue/node_modules/imask/esm/core/action-details.js","../../src/vue/node_modules/imask/esm/core/holder.js","../../src/vue/node_modules/imask/esm/masked/factory.js","../../src/vue/node_modules/imask/esm/controls/mask-element.js","../../src/vue/node_modules/imask/esm/controls/html-mask-element.js","../../src/vue/node_modules/imask/esm/controls/html-input-mask-element.js","../../src/vue/node_modules/imask/esm/controls/html-contenteditable-mask-element.js","../../src/vue/node_modules/imask/esm/controls/input-history.js","../../src/vue/node_modules/imask/esm/controls/input.js","../../src/vue/node_modules/imask/esm/core/change-details.js","../../src/vue/node_modules/imask/esm/core/continuous-tail-details.js","../../src/vue/node_modules/imask/esm/masked/base.js","../../src/vue/node_modules/imask/esm/masked/pattern/chunk-tail-details.js","../../src/vue/node_modules/imask/esm/masked/pattern/cursor.js","../../src/vue/node_modules/imask/esm/masked/pattern/fixed-definition.js","../../src/vue/node_modules/imask/esm/masked/pattern/input-definition.js","../../src/vue/node_modules/imask/esm/masked/regexp.js","../../src/vue/node_modules/imask/esm/masked/pattern.js","../../src/vue/node_modules/imask/esm/masked/range.js","../../src/vue/node_modules/imask/esm/masked/date.js","../../src/vue/node_modules/imask/esm/masked/dynamic.js","../../src/vue/node_modules/imask/esm/masked/enum.js","../../src/vue/node_modules/imask/esm/masked/function.js","../../src/vue/node_modules/imask/esm/masked/number.js","../../src/vue/node_modules/imask/esm/masked/pipe.js","../../src/vue/node_modules/imask/esm/masked/repeat.js","../../src/vue/node_modules/imask/esm/index.js","../../src/vue/src/components/UiKit/KoddeinVueForm/Field/Text.vue"],"sourcesContent":["/** Checks if value is string */\nfunction isString(str) {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/** Checks if value is object */\nfunction isObject(obj) {\n  var _obj$constructor;\n  return typeof obj === 'object' && obj != null && (obj == null || (_obj$constructor = obj.constructor) == null ? void 0 : _obj$constructor.name) === 'Object';\n}\nfunction pick(obj, keys) {\n  if (Array.isArray(keys)) return pick(obj, (_, k) => keys.includes(k));\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [k, v] = _ref;\n    if (keys(v, k)) acc[k] = v;\n    return acc;\n  }, {});\n}\n\n/** Direction */\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT'\n};\n\n/** Direction */\n\nfunction forceDirection(direction) {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nfunction escapeRegExp(str) {\n  return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1');\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nfunction objectIncludes(b, a) {\n  if (a === b) return true;\n  const arrA = Array.isArray(a),\n    arrB = Array.isArray(b);\n  let i;\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++) if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n  if (arrA != arrB) return false;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const dateA = a instanceof Date,\n      dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n    const regexpA = a instanceof RegExp,\n      regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n    const keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = 0; i < keys.length; i++) if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n    return a.toString() === b.toString();\n  }\n  return false;\n}\n\n/** Selection range */\n\nexport { DIRECTION, escapeRegExp, forceDirection, isObject, isString, objectIncludes, pick };\n","import { DIRECTION } from './utils.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n    if (this.insertedCount) {\n      // double check right part\n      while (this.value.slice(this.cursorPos) !== this.oldValue.slice(this.oldSelection.end)) {\n        if (this.value.length - this.cursorPos < this.oldValue.length - this.oldSelection.end) ++this.oldSelection.end;else ++this.cursorPos;\n      }\n    }\n  }\n\n  /** Start changing position */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /** Inserted symbols count */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /** Inserted symbols */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /** Removed symbols count */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /** Removed symbols */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /** Unchanged head symbols */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /** Unchanged tail symbols */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /** Remove direction */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n","/** Applies mask on element */\nfunction IMask(el, opts) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n\nexport { IMask as default };\n","import { isString, isObject, pick } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n// export function maskedClass(mask: string): typeof MaskedPattern;\n// export function maskedClass(mask: DateConstructor): typeof MaskedDate;\n// export function maskedClass(mask: NumberConstructor): typeof MaskedNumber;\n// export function maskedClass(mask: Array<any> | ArrayConstructor): typeof MaskedDynamic;\n// export function maskedClass(mask: MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass(mask: Masked): typeof Masked;\n// export function maskedClass(mask: typeof Masked): typeof Masked;\n// export function maskedClass(mask: typeof MaskedDate): typeof MaskedDate;\n// export function maskedClass(mask: typeof MaskedNumber): typeof MaskedNumber;\n// export function maskedClass(mask: typeof MaskedEnum): typeof MaskedEnum;\n// export function maskedClass(mask: typeof MaskedRange): typeof MaskedRange;\n// export function maskedClass(mask: typeof MaskedRegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: typeof MaskedFunction): typeof MaskedFunction;\n// export function maskedClass(mask: typeof MaskedPattern): typeof MaskedPattern;\n// export function maskedClass(mask: typeof MaskedDynamic): typeof MaskedDynamic;\n// export function maskedClass<Mask extends typeof Masked> (mask: Mask): Mask;\n// export function maskedClass(mask: RegExp): typeof MaskedRegExp;\n// export function maskedClass(mask: (value: string, ...args: any[]) => boolean): typeof MaskedFunction;\n\n/** Get Masked class by mask type */\nfunction maskedClass(mask) /* TODO */{\n  if (mask == null) throw new Error('mask property should be defined');\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  if (isString(mask)) return IMask.MaskedPattern;\n  if (mask === Date) return IMask.MaskedDate;\n  if (mask === Number) return IMask.MaskedNumber;\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask.constructor;\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  return IMask.Masked;\n}\nfunction normalizeOpts(opts) {\n  if (!opts) throw new Error('Options in not defined');\n  if (IMask.Masked) {\n    if (opts.prototype instanceof IMask.Masked) return {\n      mask: opts\n    };\n\n    /*\n      handle cases like:\n      1) opts = Masked\n      2) opts = { mask: Masked, ...instanceOpts }\n    */\n    const {\n      mask = undefined,\n      ...instanceOpts\n    } = opts instanceof IMask.Masked ? {\n      mask: opts\n    } : isObject(opts) && opts.mask instanceof IMask.Masked ? opts : {};\n    if (mask) {\n      const _mask = mask.mask;\n      return {\n        ...pick(mask, (_, k) => !k.startsWith('_')),\n        mask: mask.constructor,\n        _mask,\n        ...instanceOpts\n      };\n    }\n  }\n  if (!isObject(opts)) return {\n    mask: opts\n  };\n  return {\n    ...opts\n  };\n}\n\n// TODO can't use overloads here because of https://github.com/microsoft/TypeScript/issues/50754\n\n// From masked\n// export default function createMask<Opts extends Masked, ReturnMasked=Opts> (opts: Opts): ReturnMasked;\n// // From masked class\n// export default function createMask<Opts extends MaskedOptions<typeof Masked>, ReturnMasked extends Masked=InstanceType<Opts['mask']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDate>, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedNumber>, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedEnum>, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRange>, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedRegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedFunction>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedPattern>, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<typeof MaskedDynamic>, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// // From mask opts\n// export default function createMask<Opts extends MaskedOptions<Masked>, ReturnMasked=Opts extends MaskedOptions<infer M> ? M : never> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedNumberOptions, ReturnMasked extends MaskedNumber=MaskedNumber<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDateFactoryOptions, ReturnMasked extends MaskedDate=MaskedDate<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedEnumOptions, ReturnMasked extends MaskedEnum=MaskedEnum<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedRangeOptions, ReturnMasked extends MaskedRange=MaskedRange<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedPatternOptions, ReturnMasked extends MaskedPattern=MaskedPattern<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedDynamicOptions, ReturnMasked extends MaskedDynamic=MaskedDynamic<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<RegExp>, ReturnMasked extends MaskedRegExp=MaskedRegExp<Opts['parent']>> (opts: Opts): ReturnMasked;\n// export default function createMask<Opts extends MaskedOptions<Function>, ReturnMasked extends MaskedFunction=MaskedFunction<Opts['parent']>> (opts: Opts): ReturnMasked;\n\n/** Creates new {@link Masked} depending on mask type */\nfunction createMask(opts) {\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  const nOpts = normalizeOpts(opts);\n  const MaskedClass = maskedClass(nOpts.mask);\n  if (!MaskedClass) throw new Error(\"Masked class is not found for provided mask \" + nOpts.mask + \", appropriate module needs to be imported manually before creating mask.\");\n  if (nOpts.mask === MaskedClass) delete nOpts.mask;\n  if (nOpts._mask) {\n    nOpts.mask = nOpts._mask;\n    delete nOpts._mask;\n  }\n  return new MaskedClass(nOpts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass, normalizeOpts };\n","import IMask from '../core/holder.js';\n\n/**  Generic element API to use with mask */\nclass MaskElement {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Safely returns selection start */\n  get selectionStart() {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch {}\n    return start != null ? start : this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd() {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch {}\n    return end != null ? end : this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select(start, end) {\n    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n    try {\n      this._unsafeSelect(start, end);\n    } catch {}\n  }\n\n  /** */\n  get isActive() {\n    return false;\n  }\n  /** */\n\n  /** */\n\n  /** */\n}\nIMask.MaskElement = MaskElement;\n\nexport { MaskElement as default };\n","import MaskElement from './mask-element.js';\nimport IMask from '../core/holder.js';\n\nconst KEY_Z = 90;\nconst KEY_Y = 89;\n\n/** Bridge between HTMLElement and {@link Masked} */\nclass HTMLMaskElement extends MaskElement {\n  /** HTMLElement to use mask on */\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this._onKeydown = this._onKeydown.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onBeforeinput = this._onBeforeinput.bind(this);\n    this._onCompositionEnd = this._onCompositionEnd.bind(this);\n  }\n  get rootElement() {\n    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) == null ? void 0 : _this$input$getRootNo2.call(_this$input)) != null ? _this$input$getRootNo : document;\n  }\n\n  /** Is element in focus */\n  get isActive() {\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /** Binds HTMLElement events to mask internal events */\n  bindEvents(handlers) {\n    this.input.addEventListener('keydown', this._onKeydown);\n    this.input.addEventListener('input', this._onInput);\n    this.input.addEventListener('beforeinput', this._onBeforeinput);\n    this.input.addEventListener('compositionend', this._onCompositionEnd);\n    this.input.addEventListener('drop', handlers.drop);\n    this.input.addEventListener('click', handlers.click);\n    this.input.addEventListener('focus', handlers.focus);\n    this.input.addEventListener('blur', handlers.commit);\n    this._handlers = handlers;\n  }\n  _onKeydown(e) {\n    if (this._handlers.redo && (e.keyCode === KEY_Z && e.shiftKey && (e.metaKey || e.ctrlKey) || e.keyCode === KEY_Y && e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n    if (this._handlers.undo && e.keyCode === KEY_Z && (e.metaKey || e.ctrlKey)) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (!e.isComposing) this._handlers.selectionChange(e);\n  }\n  _onBeforeinput(e) {\n    if (e.inputType === 'historyUndo' && this._handlers.undo) {\n      e.preventDefault();\n      return this._handlers.undo(e);\n    }\n    if (e.inputType === 'historyRedo' && this._handlers.redo) {\n      e.preventDefault();\n      return this._handlers.redo(e);\n    }\n  }\n  _onCompositionEnd(e) {\n    this._handlers.input(e);\n  }\n  _onInput(e) {\n    if (!e.isComposing) this._handlers.input(e);\n  }\n\n  /** Unbinds HTMLElement events to mask internal events */\n  unbindEvents() {\n    this.input.removeEventListener('keydown', this._onKeydown);\n    this.input.removeEventListener('input', this._onInput);\n    this.input.removeEventListener('beforeinput', this._onBeforeinput);\n    this.input.removeEventListener('compositionend', this._onCompositionEnd);\n    this.input.removeEventListener('drop', this._handlers.drop);\n    this.input.removeEventListener('click', this._handlers.click);\n    this.input.removeEventListener('focus', this._handlers.focus);\n    this.input.removeEventListener('blur', this._handlers.commit);\n    this._handlers = {};\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\n/** Bridge between InputElement and {@link Masked} */\nclass HTMLInputMaskElement extends HTMLMaskElement {\n  /** InputElement to use mask on */\n\n  constructor(input) {\n    super(input);\n    this.input = input;\n  }\n\n  /** Returns InputElement selection start */\n  get _unsafeSelectionStart() {\n    return this.input.selectionStart != null ? this.input.selectionStart : this.value.length;\n  }\n\n  /** Returns InputElement selection end */\n  get _unsafeSelectionEnd() {\n    return this.input.selectionEnd;\n  }\n\n  /** Sets InputElement selection */\n  _unsafeSelect(start, end) {\n    this.input.setSelectionRange(start, end);\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(value) {\n    this.input.value = value;\n  }\n}\nIMask.HTMLMaskElement = HTMLMaskElement;\n\nexport { HTMLInputMaskElement as default };\n","import HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\nimport './mask-element.js';\n\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /** Returns HTMLElement selection start */\n  get _unsafeSelectionStart() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Returns HTMLElement selection end */\n  get _unsafeSelectionEnd() {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /** Sets HTMLElement selection */\n  _unsafeSelect(start, end) {\n    if (!this.rootElement.createRange) return;\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /** HTMLElement value */\n  get value() {\n    return this.input.textContent || '';\n  }\n  set value(value) {\n    this.input.textContent = value;\n  }\n}\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n\nexport { HTMLContenteditableMaskElement as default };\n","class InputHistory {\n  constructor() {\n    this.states = [];\n    this.currentIndex = 0;\n  }\n  get currentState() {\n    return this.states[this.currentIndex];\n  }\n  get isEmpty() {\n    return this.states.length === 0;\n  }\n  push(state) {\n    // if current index points before the last element then remove the future\n    if (this.currentIndex < this.states.length - 1) this.states.length = this.currentIndex + 1;\n    this.states.push(state);\n    if (this.states.length > InputHistory.MAX_LENGTH) this.states.shift();\n    this.currentIndex = this.states.length - 1;\n  }\n  go(steps) {\n    this.currentIndex = Math.min(Math.max(this.currentIndex + steps, 0), this.states.length - 1);\n    return this.currentState;\n  }\n  undo() {\n    return this.go(-1);\n  }\n  redo() {\n    return this.go(+1);\n  }\n  clear() {\n    this.states.length = 0;\n    this.currentIndex = 0;\n  }\n}\nInputHistory.MAX_LENGTH = 100;\n\nexport { InputHistory as default };\n","import { DIRECTION } from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport createMask, { maskedClass } from '../masked/factory.js';\nimport MaskElement from './mask-element.js';\nimport HTMLInputMaskElement from './html-input-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\nimport InputHistory from './input-history.js';\nimport './html-mask-element.js';\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nclass InputMask {\n  /**\n    View element\n  */\n\n  /** Internal {@link Masked} model */\n\n  constructor(el, opts) {\n    this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA' ? new HTMLContenteditableMaskElement(el) : new HTMLInputMaskElement(el);\n    this.masked = createMask(opts);\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n    this._rawInputValue = '';\n    this.history = new InputHistory();\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onUndo = this._onUndo.bind(this);\n    this._onRedo = this._onRedo.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n  maskEquals(mask) {\n    var _this$masked;\n    return mask == null || ((_this$masked = this.masked) == null ? void 0 : _this$masked.maskEquals(mask));\n  }\n\n  /** Masked */\n  get mask() {\n    return this.masked.mask;\n  }\n  set mask(mask) {\n    if (this.maskEquals(mask)) return;\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      // TODO \"any\" no idea\n      this.masked.updateOptions({\n        mask\n      });\n      return;\n    }\n    const masked = mask instanceof IMask.Masked ? mask : createMask({\n      mask\n    });\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value() {\n    return this._value;\n  }\n  set value(str) {\n    if (this.value === str) return;\n    this.masked.value = str;\n    this.updateControl('auto');\n  }\n\n  /** Unmasked value */\n  get unmaskedValue() {\n    return this._unmaskedValue;\n  }\n  set unmaskedValue(str) {\n    if (this.unmaskedValue === str) return;\n    this.masked.unmaskedValue = str;\n    this.updateControl('auto');\n  }\n\n  /** Raw input value */\n  get rawInputValue() {\n    return this._rawInputValue;\n  }\n  set rawInputValue(str) {\n    if (this.rawInputValue === str) return;\n    this.masked.rawInputValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue() {\n    return this.masked.typedValue;\n  }\n  set typedValue(val) {\n    if (this.masked.typedValueEquals(val)) return;\n    this.masked.typedValue = val;\n    this.updateControl('auto');\n  }\n\n  /** Display value */\n  get displayValue() {\n    return this.masked.displayValue;\n  }\n\n  /** Starts listening to element events */\n  _bindEvents() {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n      undo: this._onUndo,\n      redo: this._onRedo\n    });\n  }\n\n  /** Stops listening to element events */\n  _unbindEvents() {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /** Fires custom event */\n  _fireEvent(ev, e) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n    listeners.forEach(l => l(e));\n  }\n\n  /** Current selection start */\n  get selectionStart() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos() {\n    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n  }\n  set cursorPos(pos) {\n    if (!this.el || !this.el.isActive) return;\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /** Stores current selection */\n  _saveSelection( /* ev */\n  ) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue() {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n    this._unmaskedValue = this.masked.unmaskedValue;\n    this._rawInputValue = this.masked.rawInputValue;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl(cursorPos) {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newRawInputValue = this.masked.rawInputValue;\n    const newDisplayValue = this.displayValue;\n    const isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue || this._rawInputValue !== newRawInputValue;\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n    this._rawInputValue = newRawInputValue;\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (cursorPos === 'auto') this.alignCursor();else if (cursorPos != null) this.cursorPos = cursorPos;\n    if (isChanged) this._fireChangeEvents();\n    if (!this._historyChanging && (isChanged || this.history.isEmpty)) this.history.push({\n      unmaskedValue: newUnmaskedValue,\n      selection: {\n        start: this.selectionStart,\n        end: this.cursorPos\n      }\n    });\n  }\n\n  /** Updates options with deep equal check, recreates {@link Masked} model if mask type changes */\n  updateOptions(opts) {\n    const {\n      mask,\n      ...restOpts\n    } = opts; // TODO types, yes, mask is optional\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = this.masked.optionsIsChanged(restOpts);\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts); // TODO\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor(cursorPos) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /** Delays cursor update to support mobile browsers */\n  _delayUpdateCursor(cursorPos) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /** Fires custom events */\n  _fireChangeEvents() {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /** Aborts delayed cursor update */\n  _abortUpdateCursor() {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor() {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly() {\n    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on(ev, handler) {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off(ev, handler) {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput(e) {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n    const details = new ActionDetails({\n      // new state\n      value: this.el.value,\n      cursorPos: this.cursorPos,\n      // old state\n      oldValue: this.displayValue,\n      oldSelection: this._selection\n    });\n    const oldRawValue = this.masked.rawInputValue;\n    const offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n      input: true,\n      raw: true\n    }).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n    let cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n    this.updateControl(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange() {\n    if (this.displayValue !== this.el.value) this.updateValue();\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus(ev) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick(ev) {\n    this.alignCursorFriendly();\n  }\n  _onUndo() {\n    this._applyHistoryState(this.history.undo());\n  }\n  _onRedo() {\n    this._applyHistoryState(this.history.redo());\n  }\n  _applyHistoryState(state) {\n    if (!state) return;\n    this._historyChanging = true;\n    this.unmaskedValue = state.unmaskedValue;\n    this.el.select(state.selection.start, state.selection.end);\n    this._saveSelection();\n    this._historyChanging = false;\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy() {\n    this._unbindEvents();\n    this._listeners.length = 0;\n    delete this.el;\n  }\n}\nIMask.InputMask = InputMask;\n\nexport { InputMask as default };\n","import IMask from './holder.js';\n\n/** Provides details of changing model value */\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  /** Can skip chars */\n\n  static normalize(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()];\n  }\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      tailShift: 0,\n      skip: false\n    }, details);\n  }\n\n  /** Aggregate changes */\n  aggregate(details) {\n    this.inserted += details.inserted;\n    this.rawInserted += details.rawInserted;\n    this.tailShift += details.tailShift;\n    this.skip = this.skip || details.skip;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n  get consumed() {\n    return Boolean(this.rawInserted) || this.skip;\n  }\n  equals(details) {\n    return this.inserted === details.inserted && this.tailShift === details.tailShift && this.rawInserted === details.rawInserted && this.skip === details.skip;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n","/** Provides details of continuous extracted tail */\nclass ContinuousTailDetails {\n  /** Tail value as string */\n\n  /** Tail start position */\n\n  /** Start position */\n\n  constructor(value, from, stop) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n  toString() {\n    return this.value;\n  }\n  extend(tail) {\n    this.value += String(tail);\n  }\n  appendTo(masked) {\n    return masked.append(this.toString(), {\n      tail: true\n    }).aggregate(masked._appendPlaceholder());\n  }\n  get state() {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop\n    };\n  }\n  set state(state) {\n    Object.assign(this, state);\n  }\n  unshift(beforePos) {\n    if (!this.value.length || beforePos != null && this.from >= beforePos) return '';\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n  shift() {\n    if (!this.value.length) return '';\n    const shiftChar = this.value[this.value.length - 1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n\nexport { ContinuousTailDetails as default };\n","import ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { isString, DIRECTION, objectIncludes, forceDirection } from '../core/utils.js';\nimport IMask from '../core/holder.js';\n\n/** Append flags */\n\n/** Extract flags */\n\n// see https://github.com/microsoft/TypeScript/issues/6223\n\n/** Provides common masking stuff */\nclass Masked {\n  /** */\n\n  /** */\n\n  /** Transforms value before mask processing */\n\n  /** Transforms each char before mask processing */\n\n  /** Validates if value is acceptable */\n\n  /** Does additional processing at the end of editing */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts\n    });\n    this._initialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions(opts) {\n    if (!this.optionsIsChanged(opts)) return;\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /** Sets new options */\n  _update(opts) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset() {\n    this._value = '';\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.resolve(value, {\n      input: true\n    });\n  }\n\n  /** Resolve new value */\n  resolve(value, flags) {\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    this.reset();\n    this.append(value, flags, '');\n    this.doCommit();\n  }\n  get unmaskedValue() {\n    return this.value;\n  }\n  set unmaskedValue(value) {\n    this.resolve(value, {});\n  }\n  get typedValue() {\n    return this.parse ? this.parse(this.value, this) : this.unmaskedValue;\n  }\n  set typedValue(value) {\n    if (this.format) {\n      this.value = this.format(value, this);\n    } else {\n      this.unmaskedValue = String(value);\n    }\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue() {\n    return this.extractInput(0, this.displayValue.length, {\n      raw: true\n    });\n  }\n  set rawInputValue(value) {\n    this.resolve(value, {\n      raw: true\n    });\n  }\n  get displayValue() {\n    return this.value;\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos(cursorPos, direction) {\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return Math.min(this.displayValue.length, toPos - fromPos);\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return this.displayValue.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw(ch, flags) {\n    if (!ch) return new ChangeDetails();\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch\n    });\n  }\n\n  /** Appends char */\n  _appendChar(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const consistentState = this.state;\n    let details;\n    [ch, details] = this.doPrepareChar(ch, flags);\n    if (ch) {\n      details = details.aggregate(this._appendCharRaw(ch, flags));\n\n      // TODO handle `skip`?\n\n      // try `autofix` lookahead\n      if (!details.rawInserted && this.autofix === 'pad') {\n        const noFixState = this.state;\n        this.state = consistentState;\n        let fixDetails = this.pad(flags);\n        const chDetails = this._appendCharRaw(ch, flags);\n        fixDetails = fixDetails.aggregate(chDetails);\n\n        // if fix was applied or\n        // if details are equal use skip restoring state optimization\n        if (chDetails.rawInserted || fixDetails.equals(details)) {\n          details = fixDetails;\n        } else {\n          this.state = noFixState;\n        }\n      }\n    }\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.unshift(this.displayValue.length - details.tailShift);\n          }\n        }\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted.length === checkTail.toString().length;\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          for (let i = 0; i < details.rawInserted.length; ++i) {\n            checkTail.shift();\n          }\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted.length === checkTail.toString().length;\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at the end */\n  _appendPlaceholder() {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at the end */\n  _appendEager() {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  append(str, flags, tail) {\n    if (!isString(str)) throw new Error('value should be string');\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags != null && flags.tail) flags._beforeTailState = this.state;\n    let details;\n    [str, details] = this.doPrepare(str, flags);\n    for (let ci = 0; ci < str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n    if ((this.eager === true || this.eager === 'append') && flags != null && flags.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n    return details;\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    this._value = this.displayValue.slice(0, fromPos) + this.displayValue.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh(fn) {\n    if (this._refreshing || !this._initialized) return fn();\n    this._refreshing = true;\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n    const ret = fn();\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at the end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.displayValue.length), {}, '');\n      this.doCommit();\n    }\n    delete this._refreshing;\n    return ret;\n  }\n  runIsolated(fn) {\n    if (this._isolated || !this._initialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n    const ret = fn(this);\n    this.state = state;\n    delete this._isolated;\n    return ret;\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    return Boolean(this.skipInvalid);\n  }\n\n  /** Prepares string before mask processing */\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepare ? this.prepare(str, this, flags) : str);\n  }\n\n  /** Prepares each char before mask processing */\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    return ChangeDetails.normalize(this.prepareChar ? this.prepareChar(str, this, flags) : str);\n  }\n\n  /** Validates if value is acceptable */\n  doValidate(flags) {\n    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /** Does additional processing at the end of editing */\n  doCommit() {\n    if (this.commit) this.commit(this.value, this);\n  }\n  splice(start, deleteCount, inserted, removeDirection, flags) {\n    if (inserted === void 0) {\n      inserted = '';\n    }\n    if (removeDirection === void 0) {\n      removeDirection = DIRECTION.NONE;\n    }\n    if (flags === void 0) {\n      flags = {\n        input: true\n      };\n    }\n    const tailPos = start + deleteCount;\n    const tail = this.extractTail(tailPos);\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n    let oldRawValue;\n    if (eagerRemove) {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {\n        raw: true\n      });\n    }\n    let startChangePos = start;\n    const details = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !eagerRemove ? DIRECTION.NONE : removeDirection);\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n    details.aggregate(this.remove(startChangePos));\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.displayValue.length)) {\n          details.aggregate(new ChangeDetails({\n            tailShift: -1\n          })).aggregate(this.remove(valLength - 1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n  maskEquals(mask) {\n    return this.mask === mask;\n  }\n  optionsIsChanged(opts) {\n    return !objectIncludes(this, opts);\n  }\n  typedValueEquals(value) {\n    const tval = this.typedValue;\n    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || (this.format ? this.format(value, this) === this.format(this.typedValue, this) : false);\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nMasked.DEFAULTS = {\n  skipInvalid: true\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\nIMask.Masked = Masked;\n\nexport { Masked as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\nclass ChunksTailDetails {\n  /** */\n\n  constructor(chunks, from) {\n    if (chunks === void 0) {\n      chunks = [];\n    }\n    if (from === void 0) {\n      from = 0;\n    }\n    this.chunks = chunks;\n    this.from = from;\n  }\n  toString() {\n    return this.chunks.map(String).join('');\n  }\n  extend(tailChunk) {\n    if (!String(tailChunk)) return;\n    tailChunk = isString(tailChunk) ? new ContinuousTailDetails(String(tailChunk)) : tailChunk;\n    const lastChunk = this.chunks[this.chunks.length - 1];\n    const extendLast = lastChunk && (\n    // if stops are same or tail has no stop\n    lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n    // if tail chunk goes just after last chunk\n    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift(); // not possible to be `undefined` because length was checked above\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n  appendTo(masked) {\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n    const details = new ChangeDetails();\n    for (let ci = 0; ci < this.chunks.length; ++ci) {\n      const chunk = this.chunks[ci];\n      const lastBlockIter = masked._mapPosToBlock(masked.displayValue.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null && (\n      // if block not found or stop is behind lastBlock\n      !lastBlockIter || lastBlockIter.index <= stop)) {\n        if (chunk instanceof ChunksTailDetails ||\n        // for continuous block also check if stop is exist\n        masked._stops.indexOf(stop) >= 0) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        details.aggregate(tailDetails);\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, {\n          tail: true\n        }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), {\n          tail: true\n        }));\n      }\n    }\n    return details;\n  }\n  get state() {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex\n    };\n  }\n  set state(state) {\n    const {\n      chunks,\n      ...props\n    } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails();\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n  unshift(beforePos) {\n    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return '';\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci = 0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n  shift() {\n    if (!this.chunks.length) return '';\n    let ci = this.chunks.length - 1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n      if (shiftChar) return shiftChar;\n    }\n    return '';\n  }\n}\n\nexport { ChunksTailDetails as default };\n","import { DIRECTION } from '../../core/utils.js';\n\nclass PatternCursor {\n  constructor(masked, pos) {\n    this.masked = masked;\n    this._log = [];\n    const {\n      offset,\n      index\n    } = masked._mapPosToBlock(pos) || (pos < 0 ?\n    // first\n    {\n      index: 0,\n      offset: 0\n    } :\n    // last\n    {\n      index: this.masked._blocks.length,\n      offset: 0\n    });\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n  get block() {\n    return this.masked._blocks[this.index];\n  }\n  get pos() {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n  get state() {\n    return {\n      index: this.index,\n      offset: this.offset,\n      ok: this.ok\n    };\n  }\n  set state(s) {\n    Object.assign(this, s);\n  }\n  pushState() {\n    this._log.push(this.state);\n  }\n  popState() {\n    const s = this._log.pop();\n    if (s) this.state = s;\n    return s;\n  }\n  bindBlock() {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.displayValue.length; // TODO this is stupid type error, `block` depends on index that was changed above\n    }\n  }\n  _pushLeft(fn) {\n    this.pushState();\n    for (this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) == null ? void 0 : _this$block.displayValue.length) || 0) {\n      var _this$block;\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  _pushRight(fn) {\n    this.pushState();\n    for (this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0) {\n      if (fn()) return this.ok = true;\n    }\n    return this.ok = false;\n  }\n  pushLeftBeforeFilled() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n  pushLeftBeforeInput() {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushLeftBeforeRequired() {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n  pushRightBeforeFilled() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n  pushRightBeforeInput() {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n  pushRightBeforeRequired() {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n\nexport { PatternCursor as default };\n","import ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport '../../core/holder.js';\n\nclass PatternFixedDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n  get value() {\n    return this._value;\n  }\n  get unmaskedValue() {\n    return this.isUnmasking ? this.value : '';\n  }\n  get rawInputValue() {\n    return this._isRawInput ? this.value : '';\n  }\n  get displayValue() {\n    return this.value;\n  }\n  reset() {\n    this._isRawInput = false;\n    this._value = '';\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n    return new ChangeDetails();\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this._value.length;\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    return this._isRawInput ? toPos - fromPos : 0;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this._value.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n  get isComplete() {\n    return true;\n  }\n  get isFilled() {\n    return Boolean(this._value);\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const appendEager = this.eager === true || this.eager === 'append';\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    const details = new ChangeDetails({\n      inserted: this.char,\n      rawInserted: isResolved ? this.char : ''\n    });\n    this._value = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n    return details;\n  }\n  _appendEager() {\n    return this._appendChar(this.char, {\n      tail: true\n    });\n  }\n  _appendPlaceholder() {\n    const details = new ChangeDetails();\n    if (this.isFilled) return details;\n    this._value = details.inserted = this.char;\n    return details;\n  }\n  extractTail() {\n    return new ContinuousTailDetails('');\n  }\n  appendTail(tail) {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n    return tail.appendTo(this);\n  }\n  append(str, flags, tail) {\n    const details = this._appendChar(str[0], flags);\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n    return details;\n  }\n  doCommit() {}\n  get state() {\n    return {\n      _value: this._value,\n      _rawInputValue: this.rawInputValue\n    };\n  }\n  set state(state) {\n    this._value = state._value;\n    this._isRawInput = Boolean(state._rawInputValue);\n  }\n  pad(flags) {\n    return this._appendPlaceholder();\n  }\n}\n\nexport { PatternFixedDefinition as default };\n","import createMask from '../factory.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION } from '../../core/utils.js';\nimport '../../core/holder.js';\n\nclass PatternInputDefinition {\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    const {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager,\n      ...maskOpts\n    } = opts;\n    this.masked = createMask(maskOpts);\n    Object.assign(this, {\n      parent,\n      isOptional,\n      placeholderChar,\n      displayChar,\n      lazy,\n      eager\n    });\n  }\n  reset() {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n    return new ChangeDetails();\n  }\n  get value() {\n    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : '');\n  }\n  get unmaskedValue() {\n    return this.masked.unmaskedValue;\n  }\n  get rawInputValue() {\n    return this.masked.rawInputValue;\n  }\n  get displayValue() {\n    return this.masked.value && this.displayChar || this.value;\n  }\n  get isComplete() {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n  _appendChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (this.isFilled) return new ChangeDetails();\n    const state = this.masked.state;\n    // simulate input\n    let details = this.masked._appendChar(ch, this.currentMaskFlags(flags));\n    if (details.inserted && this.doValidate(flags) === false) {\n      details = new ChangeDetails();\n      this.masked.state = state;\n    }\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n    return details;\n  }\n  append(str, flags, tail) {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(str, this.currentMaskFlags(flags), tail);\n  }\n  _appendPlaceholder() {\n    if (this.isFilled || this.isOptional) return new ChangeDetails();\n    this.isFilled = true;\n    return new ChangeDetails({\n      inserted: this.placeholderChar\n    });\n  }\n  _appendEager() {\n    return new ChangeDetails();\n  }\n  extractTail(fromPos, toPos) {\n    return this.masked.extractTail(fromPos, toPos);\n  }\n  appendTail(tail) {\n    return this.masked.appendTail(tail);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default:\n        return boundPos;\n    }\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.value.length;\n    }\n    return this.value.slice(fromPos, toPos).length;\n  }\n  doValidate(flags) {\n    return this.masked.doValidate(this.currentMaskFlags(flags)) && (!this.parent || this.parent.doValidate(this.currentMaskFlags(flags)));\n  }\n  doCommit() {\n    this.masked.doCommit();\n  }\n  get state() {\n    return {\n      _value: this.value,\n      _rawInputValue: this.rawInputValue,\n      masked: this.masked.state,\n      isFilled: this.isFilled\n    };\n  }\n  set state(state) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta;\n    return {\n      ...flags,\n      _beforeTailState: (flags == null || (_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.masked) || (flags == null ? void 0 : flags._beforeTailState)\n    };\n  }\n  pad(flags) {\n    return new ChangeDetails();\n  }\n}\nPatternInputDefinition.DEFAULT_DEFINITIONS = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\nexport { PatternInputDefinition as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const mask = opts.mask;\n    if (mask) opts.validate = value => value.search(mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport { DIRECTION } from '../core/utils.js';\nimport Masked from './base.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport PatternCursor from './pattern/cursor.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport PatternInputDefinition from './pattern/input-definition.js';\nimport './regexp.js';\nimport '../core/continuous-tail-details.js';\n\n/** Pattern mask */\nclass MaskedPattern extends Masked {\n  /** */\n\n  /** */\n\n  /** Single char for empty input */\n\n  /** Single char for filled input */\n\n  /** Show placeholder only when needed */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  constructor(opts) {\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n      definitions: Object.assign({}, PatternInputDefinition.DEFAULT_DEFINITIONS, opts == null ? void 0 : opts.definitions)\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n  _rebuildMask() {\n    const defs = this.definitions;\n    this._blocks = [];\n    this.exposeBlock = undefined;\n    this._stops = [];\n    this._maskedBlocks = {};\n    const pattern = this.mask;\n    if (!pattern || !defs) return;\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n    for (let i = 0; i < pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          const {\n            expose,\n            repeat,\n            ...bOpts\n          } = normalizeOpts(this.blocks[bName]); // TODO type Opts<Arg & Extra>\n          const blockOpts = {\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            autofix: this.autofix,\n            ...bOpts,\n            repeat,\n            parent: this\n          };\n          const maskedBlock = repeat != null ? new IMask.RepeatBlock(blockOpts /* TODO */) : createMask(blockOpts);\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n            if (expose) this.exposeBlock = maskedBlock;\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n          i += bName.length - 1;\n          continue;\n        }\n      }\n      let char = pattern[i];\n      let isInput = (char in defs);\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n      const def = isInput ? new PatternInputDefinition({\n        isOptional: optionalBlock,\n        lazy: this.lazy,\n        eager: this.eager,\n        placeholderChar: this.placeholderChar,\n        displayChar: this.displayChar,\n        ...normalizeOpts(defs[char]),\n        parent: this\n      }) : new PatternFixedDefinition({\n        char,\n        eager: this.eager,\n        isUnmasking: unmaskingBlock\n      });\n      this._blocks.push(def);\n    }\n  }\n  get state() {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state)\n    };\n  }\n  set state(state) {\n    if (!state) {\n      this.reset();\n      return;\n    }\n    const {\n      _blocks,\n      ...maskedState\n    } = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n  reset() {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n  get isComplete() {\n    return this.exposeBlock ? this.exposeBlock.isComplete : this._blocks.every(b => b.isComplete);\n  }\n  get isFilled() {\n    return this._blocks.every(b => b.isFilled);\n  }\n  get isFixed() {\n    return this._blocks.every(b => b.isFixed);\n  }\n  get isOptional() {\n    return this._blocks.every(b => b.isOptional);\n  }\n  doCommit() {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n  get unmaskedValue() {\n    return this.exposeBlock ? this.exposeBlock.unmaskedValue : this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.unmaskedValue = unmaskedValue;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get value() {\n    return this.exposeBlock ? this.exposeBlock.value :\n    // TODO return _value when not in change?\n    this._blocks.reduce((str, b) => str += b.value, '');\n  }\n  set value(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.value = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.value = value;\n  }\n  get typedValue() {\n    return this.exposeBlock ? this.exposeBlock.typedValue : super.typedValue;\n  }\n  set typedValue(value) {\n    if (this.exposeBlock) {\n      const tail = this.extractTail(this._blockStartPos(this._blocks.indexOf(this.exposeBlock)) + this.exposeBlock.displayValue.length);\n      this.exposeBlock.typedValue = value;\n      this.appendTail(tail);\n      this.doCommit();\n    } else super.typedValue = value;\n  }\n  get displayValue() {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n  appendTail(tail) {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n  _appendEager() {\n    var _this$_mapPosToBlock;\n    const details = new ChangeDetails();\n    let startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n    for (let bi = startBlockIndex; bi < this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n      details.aggregate(d);\n    }\n    return details;\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const blockIter = this._mapPosToBlock(this.displayValue.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n    for (let bi = blockIter.index, block; block = this._blocks[bi]; ++bi) {\n      var _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n      chunkTail.extend(blockChunk);\n    });\n    return chunkTail;\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (fromPos === toPos) return '';\n    let input = '';\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n    return input;\n  }\n  _findStopBefore(blockIndex) {\n    let stopBefore;\n    for (let si = 0; si < this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder(toBlockIndex) {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n    const startBlockIter = this._mapPosToBlock(this.displayValue.length);\n    if (!startBlockIter) return details;\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(b => {\n      if (!b.lazy || toBlockIndex != null) {\n        var _blocks2;\n        details.aggregate(b._appendPlaceholder((_blocks2 = b._blocks) == null ? void 0 : _blocks2.length));\n      }\n    });\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock(pos) {\n    let accVal = '';\n    for (let bi = 0; bi < this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n      accVal += block.displayValue;\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos\n        };\n      }\n    }\n  }\n  _blockStartPos(blockIndex) {\n    return this._blocks.slice(0, blockIndex).reduce((pos, b) => pos += b.displayValue.length, 0);\n  }\n  _forEachBlocksInRange(fromPos, toPos, fn) {\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].displayValue.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].displayValue.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (direction === void 0) {\n      direction = DIRECTION.NONE;\n    }\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.displayValue.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return 0;\n    }\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.displayValue.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n    return cursorPos;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    let total = 0;\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      total += b.totalInputPositions(bFromPos, bToPos);\n    });\n    return total;\n  }\n\n  /** Get block by name */\n  maskedBlock(name) {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks(name) {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    this._forEachBlocksInRange(0, this.displayValue.length, b => details.aggregate(b.pad(flags)));\n    return details;\n  }\n}\nMaskedPattern.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\nIMask.MaskedPattern = MaskedPattern;\n\nexport { MaskedPattern as default };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which accepts ranges */\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n\n  /** Min bound */\n\n  /** Max bound */\n\n  get _matchFrom() {\n    return this.maxLength - String(this.from).length;\n  }\n  constructor(opts) {\n    super(opts); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      to = this.to || 0,\n      from = this.from || 0,\n      maxLength = this.maxLength || 0,\n      autofix = this.autofix,\n      ...patternOpts\n    } = opts;\n    this.to = to;\n    this.from = from;\n    this.maxLength = Math.max(String(to).length, maxLength);\n    this.autofix = autofix;\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    patternOpts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(this.maxLength - sameCharsCount);\n    super._update(patternOpts);\n  }\n  get isComplete() {\n    return super.isComplete && Boolean(this.value);\n  }\n  boundaries(str) {\n    let minstr = '';\n    let maxstr = '';\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n    return [minstr, maxstr];\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let details;\n    [ch, details] = super.doPrepareChar(ch.replace(/\\D/g, ''), flags);\n    if (!ch) details.skip = !this.isComplete;\n    return [ch, details];\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (!this.autofix || this.value.length + 1 > this.maxLength) return super._appendCharRaw(ch, flags);\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n    const [minstr, maxstr] = this.boundaries(this.value + ch);\n    if (Number(maxstr) < this.from) return super._appendCharRaw(fromStr[this.value.length], flags);\n    if (Number(minstr) > this.to) {\n      if (!flags.tail && this.autofix === 'pad' && this.value.length + 1 < this.maxLength) {\n        return super._appendCharRaw(fromStr[this.value.length], flags).aggregate(this._appendCharRaw(ch, flags));\n      }\n      return super._appendCharRaw(toStr[this.value.length], flags);\n    }\n    return super._appendCharRaw(ch, flags);\n  }\n  doValidate(flags) {\n    const str = this.value;\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n    const [minstr, maxstr] = this.boundaries(str);\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to && super.doValidate(flags);\n  }\n  pad(flags) {\n    const details = new ChangeDetails();\n    if (this.value.length === this.maxLength) return details;\n    const value = this.value;\n    const padLength = this.maxLength - this.value.length;\n    if (padLength) {\n      this.reset();\n      for (let i = 0; i < padLength; ++i) {\n        details.aggregate(super._appendCharRaw('0', flags));\n      }\n\n      // append tail\n      value.split('').forEach(ch => this._appendCharRaw(ch));\n    }\n    return details;\n  }\n}\nIMask.MaskedRange = MaskedRange;\n\nexport { MaskedRange as default };\n","import MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\nimport { isString } from '../core/utils.js';\nimport '../core/change-details.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\nconst DefaultPattern = 'd{.}`m{.}`Y';\n\n// Make format and parse required when pattern is provided\n\n/** Date mask */\nclass MaskedDate extends MaskedPattern {\n  static extractPatternOptions(opts) {\n    const {\n      mask,\n      pattern,\n      ...patternOpts\n    } = opts;\n    return {\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern\n    };\n  }\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n\n  /** Start date */\n\n  /** End date */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super(MaskedDate.extractPatternOptions({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    }));\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      mask,\n      pattern,\n      blocks,\n      ...patternOpts\n    } = {\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    };\n    const patternBlocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) patternBlocks.Y.from = opts.min.getFullYear();\n    if (opts.max) patternBlocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && patternBlocks.Y.from === patternBlocks.Y.to) {\n      patternBlocks.m.from = opts.min.getMonth() + 1;\n      patternBlocks.m.to = opts.max.getMonth() + 1;\n      if (patternBlocks.m.from === patternBlocks.m.to) {\n        patternBlocks.d.from = opts.min.getDate();\n        patternBlocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(patternBlocks, this.blocks, blocks);\n    super._update({\n      ...patternOpts,\n      mask: isString(mask) ? mask : pattern,\n      blocks: patternBlocks\n    });\n  }\n  doValidate(flags) {\n    const date = this.date;\n    return super.doValidate(flags) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist(str) {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date() {\n    return this.typedValue;\n  }\n  set date(date) {\n    this.typedValue = date;\n  }\n  get typedValue() {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue(value) {\n    super.typedValue = value;\n  }\n  maskEquals(mask) {\n    return mask === Date || super.maskEquals(mask);\n  }\n  optionsIsChanged(opts) {\n    return super.optionsIsChanged(MaskedDate.extractPatternOptions(opts));\n  }\n}\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999\n  }\n});\nMaskedDate.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  mask: Date,\n  pattern: DefaultPattern,\n  format: (date, masked) => {\n    if (!date) return '';\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n    return [day, month, year].join('.');\n  },\n  parse: (str, masked) => {\n    const [day, month, year] = str.split('.').map(Number);\n    return new Date(year, month - 1, day);\n  }\n};\nIMask.MaskedDate = MaskedDate;\n\nexport { MaskedDate as default };\n","import { DIRECTION, objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\n/** Dynamic mask for choosing appropriate mask in run-time */\nclass MaskedDynamic extends Masked {\n  constructor(opts) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n    this.currentMask = undefined;\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    if ('mask' in opts) {\n      this.exposeMask = undefined;\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(m => {\n        const {\n          expose,\n          ...maskOpts\n        } = normalizeOpts(m);\n        const masked = createMask({\n          overwrite: this._overwrite,\n          eager: this._eager,\n          skipInvalid: this._skipInvalid,\n          ...maskOpts\n        });\n        if (expose) this.exposeMask = masked;\n        return masked;\n      }) : [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = this._applyDispatch(ch, flags);\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n    return details;\n  }\n  _applyDispatch(appended, flags, tail) {\n    if (appended === void 0) {\n      appended = '';\n    }\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._rawInputValue : inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n    const prevMaskState = prevMask == null ? void 0 : prevMask.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, {\n      ...flags\n    }, tail);\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n        if (insertValue) {\n          this.currentMask.append(insertValue, {\n            raw: true\n          });\n          details.tailShift = this.currentMask.value.length - prevValueBeforeTail.length;\n        }\n        if (tailValue) {\n          details.tailShift += this.currentMask.append(tailValue, {\n            raw: true,\n            tail: true\n          }).tailShift;\n        }\n      } else if (prevMaskState) {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n    return details;\n  }\n  _appendPlaceholder() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n    return details;\n  }\n  _appendEager() {\n    const details = this._applyDispatch();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n    return details;\n  }\n  appendTail(tail) {\n    const details = new ChangeDetails();\n    if (tail) details.aggregate(this._applyDispatch('', {}, tail));\n    return details.aggregate(this.currentMask ? this.currentMask.appendTail(tail) : super.appendTail(tail));\n  }\n  currentMaskFlags(flags) {\n    var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n    return {\n      ...flags,\n      _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) == null ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n    };\n  }\n  doDispatch(appended, flags, tail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    if (tail === void 0) {\n      tail = '';\n    }\n    return this.dispatch(appended, this, flags, tail);\n  }\n  doValidate(flags) {\n    return super.doValidate(flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n  }\n  doPrepare(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepare(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepare(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  doPrepareChar(str, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    let [s, details] = super.doPrepareChar(str, flags);\n    if (this.currentMask) {\n      let currentDetails;\n      [s, currentDetails] = super.doPrepareChar(s, this.currentMaskFlags(flags));\n      details = details.aggregate(currentDetails);\n    }\n    return [s, details];\n  }\n  reset() {\n    var _this$currentMask;\n    (_this$currentMask = this.currentMask) == null || _this$currentMask.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n  get value() {\n    return this.exposeMask ? this.exposeMask.value : this.currentMask ? this.currentMask.value : '';\n  }\n  set value(value) {\n    if (this.exposeMask) {\n      this.exposeMask.value = value;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.value = value;\n  }\n  get unmaskedValue() {\n    return this.exposeMask ? this.exposeMask.unmaskedValue : this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n  set unmaskedValue(unmaskedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.unmaskedValue = unmaskedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n    } else super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.exposeMask ? this.exposeMask.typedValue : this.currentMask ? this.currentMask.typedValue : '';\n  }\n  set typedValue(typedValue) {\n    if (this.exposeMask) {\n      this.exposeMask.typedValue = typedValue;\n      this.currentMask = this.exposeMask;\n      this._applyDispatch();\n      return;\n    }\n    let unmaskedValue = String(typedValue);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = typedValue;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n  get displayValue() {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n  get isComplete() {\n    var _this$currentMask2;\n    return Boolean((_this$currentMask2 = this.currentMask) == null ? void 0 : _this$currentMask2.isComplete);\n  }\n  get isFilled() {\n    var _this$currentMask3;\n    return Boolean((_this$currentMask3 = this.currentMask) == null ? void 0 : _this$currentMask3.isFilled);\n  }\n  remove(fromPos, toPos) {\n    const details = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(fromPos, toPos))\n      // update with dispatch\n      .aggregate(this._applyDispatch());\n    }\n    return details;\n  }\n  get state() {\n    var _this$currentMask4;\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: (_this$currentMask4 = this.currentMask) == null ? void 0 : _this$currentMask4.state\n    };\n  }\n  set state(state) {\n    const {\n      compiledMasks,\n      currentMaskRef,\n      currentMask,\n      ...maskedState\n    } = state;\n    if (compiledMasks) this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n  extractInput(fromPos, toPos, flags) {\n    return this.currentMask ? this.currentMask.extractInput(fromPos, toPos, flags) : '';\n  }\n  extractTail(fromPos, toPos) {\n    return this.currentMask ? this.currentMask.extractTail(fromPos, toPos) : super.extractTail(fromPos, toPos);\n  }\n  doCommit() {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n  nearestInputPos(cursorPos, direction) {\n    return this.currentMask ? this.currentMask.nearestInputPos(cursorPos, direction) : super.nearestInputPos(cursorPos, direction);\n  }\n  get overwrite() {\n    return this.currentMask ? this.currentMask.overwrite : this._overwrite;\n  }\n  set overwrite(overwrite) {\n    this._overwrite = overwrite;\n  }\n  get eager() {\n    return this.currentMask ? this.currentMask.eager : this._eager;\n  }\n  set eager(eager) {\n    this._eager = eager;\n  }\n  get skipInvalid() {\n    return this.currentMask ? this.currentMask.skipInvalid : this._skipInvalid;\n  }\n  set skipInvalid(skipInvalid) {\n    this._skipInvalid = skipInvalid;\n  }\n  get autofix() {\n    return this.currentMask ? this.currentMask.autofix : this._autofix;\n  }\n  set autofix(autofix) {\n    this._autofix = autofix;\n  }\n  maskEquals(mask) {\n    return Array.isArray(mask) ? this.compiledMasks.every((m, mi) => {\n      if (!mask[mi]) return;\n      const {\n        mask: oldMask,\n        ...restOpts\n      } = mask[mi];\n      return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n    }) : super.maskEquals(mask);\n  }\n  typedValueEquals(value) {\n    var _this$currentMask5;\n    return Boolean((_this$currentMask5 = this.currentMask) == null ? void 0 : _this$currentMask5.typedValueEquals(value));\n  }\n}\n/** Currently chosen mask */\n/** Currently chosen mask */\n/** Compliled {@link Masked} options */\n/** Chooses {@link Masked} depending on input value */\nMaskedDynamic.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  dispatch: (appended, masked, flags, tail) => {\n    if (!masked.compiledMasks.length) return;\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      const isCurrent = masked.currentMask === m;\n      const startInputPos = isCurrent ? m.displayValue.length : m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT);\n      if (m.rawInputValue !== inputValue) {\n        m.reset();\n        m.append(inputValue, {\n          raw: true\n        });\n      } else if (!isCurrent) {\n        m.remove(startInputPos);\n      }\n      m.append(appended, masked.currentMaskFlags(flags));\n      m.appendTail(tail);\n      return {\n        index,\n        weight: m.rawInputValue.length,\n        totalInputPositions: m.totalInputPositions(0, Math.max(startInputPos, m.nearestInputPos(m.displayValue.length, DIRECTION.FORCE_LEFT)))\n      };\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight || i2.totalInputPositions - i1.totalInputPositions);\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n","import MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { DIRECTION } from '../core/utils.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport './base.js';\nimport './factory.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern which validates enum values */\nclass MaskedEnum extends MaskedPattern {\n  constructor(opts) {\n    super({\n      ...MaskedEnum.DEFAULTS,\n      ...opts\n    }); // mask will be created in _update\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    const {\n      enum: enum_,\n      ...eopts\n    } = opts;\n    if (enum_) {\n      const lengths = enum_.map(e => e.length);\n      const requiredLength = Math.min(...lengths);\n      const optionalLength = Math.max(...lengths) - requiredLength;\n      eopts.mask = '*'.repeat(requiredLength);\n      if (optionalLength) eopts.mask += '[' + '*'.repeat(optionalLength) + ']';\n      this.enum = enum_;\n    }\n    super._update(eopts);\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const matchFrom = Math.min(this.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    const matches = this.enum.filter(e => this.matchValue(e, this.unmaskedValue + ch, matchFrom));\n    if (matches.length) {\n      if (matches.length === 1) {\n        this._forEachBlocksInRange(0, this.value.length, (b, bi) => {\n          const mch = matches[0][bi];\n          if (bi >= this.value.length || mch === b.value) return;\n          b.reset();\n          b._appendChar(mch, flags);\n        });\n      }\n      const d = super._appendCharRaw(matches[0][this.value.length], flags);\n      if (matches.length === 1) {\n        matches[0].slice(this.unmaskedValue.length).split('').forEach(mch => d.aggregate(super._appendCharRaw(mch)));\n      }\n      return d;\n    }\n    return new ChangeDetails({\n      skip: !this.isComplete\n    });\n  }\n  extractTail(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    // just drop tail\n    return new ContinuousTailDetails('', fromPos);\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    if (fromPos === toPos) return new ChangeDetails();\n    const matchFrom = Math.min(super.nearestInputPos(0, DIRECTION.FORCE_RIGHT), this.value.length);\n    let pos;\n    for (pos = fromPos; pos >= 0; --pos) {\n      const matches = this.enum.filter(e => this.matchValue(e, this.value.slice(matchFrom, pos), matchFrom));\n      if (matches.length > 1) break;\n    }\n    const details = super.remove(pos, toPos);\n    details.tailShift += pos - fromPos;\n    return details;\n  }\n  get isComplete() {\n    return this.enum.indexOf(this.value) >= 0;\n  }\n}\n/** Match enum value */\nMaskedEnum.DEFAULTS = {\n  ...MaskedPattern.DEFAULTS,\n  matchValue: (estr, istr, matchFrom) => estr.indexOf(istr, matchFrom) === matchFrom\n};\nIMask.MaskedEnum = MaskedEnum;\n\nexport { MaskedEnum as default };\n","import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by custom Function */\nclass MaskedFunction extends Masked {\n  /** */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update({\n      ...opts,\n      validate: opts.mask\n    });\n  }\n}\nIMask.MaskedFunction = MaskedFunction;\n\nexport { MaskedFunction as default };\n","import { escapeRegExp, DIRECTION } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\nvar _MaskedNumber;\n/** Number mask */\nclass MaskedNumber extends Masked {\n  /** Single char */\n\n  /** Single char */\n\n  /** Array of single chars */\n\n  /** */\n\n  /** */\n\n  /** Digits after point */\n\n  /** Flag to remove leading and trailing zeros in the end of editing */\n\n  /** Flag to pad trailing zeros after point in the end of editing */\n\n  /** Enable characters overwriting */\n\n  /** */\n\n  /** */\n\n  /** */\n\n  /** Format typed value to string */\n\n  /** Parse string to get typed value */\n\n  constructor(opts) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n  _updateRegExps() {\n    const start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    const mid = '\\\\d*';\n    const end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : '') + '$';\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join('') + \"]\", 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n  _removeThousandsSeparators(value) {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n  _insertThousandsSeparators(value) {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n  doPrepareChar(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const [prepCh, details] = super.doPrepareChar(this._removeThousandsSeparators(this.scale && this.mapToRadix.length && (\n    /*\n      radix should be mapped when\n      1) input is done from keyboard = flags.input && flags.raw\n      2) unmasked value is set = !flags.input && !flags.raw\n      and should not be mapped when\n      1) value is set = flags.input && !flags.raw\n      2) raw value is set = !flags.input && flags.raw\n    */\n    flags.input && flags.raw || !flags.input && !flags.raw) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch), flags);\n    if (ch && !prepCh) details.skip = true;\n    if (prepCh && !this.allowPositive && !this.value && prepCh !== '-') details.aggregate(this._appendChar('-'));\n    return [prepCh, details];\n  }\n  _separatorsCount(to, extendOnSeparators) {\n    if (extendOnSeparators === void 0) {\n      extendOnSeparators = false;\n    }\n    let count = 0;\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n    return count;\n  }\n  _separatorsCountFromSlice(slice) {\n    if (slice === void 0) {\n      slice = this._value;\n    }\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n  extractInput(fromPos, toPos, flags) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n    const oldValue = this._value;\n    this._value += ch;\n    const num = this.number;\n    let accepted = !isNaN(num);\n    let skip = false;\n    if (accepted) {\n      let fixedNum;\n      if (this.min != null && this.min < 0 && this.number < this.min) fixedNum = this.min;\n      if (this.max != null && this.max > 0 && this.number > this.max) fixedNum = this.max;\n      if (fixedNum != null) {\n        if (this.autofix) {\n          this._value = this.format(fixedNum, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n          skip || (skip = oldValue === this._value && !flags.tail); // if not changed on tail it's still ok to proceed\n        } else {\n          accepted = false;\n        }\n      }\n      accepted && (accepted = Boolean(this._value.match(this._numberRegExp)));\n    }\n    let appendDetails;\n    if (!accepted) {\n      this._value = oldValue;\n      appendDetails = new ChangeDetails();\n    } else {\n      appendDetails = new ChangeDetails({\n        inserted: this._value.slice(oldValue.length),\n        rawInserted: skip ? '' : ch,\n        skip\n      });\n    }\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    return appendDetails;\n  }\n  _findSeparatorAround(pos) {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n    return -1;\n  }\n  _adjustRangeWithSeparators(from, to) {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n    });\n  }\n  nearestInputPos(cursorPos, direction) {\n    if (!this.thousandsSeparator) return cursorPos;\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        {\n          const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n          if (separatorAtLeftPos >= 0) {\n            const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n            if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) {\n              return separatorAtLeftPos;\n            }\n          }\n          break;\n        }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        {\n          const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n          if (separatorAtRightPos >= 0) {\n            return separatorAtRightPos + this.thousandsSeparator.length;\n          }\n        }\n    }\n    return cursorPos;\n  }\n  doCommit() {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n      if (validnum !== number) this.unmaskedValue = this.format(validnum, this);\n      let formatted = this.value;\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n      this._value = formatted;\n    }\n    super.doCommit();\n  }\n  _normalizeZeros(value) {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, ''); // remove trailing zeros\n      if (!parts[1].length) parts.length = 1; // remove fractional\n    }\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n  _padFractionalZeros(value) {\n    if (!value) return value;\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n  doSkipInvalid(ch, flags, checkTail) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (ch === this.radix || ch === MaskedNumber.UNMASKED_RADIX || this.mapToRadix.includes(ch));\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n  get unmaskedValue() {\n    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n  set unmaskedValue(unmaskedValue) {\n    super.unmaskedValue = unmaskedValue;\n  }\n  get typedValue() {\n    return this.parse(this.unmaskedValue, this);\n  }\n  set typedValue(n) {\n    this.rawInputValue = this.format(n, this).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number() {\n    return this.typedValue;\n  }\n  set number(number) {\n    this.typedValue = number;\n  }\n  get allowNegative() {\n    return this.min != null && this.min < 0 || this.max != null && this.max < 0;\n  }\n  get allowPositive() {\n    return this.min != null && this.min > 0 || this.max != null && this.max > 0;\n  }\n  typedValueEquals(value) {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (super.typedValueEquals(value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === '');\n  }\n}\n_MaskedNumber = MaskedNumber;\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\nMaskedNumber.DEFAULTS = {\n  ...Masked.DEFAULTS,\n  mask: Number,\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [_MaskedNumber.UNMASKED_RADIX],\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  scale: 2,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', {\n    useGrouping: false,\n    maximumFractionDigits: 20\n  })\n};\nIMask.MaskedNumber = MaskedNumber;\n\nexport { MaskedNumber as default };\n","import createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport '../core/utils.js';\n\n/** Mask pipe source and destination types */\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue'\n};\n/** Creates new pipe function depending on mask type, source and destination options */\nfunction createPipe(arg, from, to) {\n  if (from === void 0) {\n    from = PIPE_TYPE.MASKED;\n  }\n  if (to === void 0) {\n    to = PIPE_TYPE.MASKED;\n  }\n  const masked = createMask(arg);\n  return value => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nfunction pipe(value, mask, from, to) {\n  return createPipe(mask, from, to)(value);\n}\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n\nexport { PIPE_TYPE, createPipe, pipe };\n","import ChangeDetails from '../core/change-details.js';\nimport IMask from '../core/holder.js';\nimport createMask, { normalizeOpts } from './factory.js';\nimport MaskedPattern from './pattern.js';\nimport '../core/utils.js';\nimport './base.js';\nimport '../core/continuous-tail-details.js';\nimport './pattern/chunk-tail-details.js';\nimport './pattern/cursor.js';\nimport './pattern/fixed-definition.js';\nimport './pattern/input-definition.js';\nimport './regexp.js';\n\n/** Pattern mask */\nclass RepeatBlock extends MaskedPattern {\n  get repeatFrom() {\n    var _ref;\n    return (_ref = Array.isArray(this.repeat) ? this.repeat[0] : this.repeat === Infinity ? 0 : this.repeat) != null ? _ref : 0;\n  }\n  get repeatTo() {\n    var _ref2;\n    return (_ref2 = Array.isArray(this.repeat) ? this.repeat[1] : this.repeat) != null ? _ref2 : Infinity;\n  }\n  constructor(opts) {\n    super(opts);\n  }\n  updateOptions(opts) {\n    super.updateOptions(opts);\n  }\n  _update(opts) {\n    var _ref3, _ref4, _this$_blocks;\n    const {\n      repeat,\n      ...blockOpts\n    } = normalizeOpts(opts); // TODO type\n    this._blockOpts = Object.assign({}, this._blockOpts, blockOpts);\n    const block = createMask(this._blockOpts);\n    this.repeat = (_ref3 = (_ref4 = repeat != null ? repeat : block.repeat) != null ? _ref4 : this.repeat) != null ? _ref3 : Infinity; // TODO type\n\n    super._update({\n      mask: 'm'.repeat(Math.max(this.repeatTo === Infinity && ((_this$_blocks = this._blocks) == null ? void 0 : _this$_blocks.length) || 0, this.repeatFrom)),\n      blocks: {\n        m: block\n      },\n      eager: block.eager,\n      overwrite: block.overwrite,\n      skipInvalid: block.skipInvalid,\n      lazy: block.lazy,\n      placeholderChar: block.placeholderChar,\n      displayChar: block.displayChar\n    });\n  }\n  _allocateBlock(bi) {\n    if (bi < this._blocks.length) return this._blocks[bi];\n    if (this.repeatTo === Infinity || this._blocks.length < this.repeatTo) {\n      this._blocks.push(createMask(this._blockOpts));\n      this.mask += 'm';\n      return this._blocks[this._blocks.length - 1];\n    }\n  }\n  _appendCharRaw(ch, flags) {\n    if (flags === void 0) {\n      flags = {};\n    }\n    const details = new ChangeDetails();\n    for (let bi = (_this$_mapPosToBlock$ = (_this$_mapPosToBlock = this._mapPosToBlock(this.displayValue.length)) == null ? void 0 : _this$_mapPosToBlock.index) != null ? _this$_mapPosToBlock$ : Math.max(this._blocks.length - 1, 0), block, allocated;\n    // try to get a block or\n    // try to allocate a new block if not allocated already\n    block = (_this$_blocks$bi = this._blocks[bi]) != null ? _this$_blocks$bi : allocated = !allocated && this._allocateBlock(bi); ++bi) {\n      var _this$_mapPosToBlock$, _this$_mapPosToBlock, _this$_blocks$bi, _flags$_beforeTailSta;\n      const blockDetails = block._appendChar(ch, {\n        ...flags,\n        _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) == null || (_flags$_beforeTailSta = _flags$_beforeTailSta._blocks) == null ? void 0 : _flags$_beforeTailSta[bi]\n      });\n      if (blockDetails.skip && allocated) {\n        // remove the last allocated block and break\n        this._blocks.pop();\n        this.mask = this.mask.slice(1);\n        break;\n      }\n      details.aggregate(blockDetails);\n      if (blockDetails.consumed) break; // go next char\n    }\n    return details;\n  }\n  _trimEmptyTail(fromPos, toPos) {\n    var _this$_mapPosToBlock2, _this$_mapPosToBlock3;\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    const firstBlockIndex = Math.max(((_this$_mapPosToBlock2 = this._mapPosToBlock(fromPos)) == null ? void 0 : _this$_mapPosToBlock2.index) || 0, this.repeatFrom, 0);\n    let lastBlockIndex;\n    if (toPos != null) lastBlockIndex = (_this$_mapPosToBlock3 = this._mapPosToBlock(toPos)) == null ? void 0 : _this$_mapPosToBlock3.index;\n    if (lastBlockIndex == null) lastBlockIndex = this._blocks.length - 1;\n    let removeCount = 0;\n    for (let blockIndex = lastBlockIndex; firstBlockIndex <= blockIndex; --blockIndex, ++removeCount) {\n      if (this._blocks[blockIndex].unmaskedValue) break;\n    }\n    if (removeCount) {\n      this._blocks.splice(lastBlockIndex - removeCount + 1, removeCount);\n      this.mask = this.mask.slice(removeCount);\n    }\n  }\n  reset() {\n    super.reset();\n    this._trimEmptyTail();\n  }\n  remove(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos === void 0) {\n      toPos = this.displayValue.length;\n    }\n    const removeDetails = super.remove(fromPos, toPos);\n    this._trimEmptyTail(fromPos, toPos);\n    return removeDetails;\n  }\n  totalInputPositions(fromPos, toPos) {\n    if (fromPos === void 0) {\n      fromPos = 0;\n    }\n    if (toPos == null && this.repeatTo === Infinity) return Infinity;\n    return super.totalInputPositions(fromPos, toPos);\n  }\n  get state() {\n    return super.state;\n  }\n  set state(state) {\n    this._blocks.length = state._blocks.length;\n    this.mask = this.mask.slice(0, this._blocks.length);\n    super.state = state;\n  }\n}\nIMask.RepeatBlock = RepeatBlock;\n\nexport { RepeatBlock as default };\n","export { default as InputMask } from './controls/input.js';\nimport IMask from './core/holder.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { default as HTMLInputMaskElement } from './controls/html-input-mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as ChangeDetails } from './core/change-details.js';\nexport { DIRECTION, forceDirection } from './core/utils.js';\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as createMask, normalizeOpts } from './masked/factory.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as ChunksTailDetails } from './masked/pattern/chunk-tail-details.js';\nexport { default as PatternFixedDefinition } from './masked/pattern/fixed-definition.js';\nexport { default as PatternInputDefinition } from './masked/pattern/input-definition.js';\nexport { PIPE_TYPE, createPipe, pipe } from './masked/pipe.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as RepeatBlock } from './masked/repeat.js';\nimport './core/action-details.js';\nimport './controls/input-history.js';\nimport './core/continuous-tail-details.js';\nimport './masked/pattern/cursor.js';\n\ntry {\n  globalThis.IMask = IMask;\n} catch {}\n\nexport { IMask as default };\n","<docs>\n# KoddeinFormText\n> Text field\n\n@author Nicolas Husson <nicolas@kffein.com>\n@author Kevin Bastien <kevin@kffein.com>\n</docs>\n\n<script lang=\"ts\">\nimport IMask, { FactoryArg } from 'imask';\nimport { defineComponent, nextTick, onBeforeUnmount, PropType, reactive, toRefs, watch } from 'vue';\nimport { MASK_MODELS } from '../utils';\n\ninterface Data {\n  el?: HTMLElement,\n  internalValue?: [string,number],\n  mask: any, // any because it can be from any mask type. (builtin or custom)\n}\n\nconst KoddeinFormText = defineComponent({\n  name: \"KoddeinFormText\",\n  props: {\n    id: {\n      type: String,\n      required: true,\n    },\n    name: {\n      type: String,\n      default: undefined,\n    },\n    autocomplete: {\n      type: String,\n      default: undefined,\n    },\n    /** input typ */\n    type: {\n      type: String,\n      required: true,\n    },\n    /** input value */\n    value: {\n      type: [String, Number],\n      default: undefined,\n    },\n    /** input error */\n    error: {\n      type: String,\n      default: undefined,\n    },\n    /** mask name for IMask lib */\n    mask: {\n      type: [String, Object] as PropType<FormMask|FactoryArg>, // string check our internal mask || it's a Masked options from imask\n      default: undefined,\n    },\n    /** aria-label text */\n    ariaLabel: {\n      type: String,\n      default: undefined,\n    },\n  },\n  emits: ['inputChange', 'onFocus', 'onBlur', 'customEvent'],\n  setup(props, { emit }){\n    const data:Data = reactive(\n      {\n        el: undefined,\n        /** @param {any} internalValue - clone value\n         * - because we must not change props\n         * - in `watch` will sync value within internalValue\n         */\n        internalValue: undefined,\n        // for imask complete object\n        mask: undefined,\n      }\n    );\n\n    // next tick because we need that ref input.\n    nextTick(() => {\n      /* get dynamic component from cpn name */\n      if (props.mask) {\n        let maskObject = null;\n        if (typeof props.mask === 'string' && MASK_MODELS[props.mask as FormMask]) {\n          maskObject = MASK_MODELS[props.mask as FormMask];\n        } else {\n          // if we ever pass a custom object on a field... it will pass make sure to check the imask doc. \n          maskObject = props.mask;\n        }\n  \n        if (maskObject) {\n          data.mask = IMask(data.el as HTMLElement, maskObject as FactoryArg);\n  \n          // 'accept' event fired on input when mask value has changed\n          data.mask.on('accept', accept);\n  \n          // 'complete' event fired when the value is completely filled\n          // Note: this makes sense only for Pattern-based masks\n          data.mask.on('complete', complete);\n        }\n      }\n    })\n\n    onBeforeUnmount(() => {\n      data.mask?.destroy();\n    })\n\n    /**\n     * Watch value, on value update -> set internal value\n     */\n    watch(\n      ()=>props.value,\n      (value:any) => { \n        data.internalValue = value;\n      },\n      { immediate:true }\n    )\n\n    /**\n     * Watch internal value, on value update -> send value to parent\n     */\n    watch(\n      ()=>data.internalValue,\n      (value) => { \n        if (value === props.value || data.mask) return;\n        emit('inputChange', value);\n      },\n      // { immediate:true }\n    )\n\n    const focus = () => {\n      emit('onFocus');\n    }\n    const blur = () => {\n      emit('onBlur');\n    }\n    const accept = () => {\n      // console.debug('[TextField] onAccept', data.mask );\n      emit('customEvent', {\n        event: 'mask:accept',\n        value: data.mask,\n      });\n      emit('inputChange', data.mask.value);\n      data.internalValue = data.mask.value;\n    }\n    const complete = () => {\n      emit('customEvent', {\n        event: 'mask:complete',\n        value: data.mask,\n      });\n      emit('inputChange', data.mask.value);\n      data.internalValue = data.mask.value;\n    }\n\n    return {\n      ...toRefs(data), //data\n      isFocus: focus,\n      isBlur: blur,\n      onAccept: accept,\n      onComplete: complete,\n    }; \n  },\n});\nexport default KoddeinFormText\n</script>\n\n<template>\n  <input :id=\"id\"\n         ref=\"el\"\n         v-model=\"internalValue\"\n         :autocomplete=\"autocomplete\"\n         :name=\"name\"\n         :type=\"type\"\n         class=\"input\"\n         :aria-label=\"ariaLabel\"\n         @focus=\"isFocus\"\n         @blur=\"isBlur\"\n  >\n</template>\n\n<style lang=\"stylus\" scoped>\n  /**\n   * TABLE OF CONTENT\n   * --------\n   *  - LAYOUT\n   *  - FILE\n   *  - THEMES\n   *  - DEBUG\n   *  - NO_SCOPE\n   */\n\n  //  ===LAYOUT===\n  .input\n    //\n\n  /* Chrome, Safari, Edge, Opera */\n  input::-webkit-outer-spin-button\n  input::-webkit-inner-spin-button\n    -webkit-appearance none\n    margin 0\n\n  /* Firefox */\n  input[type=number]\n    -moz-appearance textfield\n\n  //  ===DEBUG===\n  [data-debug-mode=\"true\"] .KoddeinFormText\n    //\n</style>\n"],"names":["isString","str","isObject","obj","_obj$constructor","pick","keys","_","k","acc","_ref","v","DIRECTION","forceDirection","direction","escapeRegExp","objectIncludes","b","a","arrA","arrB","dateA","dateB","regexpA","regexpB","ActionDetails","opts","IMask","el","maskedClass","mask","normalizeOpts","instanceOpts","_mask","createMask","nOpts","MaskedClass","MaskElement","start","end","KEY_Z","KEY_Y","HTMLMaskElement","input","_this$input$getRootNo","_this$input$getRootNo2","_this$input","handlers","e","HTMLInputMaskElement","value","HTMLContenteditableMaskElement","root","selection","anchorOffset","focusOffset","range","InputHistory","state","steps","InputMask","_this$masked","masked","val","ev","listeners","l","pos","cursorPos","newUnmaskedValue","newValue","newRawInputValue","newDisplayValue","isChanged","restOpts","updateMask","updateOpts","handler","hIndex","details","oldRawValue","offset","removeDirection","ChangeDetails","prep","ContinuousTailDetails","from","stop","tail","beforePos","shiftChar","Masked","flags","fromPos","toPos","ch","checkTail","consistentState","noFixState","fixDetails","chDetails","consistentTail","appended","beforeTailState","i","tailDetails","ci","d","fn","rawInput","ret","deleteCount","inserted","tailPos","eagerRemove","startChangePos","valLength","tval","ChunksTailDetails","chunks","tailChunk","lastChunk","extendLast","firstTailChunk","chunk","lastBlockIter","chunkBlock","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","index","s","_this$block","PatternFixedDefinition","minPos","maxPos","appendEager","isResolved","PatternInputDefinition","parent","isOptional","placeholderChar","displayChar","lazy","eager","maskOpts","boundPos","_flags$_beforeTailSta","MaskedRegExp","MaskedPattern","defs","pattern","unmaskingBlock","optionalBlock","p","bNames","bName","expose","repeat","bOpts","blockOpts","maskedBlock","char","isInput","def","_blocks","maskedState","bi","unmaskedValue","_this$_mapPosToBlock","startBlockIndex","blockIter","block","blockDetails","chunkTail","bFromPos","bToPos","blockChunk","blockIndex","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","_blocks2","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","total","name","indices","gi","MaskedRange","to","maxLength","autofix","patternOpts","fromStr","toStr","sameCharsCount","minstr","maxstr","placeholder","num","padLength","DefaultPattern","MaskedDate","blocks","patternBlocks","date","day","month","year","MaskedDynamic","m","prevValueBeforeTail","inputValue","insertValue","tailValue","prevMask","prevMaskState","_flags$_beforeTailSta2","currentDetails","_this$currentMask","typedValue","_this$currentMask2","_this$currentMask3","_this$currentMask4","compiledMasks","currentMaskRef","currentMask","mi","overwrite","skipInvalid","oldMask","_this$currentMask5","inputs","isCurrent","startInputPos","i1","i2","MaskedEnum","enum_","eopts","lengths","requiredLength","optionalLength","matchFrom","matches","mch","estr","istr","MaskedFunction","_MaskedNumber","MaskedNumber","mid","parts","prepCh","extendOnSeparators","count","slice","prevBeforeTailValue","prevBeforeTailSeparatorsCount","oldValue","accepted","skip","fixedNum","appendDetails","beforeTailValue","beforeTailSeparatorsCount","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","number","validnum","formatted","match","sign","zeros","dropFractional","n","PIPE_TYPE","createPipe","arg","pipe","RepeatBlock","_ref2","_ref3","_ref4","_this$_blocks","_this$_mapPosToBlock$","allocated","_this$_blocks$bi","_this$_mapPosToBlock2","_this$_mapPosToBlock3","firstBlockIndex","lastBlockIndex","removeCount","KoddeinFormText","defineComponent","emit","data","reactive","nextTick","maskObject","MASK_MODELS","accept","complete","onBeforeUnmount","_a","watch","focus","blur","toRefs","id","_ctx","_cache","$props","$setup","$data","$options","_withDirectives","_openBlock","_createElementBlock","$event","type","args","internalValue","_hoisted_1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]}