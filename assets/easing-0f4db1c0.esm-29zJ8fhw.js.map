{"version":3,"file":"easing-0f4db1c0.esm-29zJ8fhw.js","sources":["../../src/vue/node_modules/three/examples/jsm/shaders/CopyShader.js","../../src/vue/node_modules/three/examples/jsm/postprocessing/Pass.js","../../src/vue/node_modules/three/examples/jsm/postprocessing/ShaderPass.js","../../src/vue/node_modules/three/examples/jsm/postprocessing/MaskPass.js","../../src/vue/node_modules/three/examples/jsm/postprocessing/EffectComposer.js","../../src/vue/node_modules/three/examples/jsm/postprocessing/RenderPass.js","../../src/vue/node_modules/three/examples/jsm/shaders/GammaCorrectionShader.js","../../src/vue/node_modules/lodash/_baseRandom.js","../../src/vue/node_modules/lodash/random.js","../../src/vue/src/components/WebGL/three/glSyncObject.ts","../../src/vue/src/components/WebGL/three/glScene.ts","../../src/vue/node_modules/maath/dist/triangle-b62b9067.esm.js","../../src/vue/node_modules/maath/dist/easing-0f4db1c0.esm.js"],"sourcesContent":["/**\n * Full-screen textured quad shader\n */\n\nconst CopyShader = {\n\n\tname: 'CopyShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'opacity': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\n\t\t}`\n\n};\n\nexport { CopyShader };\n","import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tOrthographicCamera,\n\tMesh\n} from 'three';\n\nclass Pass {\n\n\tconstructor() {\n\n\t\tthis.isPass = true;\n\n\t\t// if set to true, the pass is processed by the composer\n\t\tthis.enabled = true;\n\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\t\tthis.needsSwap = true;\n\n\t\t// if set to true, the pass clears its buffer before rendering\n\t\tthis.clear = false;\n\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\tsetSize( /* width, height */ ) {}\n\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n\tdispose() {}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nclass FullscreenTriangleGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\n\t}\n\n}\n\nconst _geometry = new FullscreenTriangleGeometry();\n\nclass FullScreenQuad {\n\n\tconstructor( material ) {\n\n\t\tthis._mesh = new Mesh( _geometry, material );\n\n\t}\n\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\nexport { Pass, FullScreenQuad };\n","import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\n\nclass ShaderPass extends Pass {\n\n\tconstructor( shader, textureID ) {\n\n\t\tsuper();\n\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\n\n\t\tif ( shader instanceof ShaderMaterial ) {\n\n\t\t\tthis.uniforms = shader.uniforms;\n\n\t\t\tthis.material = shader;\n\n\t\t} else if ( shader ) {\n\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\tthis.material = new ShaderMaterial( {\n\n\t\t\t\tname: ( shader.name !== undefined ) ? shader.name : 'unspecified',\n\t\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\t\tuniforms: this.uniforms,\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.material.dispose();\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n}\n\nexport { ShaderPass };\n","import { Pass } from './Pass.js';\n\nclass MaskPass extends Pass {\n\n\tconstructor( scene, camera ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\n\t\tthis.inverse = false;\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst context = renderer.getContext();\n\t\tconst state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tlet writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer and make them writable for subsequent rendering/clearing\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\tstate.buffers.color.setMask( true );\n\t\tstate.buffers.depth.setMask( true );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n}\n\nclass ClearMaskPass extends Pass {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.needsSwap = false;\n\n\t}\n\n\trender( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n}\n\nexport { MaskPass, ClearMaskPass };\n","import {\n\tClock,\n\tHalfFloatType,\n\tNoBlending,\n\tVector2,\n\tWebGLRenderTarget\n} from 'three';\nimport { CopyShader } from '../shaders/CopyShader.js';\nimport { ShaderPass } from './ShaderPass.js';\nimport { MaskPass } from './MaskPass.js';\nimport { ClearMaskPass } from './MaskPass.js';\n\nclass EffectComposer {\n\n\tconstructor( renderer, renderTarget ) {\n\n\t\tthis.renderer = renderer;\n\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst size = renderer.getSize( new Vector2() );\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, { type: HalfFloatType } );\n\t\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t\t} else {\n\n\t\t\tthis._width = renderTarget.width;\n\t\t\tthis._height = renderTarget.height;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tthis.renderToScreen = true;\n\n\t\tthis.passes = [];\n\n\t\tthis.copyPass = new ShaderPass( CopyShader );\n\t\tthis.copyPass.material.blending = NoBlending;\n\n\t\tthis.clock = new Clock();\n\n\t}\n\n\tswapBuffers() {\n\n\t\tconst tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t}\n\n\taddPass( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\tinsertPass( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\tremovePass( pass ) {\n\n\t\tconst index = this.passes.indexOf( pass );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tthis.passes.splice( index, 1 );\n\n\t\t}\n\n\t}\n\n\tisLastEnabledPass( passIndex ) {\n\n\t\tfor ( let i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\trender( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tconst currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tlet maskActive = false;\n\n\t\tfor ( let i = 0, il = this.passes.length; i < il; i ++ ) {\n\n\t\t\tconst pass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tconst context = this.renderer.getContext();\n\t\t\t\t\tconst stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\treset( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst size = this.renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tconst effectiveWidth = this._width * this._pixelRatio;\n\t\tconst effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( let i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t}\n\n\tsetPixelRatio( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\n\t\tthis.copyPass.dispose();\n\n\t}\n\n}\n\nexport { EffectComposer };\n","import {\n\tColor\n} from 'three';\nimport { Pass } from './Pass.js';\n\nclass RenderPass extends Pass {\n\n\tconstructor( scene, camera, overrideMaterial = null, clearColor = null, clearAlpha = null ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.overrideMaterial = overrideMaterial;\n\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = clearAlpha;\n\n\t\tthis.clear = true;\n\t\tthis.clearDepth = false;\n\t\tthis.needsSwap = false;\n\t\tthis._oldClearColor = new Color();\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tlet oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== null ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor !== null ) {\n\n\t\t\trenderer.getClearColor( this._oldClearColor );\n\t\t\trenderer.setClearColor( this.clearColor, renderer.getClearAlpha() );\n\n\t\t}\n\n\t\tif ( this.clearAlpha !== null ) {\n\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\t\t\trenderer.setClearAlpha( this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth == true ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\tif ( this.clear === true ) {\n\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// restore\n\n\t\tif ( this.clearColor !== null ) {\n\n\t\t\trenderer.setClearColor( this._oldClearColor );\n\n\t\t}\n\n\t\tif ( this.clearAlpha !== null ) {\n\n\t\t\trenderer.setClearAlpha( oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== null ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n}\n\nexport { RenderPass };\n","/**\n * Gamma Correction Shader\n * http://en.wikipedia.org/wiki/gamma_correction\n */\n\nconst GammaCorrectionShader = {\n\n\tname: 'GammaCorrectionShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 tex = texture2D( tDiffuse, vUv );\n\n\t\t\tgl_FragColor = sRGBTransferOETF( tex );\n\n\t\t}`\n\n};\n\nexport { GammaCorrectionShader };\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","import { random } from \"lodash\";\nimport { syncMeshToDOM } from \"plugins/webgl/utils\";\nimport { Material, Mesh, PerspectiveCamera } from 'three';\nimport { WebGLRenderParams, WebGLSyncObjectOptions } from '../gl';\n\nexport class WebGLSyncObject extends Mesh {\n  el: HTMLElement;\n  name: string;\n  camera: PerspectiveCamera;\n  autoHide?: boolean | undefined;\n\n  constructor(options:WebGLSyncObjectOptions) {\n    super(options.geometry, options.material);\n\n    this.name = options.name || `mesh-${random(0, 1000)}`;\n    this.el = options.el;\n    this.camera = options.camera;\n\n    if(options.autoHide) this.el.classList.add(\"-webgl-hide\");\n    \n    this.resize();\n\n    return this;\n  }\n  \n  /**\n   * Resize the instance\n   * @param resetSync Allow to reset the WebGLSyncData userData object (only on real resize event)\n   */\n  resize(resetSync = false):void {\n    syncMeshToDOM(this, this.el, this.camera, resetSync);\n    this.scale.copy(this.userData.sync.scale);\n    this.position.copy(this.userData.sync.position);\n  }\n  \n  render(params:WebGLRenderParams):void { // eslint-disable-line\n    this.resize();\n  }\n  \n  dispose():void {\n    delete this.userData.sync;\n    this.geometry.dispose();\n    (this.material as Material).dispose();\n    this.el.classList.remove(\"-webgl-hide\");\n  }\n}\n","import { each, has } from \"lodash\";\nimport { mainWebGLRenderer } from 'plugins/webgl/three';\nimport { calculateUnitSize } from \"plugins/webgl/utils\";\nimport { store as interfaceStore } from 'store/interface';\nimport { Color, Group, LinearSRGBColorSpace, Mesh, MeshStandardMaterial, PerspectiveCamera, SRGBColorSpace, Scene, ShaderMaterial } from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass\";\nimport { GammaCorrectionShader } from \"three/examples/jsm/shaders/GammaCorrectionShader\";\nimport { WebGLRenderParams, WebGLSceneInterface, WebGLSceneOptions, WebGLSize } from '../gl';\nimport { TheCamera } from './../gl';\nimport { WebGLSyncObject } from './glSyncObject';\n\nexport class WebGLScene implements WebGLSceneInterface {\n  scene: Scene;\n  visible: boolean;\n  includeChildren: boolean;\n  camera: TheCamera;\n  disabled?: boolean;\n  settings?: Obj;\n  sceneSize: WebGLSize;\n  effectComposer?: EffectComposer;\n  elmts?: NodeListOf<Element>;\n  name?: string;\n\n  constructor(options: WebGLSceneOptions) {\n    this.scene = new Scene();\n    this.name = options?.name;\n    this.disabled = options?.disabled;\n    this.settings = options?.settings;\n\n    this.visible = true;\n\n    //HTMLElements to sync  \n    this.elmts = options?.elmts;\n\n    // For common methods, we let the plugin manage the render and resize of children (only for WebGLSyncObject)\n    this.includeChildren = options?.includeChildren || false;\n\n    //Default Camera or form arguments\n    this.camera = options?.camera || new PerspectiveCamera(50, interfaceStore.viewport.width / interfaceStore.viewport.webglHeight, 0.1, 50);\n    if (!options.camera) {\n      this.camera.position.z = 5;\n    }\n\n    if (options.usePostProcessing) {\n\n      mainWebGLRenderer!.outputColorSpace = LinearSRGBColorSpace; //for post-processing we need to define another outputColorSpace\n\n      this.effectComposer = new EffectComposer(mainWebGLRenderer!);\n\n      const renderPass = new RenderPass(this.scene, this.camera);\n      renderPass.clearColor = mainWebGLRenderer?.getClearColor(new Color()) || new Color();\n      renderPass.clearAlpha = mainWebGLRenderer?.getClearAlpha() || 1;\n      this.effectComposer.addPass(renderPass);\n\n      /**\n       * If we use the threejs effect composer, since r152 we need to add a gamma correction shader pass to work with the new output color space\n       */\n      const gammaCorrectionPass = new ShaderPass(GammaCorrectionShader)\n      this.effectComposer?.addPass(gammaCorrectionPass);\n    }\n\n    // Get the size of the scene\n    this.sceneSize = calculateUnitSize(this.camera.position.z, this.camera as PerspectiveCamera);\n\n    return this;\n  }\n\n  /**\n   * Resize the webgl scene\n   */\n  resize(): void {\n    //Resize camera (for now only perspective)\n    if (this.camera instanceof PerspectiveCamera) this.camera.aspect = mainWebGLRenderer!.domElement.width / mainWebGLRenderer!.domElement.height;\n    this.camera.updateProjectionMatrix();\n\n    if (this.includeChildren) {\n      this.scene.traverse(child => {\n        if (child instanceof WebGLSyncObject) {\n          child.resize(true);\n        }\n      });\n    }\n\n    if (this.effectComposer) {\n      this.effectComposer.setSize(mainWebGLRenderer!.domElement.width, mainWebGLRenderer!.domElement.height);\n    }\n\n    // Get the size of the scene\n    this.sceneSize = calculateUnitSize(this.camera.position.z, this.camera as PerspectiveCamera);\n  }\n\n  /**\n   * Render the webgl scene\n   * @param params Default rendering params \n   */\n  render(params: WebGLRenderParams): void {\n    // if no children to the scene, we hide it\n    this.visible = this.scene.children.length > 0;\n\n    if (this.includeChildren) {\n      this.scene.traverse(child => {\n        if (child instanceof WebGLSyncObject) {\n          child.render(params);\n        }\n      });\n    }\n  }\n\n  /**\n   * Clean webgl scene\n   */\n  dispose(): void {\n    if (!this.scene.children) return;\n    \n    this.scene.traverse(child => {\n      if (child instanceof WebGLSyncObject) {\n        child.dispose();\n      }\n      else {\n        if (child instanceof Mesh) {\n          child.geometry.dispose();\n\n          if (child.material instanceof ShaderMaterial) {\n            const mat = child.material as ShaderMaterial;\n            if (mat.uniforms.uTexture) mat.uniforms.uTexture.value.dispose();\n          }\n\n          if(has(child.material, 'length')) {\n            each(child.material, mat => {\n              this.disposeMaterial(mat);\n            });\n          }else{\n            const mat = child.material as MeshStandardMaterial;\n            this.disposeMaterial(mat);\n          }\n        }\n      }\n    });\n\n    // --- Clean postprocessing\n    if (this.effectComposer) {\n      each(this.effectComposer.passes, pass => {\n        pass?.dispose?.();\n      })\n      this.effectComposer.dispose();\n\n      mainWebGLRenderer!.outputColorSpace = SRGBColorSpace;\n    }\n\n    this.scene.clear();\n  }\n\n  disposeMaterial(mat: MeshStandardMaterial) {\n\t\tmat.map?.dispose();\n\t\tmat.bumpMap?.dispose();\n\t\tmat.normalMap?.dispose();\n\t\tmat.aoMap?.dispose();\n\t\tmat.envMap?.dispose();\n\t\tmat.alphaMap?.dispose();\n\t\tmat.lightMap?.dispose();\n\t\tmat.emissiveMap?.dispose();\n\t\tmat.roughnessMap?.dispose();\n\t\tmat.displacementMap?.dispose();\n\t\tmat.metalnessMap?.dispose();\n\t\tmat.dispose();\n\t}\n\n  disposeGeometries(mesh : Group) {\n    mesh.traverse(child => {\n      if(child instanceof Mesh) {\n        child.geometry?.dispose();\n      }\n    });\n  }\n\n\n  /**\n   * Return the main camera\n   * @returns TheCamera (PerspectiveCamera | OrthographicCamera)\n   */\n  getActiveCamera(): TheCamera {\n    return this.camera;\n  }\n\n  /**\n   * Return the main Scene\n   */\n  getActiveScene(): Scene {\n    return this.scene;\n  }\n}\n","import { a as _isNativeReflectConstruct, _ as _setPrototypeOf } from './isNativeReflectConstruct-5594d075.esm.js';\nimport { Vector2, Matrix4 } from 'three';\nimport { d as determinant3, g as getMinor } from './matrix-baa530bf.esm.js';\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\n/**\n *\n * @param point\n *\n * @param triangle\n *\n * @returns {boolean} true if the point is in the triangle\n *\n * TODO: Find explainer\n */\nfunction isPointInTriangle(point, triangle) {\n  var _triangle$ = _slicedToArray(triangle[0], 2),\n      ax = _triangle$[0],\n      ay = _triangle$[1];\n\n  var _triangle$2 = _slicedToArray(triangle[1], 2),\n      bx = _triangle$2[0],\n      by = _triangle$2[1];\n\n  var _triangle$3 = _slicedToArray(triangle[2], 2),\n      cx = _triangle$3[0],\n      cy = _triangle$3[1];\n\n  var _point = _slicedToArray(point, 2),\n      px = _point[0],\n      py = _point[1]; // TODO Sub with static calc\n\n\n  var matrix = new Matrix4(); // prettier-ignore\n\n  matrix.set(ax, ay, ax * ax + ay * ay, 1, bx, by, bx * bx + by * by, 1, cx, cy, cx * cx + cy * cy, 1, px, py, px * px + py * py, 1);\n  return matrix.determinant() <= 0;\n}\nfunction triangleDeterminant(triangle) {\n  var _triangle$4 = _slicedToArray(triangle[0], 2),\n      x1 = _triangle$4[0],\n      y1 = _triangle$4[1];\n\n  var _triangle$5 = _slicedToArray(triangle[1], 2),\n      x2 = _triangle$5[0],\n      y2 = _triangle$5[1];\n\n  var _triangle$6 = _slicedToArray(triangle[2], 2),\n      x3 = _triangle$6[0],\n      y3 = _triangle$6[1]; // prettier-ignore\n\n\n  return determinant3(x1, y1, 1, x2, y2, 1, x3, y3, 1);\n}\n/**\n * Uses triangle area determinant to check if 3 points are collinear.\n * If they are, they can't make a triangle, so the determinant will be 0!\n *\n *      0     1     2\n * ─────■─────■─────■\n *\n *\n * Fun fact, you can use this same determinant to check the order of the points in the triangle\n *\n * NOTE: Should this use a buffer instead? NOTE: Should this use a buffer instead? [x0, y0, x1, y1, x2, y2]?\n *\n */\n\nfunction arePointsCollinear(points) {\n  return triangleDeterminant(points) === 0;\n} // TODO This is the same principle as the prev function, find a way to make it have sense\n\nfunction isTriangleClockwise(triangle) {\n  return triangleDeterminant(triangle) < 0;\n}\n/**\n \nThe circumcircle is a circle touching all the vertices of a triangle or polygon.\n\n             ┌───┐             \n             │ B │             \n             └───┘             \n           .───●───.           \n        ,─'   ╱ ╲   '─.        \n      ,'     ╱   ╲     `.      \n     ╱      ╱     ╲      ╲     \n    ;      ╱       ╲      :    \n    │     ╱         ╲     │    \n    │    ╱           ╲    │    \n    :   ╱             ╲   ;    \n     ╲ ╱               ╲ ╱     \n┌───┐ ●─────────────────● ┌───┐\n│ A │  `.             ,'  │ C │\n└───┘    '─.       ,─'    └───┘\n            `─────'                         \n */\n\n/**\n *\n * @param triangle\n *\n * @returns {number} circumcircle\n */\n// https://math.stackexchange.com/a/1460096\n\nfunction getCircumcircle(triangle) {\n  // TS-TODO the next few lines are ignored because the types aren't current to the change in vectors (that can now be iterated)\n  // @ts-ignore\n  var _triangle$7 = _slicedToArray(triangle[0], 2),\n      ax = _triangle$7[0],\n      ay = _triangle$7[1]; // @ts-ignore\n\n\n  var _triangle$8 = _slicedToArray(triangle[1], 2),\n      bx = _triangle$8[0],\n      by = _triangle$8[1]; // @ts-ignore\n\n\n  var _triangle$9 = _slicedToArray(triangle[2], 2),\n      cx = _triangle$9[0],\n      cy = _triangle$9[1];\n\n  if (arePointsCollinear(triangle)) return null; // points are collinear\n\n  var m = new Matrix4(); // prettier-ignore\n\n  m.set(1, 1, 1, 1, ax * ax + ay * ay, ax, ay, 1, bx * bx + by * by, bx, by, 1, cx * cx + cy * cy, cx, cy, 1);\n  var m11 = getMinor(m, 1, 1);\n  var m13 = getMinor(m, 1, 3);\n  var m12 = getMinor(m, 1, 2);\n  var m14 = getMinor(m, 1, 4);\n  var x0 = 0.5 * (m12 / m11);\n  var y0 = 0.5 * (m13 / m11);\n  var r2 = x0 * x0 + y0 * y0 + m14 / m11;\n  return {\n    x: Math.abs(x0) === 0 ? 0 : x0,\n    y: Math.abs(y0) === 0 ? 0 : -y0,\n    r: Math.sqrt(r2)\n  };\n} // https://stackoverflow.com/questions/39984709/how-can-i-check-wether-a-point-is-inside-the-circumcircle-of-3-points\n\nfunction isPointInCircumcircle(point, triangle) {\n  var _ref = Array.isArray(triangle[0]) ? triangle[0] : triangle[0].toArray(),\n      _ref2 = _slicedToArray(_ref, 2),\n      ax = _ref2[0],\n      ay = _ref2[1];\n\n  var _ref3 = Array.isArray(triangle[1]) ? triangle[1] : triangle[1].toArray(),\n      _ref4 = _slicedToArray(_ref3, 2),\n      bx = _ref4[0],\n      by = _ref4[1];\n\n  var _ref5 = Array.isArray(triangle[2]) ? triangle[2] : triangle[2].toArray(),\n      _ref6 = _slicedToArray(_ref5, 2),\n      cx = _ref6[0],\n      cy = _ref6[1];\n\n  var _point2 = _slicedToArray(point, 2),\n      px = _point2[0],\n      py = _point2[1];\n\n  if (arePointsCollinear(triangle)) throw new Error(\"Collinear points don't form a triangle\");\n  /**\n          | ax-px, ay-py, (ax-px)² + (ay-py)² |\n    det = | bx-px, by-py, (bx-px)² + (by-py)² |\n          | cx-px, cy-py, (cx-px)² + (cy-py)² |\n  */\n\n  var x1mpx = ax - px;\n  var aympy = ay - py;\n  var bxmpx = bx - px;\n  var bympy = by - py;\n  var cxmpx = cx - px;\n  var cympy = cy - py; // prettier-ignore\n\n  var d = determinant3(x1mpx, aympy, x1mpx * x1mpx + aympy * aympy, bxmpx, bympy, bxmpx * bxmpx + bympy * bympy, cxmpx, cympy, cxmpx * cxmpx + cympy * cympy); // if d is 0, the point is on C\n\n  if (d === 0) {\n    return true;\n  }\n\n  return !isTriangleClockwise(triangle) ? d > 0 : d < 0;\n} // From https://algorithmtutor.com/Computational-Geometry/Determining-if-two-consecutive-segments-turn-left-or-right/\n\nvar mv1 = new Vector2();\nvar mv2 = new Vector2();\n/**\n \n     ╱      ╲     \n    ╱        ╲    \n   ▕          ▏   \n                  \n right      left  \n\n * NOTE: Should this use a buffer instead? [x0, y0, x1, y1]?\n */\n\nfunction doThreePointsMakeARight(points) {\n  var _points$map = points.map(function (p) {\n    if (Array.isArray(p)) {\n      return _construct(Vector2, _toConsumableArray(p));\n    }\n\n    return p;\n  }),\n      _points$map2 = _slicedToArray(_points$map, 3),\n      p1 = _points$map2[0],\n      p2 = _points$map2[1],\n      p3 = _points$map2[2];\n\n  if (arePointsCollinear(points)) return false; // @ts-ignore\n\n  var p2p1 = mv1.subVectors(p2, p1); // @ts-ignore\n\n  var p3p1 = mv2.subVectors(p3, p1);\n  var cross = p3p1.cross(p2p1);\n  return cross > 0;\n}\n\nvar triangle = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isPointInTriangle: isPointInTriangle,\n  triangleDeterminant: triangleDeterminant,\n  arePointsCollinear: arePointsCollinear,\n  isTriangleClockwise: isTriangleClockwise,\n  getCircumcircle: getCircumcircle,\n  isPointInCircumcircle: isPointInCircumcircle,\n  doThreePointsMakeARight: doThreePointsMakeARight\n});\n\nexport { _slicedToArray as _, _toConsumableArray as a, triangleDeterminant as b, arePointsCollinear as c, doThreePointsMakeARight as d, isTriangleClockwise as e, isPointInCircumcircle as f, getCircumcircle as g, isPointInTriangle as i, triangle as t };\n","import { a as _toConsumableArray } from './triangle-b62b9067.esm.js';\nimport { Color, Vector3, Quaternion, Matrix4, Vector2, Vector4, Euler, Spherical } from 'three';\nimport { d as deltaAngle } from './misc-19a3ec46.esm.js';\n\nvar rsqw = function rsqw(t) {\n  var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.01;\n  var a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var f = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1 / (2 * Math.PI);\n  return a / Math.atan(1 / delta) * Math.atan(Math.sin(2 * Math.PI * t * f) / delta);\n};\nvar exp = function exp(t) {\n  return 1 / (1 + t + 0.48 * t * t + 0.235 * t * t * t);\n};\nvar linear = function linear(t) {\n  return t;\n};\nvar sine = {\n  \"in\": function _in(x) {\n    return 1 - Math.cos(x * Math.PI / 2);\n  },\n  out: function out(x) {\n    return Math.sin(x * Math.PI / 2);\n  },\n  inOut: function inOut(x) {\n    return -(Math.cos(Math.PI * x) - 1) / 2;\n  }\n};\nvar cubic = {\n  \"in\": function _in(x) {\n    return x * x * x;\n  },\n  out: function out(x) {\n    return 1 - Math.pow(1 - x, 3);\n  },\n  inOut: function inOut(x) {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n  }\n};\nvar quint = {\n  \"in\": function _in(x) {\n    return x * x * x * x * x;\n  },\n  out: function out(x) {\n    return 1 - Math.pow(1 - x, 5);\n  },\n  inOut: function inOut(x) {\n    return x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2;\n  }\n};\nvar circ = {\n  \"in\": function _in(x) {\n    return 1 - Math.sqrt(1 - Math.pow(x, 2));\n  },\n  out: function out(x) {\n    return Math.sqrt(1 - Math.pow(x - 1, 2));\n  },\n  inOut: function inOut(x) {\n    return x < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2;\n  }\n};\nvar quart = {\n  \"in\": function _in(t) {\n    return t * t * t * t;\n  },\n  out: function out(t) {\n    return 1 - --t * t * t * t;\n  },\n  inOut: function inOut(t) {\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n  }\n};\nvar expo = {\n  \"in\": function _in(x) {\n    return x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n  },\n  out: function out(x) {\n    return x === 1 ? 1 : 1 - Math.pow(2, -10 * x);\n  },\n  inOut: function inOut(x) {\n    return x === 0 ? 0 : x === 1 ? 1 : x < 0.5 ? Math.pow(2, 20 * x - 10) / 2 : (2 - Math.pow(2, -20 * x + 10)) / 2;\n  }\n};\n/**\n * Damp, based on Game Programming Gems 4 Chapter 1.10\n *   Return value indicates whether the animation is still running.\n */\n\nfunction damp(\n/** The object */\ncurrent,\n/** The key to animate */\nprop,\n/** To goal value */\ntarget) {\n  var smoothTime = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.25;\n  var delta = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.01;\n  var maxSpeed = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Infinity;\n  var easing = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : exp;\n  var eps = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0.001;\n  var vel = \"velocity_\" + prop;\n  if (current.__damp === undefined) current.__damp = {};\n  if (current.__damp[vel] === undefined) current.__damp[vel] = 0;\n\n  if (Math.abs(current[prop] - target) <= eps) {\n    current[prop] = target;\n    return false;\n  }\n\n  smoothTime = Math.max(0.0001, smoothTime);\n  var omega = 2 / smoothTime;\n  var t = easing(omega * delta);\n  var change = current[prop] - target;\n  var originalTo = target; // Clamp maximum maxSpeed\n\n  var maxChange = maxSpeed * smoothTime;\n  change = Math.min(Math.max(change, -maxChange), maxChange);\n  target = current[prop] - change;\n  var temp = (current.__damp[vel] + omega * change) * delta;\n  current.__damp[vel] = (current.__damp[vel] - omega * temp) * t;\n  var output = target + (change + temp) * t; // Prevent overshooting\n\n  if (originalTo - current[prop] > 0.0 === output > originalTo) {\n    output = originalTo;\n    current.__damp[vel] = (output - originalTo) / delta;\n  }\n\n  current[prop] = output;\n  return true;\n}\n/**\n * DampLookAt\n */\n\nvar isCamera = function isCamera(v) {\n  return v && v.isCamera;\n};\n\nvar isLight = function isLight(v) {\n  return v && v.isLight;\n};\n\nvar vl3d = /*@__PURE__*/new Vector3();\n\nvar _q1 = /*@__PURE__*/new Quaternion();\n\nvar _q2 = /*@__PURE__*/new Quaternion();\n\nvar _m1 = /*@__PURE__*/new Matrix4();\n\nvar _position = /*@__PURE__*/new Vector3();\n\nfunction dampLookAt(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  // This method does not support objects having non-uniformly-scaled parent(s)\n  if (typeof target === \"number\") vl3d.setScalar(target);else if (Array.isArray(target)) vl3d.set(target[0], target[1], target[2]);else vl3d.copy(target);\n  var parent = current.parent;\n  current.updateWorldMatrix(true, false);\n\n  _position.setFromMatrixPosition(current.matrixWorld);\n\n  if (isCamera(current) || isLight(current)) _m1.lookAt(_position, vl3d, current.up);else _m1.lookAt(vl3d, _position, current.up);\n  dampQ(current.quaternion, _q2.setFromRotationMatrix(_m1), smoothTime, delta, maxSpeed, easing, eps);\n\n  if (parent) {\n    _m1.extractRotation(parent.matrixWorld);\n\n    _q1.setFromRotationMatrix(_m1);\n\n    dampQ(current.quaternion, _q2.copy(current.quaternion).premultiply(_q1.invert()), smoothTime, delta, maxSpeed, easing, eps);\n  }\n}\n/**\n * DampAngle, with a shortest-path\n */\n\nfunction dampAngle(current, prop, target, smoothTime, delta, maxSpeed, easing, eps) {\n  return damp(current, prop, current[prop] + deltaAngle(current[prop], target), smoothTime, delta, maxSpeed, easing, eps);\n}\n/**\n * Vector2D Damp\n */\n\nvar v2d = /*@__PURE__*/new Vector2();\nvar a2, b2;\nfunction damp2(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v2d.setScalar(target);else if (Array.isArray(target)) v2d.set(target[0], target[1]);else v2d.copy(target);\n  a2 = damp(current, \"x\", v2d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b2 = damp(current, \"y\", v2d.y, smoothTime, delta, maxSpeed, easing, eps);\n  return a2 || b2;\n}\n/**\n * Vector3D Damp\n */\n\nvar v3d = /*@__PURE__*/new Vector3();\nvar a3, b3, c3;\nfunction damp3(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v3d.setScalar(target);else if (Array.isArray(target)) v3d.set(target[0], target[1], target[2]);else v3d.copy(target);\n  a3 = damp(current, \"x\", v3d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b3 = damp(current, \"y\", v3d.y, smoothTime, delta, maxSpeed, easing, eps);\n  c3 = damp(current, \"z\", v3d.z, smoothTime, delta, maxSpeed, easing, eps);\n  return a3 || b3 || c3;\n}\n/**\n * Vector4D Damp\n */\n\nvar v4d = /*@__PURE__*/new Vector4();\nvar a4, b4, c4, d4;\nfunction damp4(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (typeof target === \"number\") v4d.setScalar(target);else if (Array.isArray(target)) v4d.set(target[0], target[1], target[2], target[3]);else v4d.copy(target);\n  a4 = damp(current, \"x\", v4d.x, smoothTime, delta, maxSpeed, easing, eps);\n  b4 = damp(current, \"y\", v4d.y, smoothTime, delta, maxSpeed, easing, eps);\n  c4 = damp(current, \"z\", v4d.z, smoothTime, delta, maxSpeed, easing, eps);\n  d4 = damp(current, \"w\", v4d.w, smoothTime, delta, maxSpeed, easing, eps);\n  return a4 || b4 || c4 || d4;\n}\n\n/**\n * Euler Damp\n */\nvar rot = /*@__PURE__*/new Euler();\nvar aE, bE, cE;\nfunction dampE(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (Array.isArray(target)) rot.set(target[0], target[1], target[2], target[3]);else rot.copy(target);\n  aE = dampAngle(current, \"x\", rot.x, smoothTime, delta, maxSpeed, easing, eps);\n  bE = dampAngle(current, \"y\", rot.y, smoothTime, delta, maxSpeed, easing, eps);\n  cE = dampAngle(current, \"z\", rot.z, smoothTime, delta, maxSpeed, easing, eps);\n  return aE || bE || cE;\n}\n/**\n * Color Damp\n */\n\nvar col = /*@__PURE__*/new Color();\nvar aC, bC, cC;\nfunction dampC(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (target instanceof Color) col.copy(target);else if (Array.isArray(target)) col.setRGB(target[0], target[1], target[2]);else col.set(target);\n  aC = damp(current, \"r\", col.r, smoothTime, delta, maxSpeed, easing, eps);\n  bC = damp(current, \"g\", col.g, smoothTime, delta, maxSpeed, easing, eps);\n  cC = damp(current, \"b\", col.b, smoothTime, delta, maxSpeed, easing, eps);\n  return aC || bC || cC;\n}\n/**\n * Quaternion Damp\n * https://gist.github.com/maxattack/4c7b4de00f5c1b95a33b\n * Copyright 2016 Max Kaufmann (max.kaufmann@gmail.com)\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nvar qt = /*@__PURE__*/new Quaternion();\nvar v4result = /*@__PURE__*/new Vector4();\nvar v4velocity = /*@__PURE__*/new Vector4();\nvar v4error = /*@__PURE__*/new Vector4();\nvar aQ, bQ, cQ, dQ;\nfunction dampQ(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  var cur = current;\n  if (Array.isArray(target)) qt.set(target[0], target[1], target[2], target[3]);else qt.copy(target);\n  var multi = current.dot(qt) > 0 ? 1 : -1;\n  qt.x *= multi;\n  qt.y *= multi;\n  qt.z *= multi;\n  qt.w *= multi;\n  aQ = damp(current, \"x\", qt.x, smoothTime, delta, maxSpeed, easing, eps);\n  bQ = damp(current, \"y\", qt.y, smoothTime, delta, maxSpeed, easing, eps);\n  cQ = damp(current, \"z\", qt.z, smoothTime, delta, maxSpeed, easing, eps);\n  dQ = damp(current, \"w\", qt.w, smoothTime, delta, maxSpeed, easing, eps); // smooth damp (nlerp approx)\n\n  v4result.set(current.x, current.y, current.z, current.w).normalize();\n  v4velocity.set(cur.__damp.velocity_x, cur.__damp.velocity_y, cur.__damp.velocity_z, cur.__damp.velocity_w); // ensure deriv is tangent\n\n  v4error.copy(v4result).multiplyScalar(v4velocity.dot(v4result) / v4result.dot(v4result));\n  cur.__damp.velocity_x -= v4error.x;\n  cur.__damp.velocity_y -= v4error.y;\n  cur.__damp.velocity_z -= v4error.z;\n  cur.__damp.velocity_w -= v4error.w;\n  current.set(v4result.x, v4result.y, v4result.z, v4result.w);\n  return aQ || bQ || cQ || dQ;\n}\n/**\n * Spherical Damp\n */\n\nvar spherical = /*@__PURE__*/new Spherical();\nvar aS, bS, cS;\nfunction dampS(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  if (Array.isArray(target)) spherical.set(target[0], target[1], target[2]);else spherical.copy(target);\n  aS = damp(current, \"radius\", spherical.radius, smoothTime, delta, maxSpeed, easing, eps);\n  bS = dampAngle(current, \"phi\", spherical.phi, smoothTime, delta, maxSpeed, easing, eps);\n  cS = dampAngle(current, \"theta\", spherical.theta, smoothTime, delta, maxSpeed, easing, eps);\n  return aS || bS || cS;\n}\n/**\n * Matrix4 Damp\n */\n\nvar mat = /*@__PURE__*/new Matrix4();\nvar mPos = /*@__PURE__*/new Vector3();\nvar mRot = /*@__PURE__*/new Quaternion();\nvar mSca = /*@__PURE__*/new Vector3();\nvar aM, bM, cM;\nfunction dampM(current, target, smoothTime, delta, maxSpeed, easing, eps) {\n  var cur = current;\n\n  if (cur.__damp === undefined) {\n    cur.__damp = {\n      position: new Vector3(),\n      rotation: new Quaternion(),\n      scale: new Vector3()\n    };\n    current.decompose(cur.__damp.position, cur.__damp.rotation, cur.__damp.scale);\n  }\n\n  if (Array.isArray(target)) mat.set.apply(mat, _toConsumableArray(target));else mat.copy(target);\n  mat.decompose(mPos, mRot, mSca);\n  aM = damp3(cur.__damp.position, mPos, smoothTime, delta, maxSpeed, easing, eps);\n  bM = dampQ(cur.__damp.rotation, mRot, smoothTime, delta, maxSpeed, easing, eps);\n  cM = damp3(cur.__damp.scale, mSca, smoothTime, delta, maxSpeed, easing, eps);\n  current.compose(cur.__damp.position, cur.__damp.rotation, cur.__damp.scale);\n  return aM || bM || cM;\n}\n\nvar easing = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  rsqw: rsqw,\n  exp: exp,\n  linear: linear,\n  sine: sine,\n  cubic: cubic,\n  quint: quint,\n  circ: circ,\n  quart: quart,\n  expo: expo,\n  damp: damp,\n  dampLookAt: dampLookAt,\n  dampAngle: dampAngle,\n  damp2: damp2,\n  damp3: damp3,\n  damp4: damp4,\n  dampE: dampE,\n  dampC: dampC,\n  dampQ: dampQ,\n  dampS: dampS,\n  dampM: dampM\n});\n\nexport { exp as a, circ as b, cubic as c, quart as d, easing as e, expo as f, damp as g, dampLookAt as h, dampAngle as i, damp2 as j, damp3 as k, linear as l, damp4 as m, dampE as n, dampC as o, dampQ as p, quint as q, rsqw as r, sine as s, dampS as t, dampM as u };\n"],"names":["CopyShader","Pass","_camera","OrthographicCamera","FullscreenTriangleGeometry","BufferGeometry","Float32BufferAttribute","_geometry","FullScreenQuad","material","Mesh","renderer","value","ShaderPass","shader","textureID","ShaderMaterial","UniformsUtils","writeBuffer","readBuffer","MaskPass","scene","camera","context","state","writeValue","clearValue","ClearMaskPass","EffectComposer","renderTarget","size","Vector2","WebGLRenderTarget","HalfFloatType","NoBlending","Clock","tmp","pass","index","passIndex","i","deltaTime","currentRenderTarget","maskActive","il","stencil","width","height","effectiveWidth","effectiveHeight","pixelRatio","RenderPass","overrideMaterial","clearColor","clearAlpha","Color","oldAutoClear","oldClearAlpha","oldOverrideMaterial","GammaCorrectionShader","nativeFloor","nativeRandom","baseRandom","lower","upper","_baseRandom","require$$0","isIterateeCall","require$$1","toFinite","require$$2","freeParseFloat","nativeMin","random","floating","temp","rand","random_1","WebGLSyncObject","options","__publicField","resetSync","syncMeshToDOM","params","WebGLScene","Scene","PerspectiveCamera","interfaceStore","mainWebGLRenderer","LinearSRGBColorSpace","renderPass","gammaCorrectionPass","calculateUnitSize","child","mat","each","_a","SRGBColorSpace","exp","t","damp","current","prop","target","smoothTime","delta","maxSpeed","easing","eps","vel","omega","change","originalTo","maxChange","output","v3d","Vector3","a3","b3","c3","damp3"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,11,12]}