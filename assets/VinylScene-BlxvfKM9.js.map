{"version":3,"file":"VinylScene-BlxvfKM9.js","sources":["../../src/vue/src/pages/Thematique/blocks/webgl/VinylScene.ts"],"sourcesContent":["import { WebGLRenderParams, WebGLSceneOptions } from \"components/WebGL/gl\";\nimport { WebGLScene } from 'components/WebGL/three/glScene';\nimport { damp } from \"maath/easing\";\nimport emitter, { EVENTS } from \"plugins/store/events\";\nimport { mainWebGLRenderer } from \"plugins/webgl/three\";\nimport { calculateUnitSize, getPixelSize } from \"plugins/webgl/utils\";\nimport { store as interfaceStore } from 'store/interface';\nimport { AmbientLight, BoxGeometry, CompressedTexture, DirectionalLight, DoubleSide, Group, LinearToneMapping, Mesh, MeshBasicMaterial, MeshStandardMaterial, NearestFilter, PMREMGenerator, PerspectiveCamera, PlaneGeometry, Raycaster, SRGBColorSpace, Texture, Vector2 } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { RoomEnvironment } from 'three/examples/jsm/environments/RoomEnvironment.js';\nimport { store as loaderStore } from 'ui/Loader/store';\nimport { gsap } from \"vendors/gsap\";\n\ninterface InteractiveMeshes {\n  disc?: Mesh;\n  cover?: Group;\n  article?: Group;\n  click?: Mesh;\n  picto?: Mesh;\n  clickButtton?: Mesh;\n  trancheInsideMaterial?: MeshBasicMaterial,\n}\n\nconst boxGeom = new BoxGeometry(1, 1, 1);\nconst planeGeom = new PlaneGeometry(1, 1);\n\nconst DELAY_CLICK = 350;\n\nexport class VinylScene extends WebGLScene {\n\n  handlers: Obj;\n  mouse: Vector2 = new Vector2();\n\n  moveArticle = false;\n\n  raycaster: Raycaster;\n\n  clickTimers = { start: 0, end: 0 };\n  isDown = false;\n\n  container: Group;\n  interactiveMesh: InteractiveMeshes = {}\n\n  lights: Obj = {};\n\n  status = {\n    toggle: false,\n    reduce: false,\n  }\n\n  orbitControls: OrbitControls;\n  orbitDefaultState: Obj = {};\n\n  pmremGenerator: PMREMGenerator\n\n  constructor(options: WebGLSceneOptions) {\n    // new glScene(options)\n    super(options);\n\n    mainWebGLRenderer!.toneMapping = LinearToneMapping;\n\n    this.handlers = {\n      clickDown: this.onClickDown.bind(this),\n      click: this.onClick.bind(this),\n      move: this.onMouseMove.bind(this),\n    }\n\n    this.container = new Group();\n    this.container.position.x = -this.container.scale.x / 2;\n    this.container.visible = false;\n    this.orbitControls = new OrbitControls(this.getActiveCamera(), mainWebGLRenderer!.domElement);\n    this.orbitControls.enableDamping = true;\n    this.orbitControls.enablePan = false;\n    this.orbitControls.dampingFactor = 0.1\n    this.orbitControls.enableZoom = false;\n\n    this.pmremGenerator = new PMREMGenerator(mainWebGLRenderer!);\n    this.pmremGenerator.compileEquirectangularShader();\n    this.scene.environment = this.pmremGenerator.fromScene(new RoomEnvironment()).texture;\n    this.scene.environmentIntensity = .25;\n\n    this.raycaster = new Raycaster();\n\n    return this;\n  }\n\n  async build() {\n    this.scene.add(this.container);\n\n    const model = loaderStore.getModel('vinyl').clone();\n    model.name = \"vinyl\"\n    model.scale.multiplyScalar(.09);\n    this.container.add(model);\n\n    model.traverse((child) => {\n      const c = child as Mesh;\n      // this one for translating the disc\n      if (c.name === \"Disc\") {\n        this.interactiveMesh.disc = c;\n        this.interactiveMesh.disc.position.x = 0;\n      }\n    });\n\n    //---create the case\n    this.interactiveMesh.cover = new Group();\n    this.container.add(this.interactiveMesh.cover);\n\n    const coverFront = await loaderStore.getLoader(\"texture\")?.loadAsync(this.settings?.folder + this.settings?.recto);\n    if (coverFront) {\n      this.prepareTexture(coverFront);\n    }\n\n    const coverBack = await loaderStore.getLoader(\"texture\")?.loadAsync(this.settings?.folder + this.settings?.verso);\n    if (coverBack) {\n      this.prepareTexture(coverBack)\n    }\n\n    this.interactiveMesh.trancheInsideMaterial = new MeshBasicMaterial({ color: this.settings?.tranche, transparent: true, opacity: 1 });\n    const trancheMaterial = new MeshBasicMaterial({ color: this.settings?.tranche, side: DoubleSide });\n\n    const cover = new Mesh(boxGeom, [\n      this.interactiveMesh.trancheInsideMaterial, //tranche droite\n      trancheMaterial, // tranche gauche\n      trancheMaterial, //tranche haut\n      trancheMaterial, //tranche bas\n      new MeshStandardMaterial({ map: coverFront, side: DoubleSide, roughness: 0.5, metalness: 0.5 }), //front\n      new MeshStandardMaterial({ map: coverBack, side: DoubleSide }) //back\n    ]);\n\n    const ratio = coverFront?.image.width / coverFront?.image.height;\n    cover.name = \"cover\";\n    cover.scale.set(2.5, 2.5 / ratio, 0.05)\n    this.interactiveMesh.cover.add(cover);\n\n    // --- Add Article\n    if (this.settings?.article) {\n      const articleGroup = new Group();\n      this.container.add(articleGroup);\n      this.interactiveMesh.article = articleGroup;\n\n      const isArray = !(typeof this.settings?.article === 'string');\n      const articleUrl = this.settings?.folder + (isArray ? this.settings?.article[0] : this.settings?.article);\n      const articleTexture = await loaderStore.getLoader(\"texture\")?.loadAsync(articleUrl);\n      if (articleTexture) {\n        this.prepareTexture(articleTexture);\n\n        const article = new Mesh(planeGeom, new MeshStandardMaterial({\n          map: articleTexture,\n          roughness: 0.5,\n          metalness: 0.5,\n        }));\n\n        const ratioArticle = articleTexture.image.width / articleTexture.image.height;\n        article.name = \"article\";\n        article.scale.set(this.settings?.article_scale, this.settings?.article_scale / ratioArticle, this.settings?.article_scale);\n        articleGroup.position.z = 0.01;\n        articleGroup.position.y = 0.2;\n        articleGroup.add(article);\n\n        if (this.settings?.article_offset) {\n          articleGroup.position.x += this.settings?.article_offset;\n        }\n\n\n        // add interaction\n        const plane = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial({ transparent: true, opacity: 0 }));\n        plane.name = \"click\";\n        plane.scale.set(1, article.scale.y, 1);\n        plane.userData.x = plane.position.x;\n        plane.userData.endX = plane.userData.x + ((article.scale.x / 2) - (plane.scale.x / 2));\n        this.interactiveMesh.click = plane;\n        articleGroup.add(plane);\n      }\n\n\n\n      //-- Add Sprite\n      if (!interfaceStore.state.supports.install && !interfaceStore.hasInteract.vinyl) {\n        const spriteTexture = loaderStore.getTexture(\"sprite-object\");\n        if (spriteTexture) {\n          this.prepareTexture(spriteTexture, false)\n\n          const ratioTexture = spriteTexture.image.width / spriteTexture.image.height;\n          const button = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial({ map: spriteTexture, transparent: true }));\n          button.name = \"clickButtton\";\n          button.scale.set(1, 1 / ratioTexture, 1).multiplyScalar(.5);\n          button.position.x = (cover.scale.x / 2) + (articleGroup.scale.x / 2) - 0.2\n          button.position.z = 0.07;\n          button.userData.scale = button.scale.clone();\n          button.scale.set(0, 0, 0);\n          this.interactiveMesh.clickButtton = button;\n          this.container.add(button);\n        }\n      }\n\n    }\n\n\n    if (interfaceStore.state.supports.install && !interfaceStore.hasInteract.vinyl) {\n      const spriteTexture = loaderStore.getTexture(\"touch-object\");\n      if (spriteTexture) {\n        this.prepareTexture(spriteTexture, false)\n\n        const ratioTexture = spriteTexture.image.width / spriteTexture.image.height;\n        const button = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial({ map: spriteTexture, transparent: true }));\n        button.name = \"picto\";\n        button.scale.set(1, 1 / ratioTexture, 1).multiplyScalar(.5);\n        button.position.x = (cover.scale.x / 2) + this.interactiveMesh.disc!.scale.x + .15;\n        button.position.z = 0.03;\n        button.userData.scale = button.scale.clone();\n        button.scale.set(0, 0, 0);\n        this.interactiveMesh.picto = button;\n        this.container.add(button);\n      }\n    }\n\n    //--- Add Lights\n    this.lights = {\n      ambient: new AmbientLight(0xffffff, 3),\n      directional: new DirectionalLight(0xFFFFFF, 1),\n    }\n\n    this.container.add(this.lights.ambient);\n    this.lights.directional.position.set(-3, 2, 7.5);\n    this.container.add(this.lights.directional);\n\n    emitter.emit(EVENTS.OBJECT_DETAIL_READY);\n\n    this.orbitDefaultState.target = this.orbitControls.target.clone();\n    this.orbitDefaultState.cam = this.getActiveCamera().position.clone();\n\n    this.addEvents();\n\n    gsap.timeline()\n    .from(this.container.rotation, {z:Math.PI / 4, x:-Math.PI / 2, ease:\"power4.inOut\", duration:2})\n\n  }\n\n  addEvents() {\n    mainWebGLRenderer?.domElement.addEventListener(\"pointerdown\", this.handlers.clickDown);\n    mainWebGLRenderer?.domElement.addEventListener(\"pointerup\", this.handlers.click);\n    mainWebGLRenderer?.domElement.addEventListener(\"pointermove\", this.handlers.move);\n  }\n\n  removeEvents() {\n    mainWebGLRenderer?.domElement.removeEventListener(\"pointerdown\", this.handlers.clickDown);\n    mainWebGLRenderer?.domElement.removeEventListener(\"pointerup\", this.handlers.click);\n    mainWebGLRenderer?.domElement.removeEventListener(\"pointermove\", this.handlers.move);\n  }\n\n  // Resize is called by default (by the plugin) when the scene is created\n  resize() {\n    // glScene.resize()\n    super.resize();\n  }\n\n  render(params: WebGLRenderParams) {\n\n    if (!this.scene.children.length) {\n      super.render(params);\n      this.build();\n    }\n    else {\n      super.render(params);\n\n      if (this.interactiveMesh.disc && this.interactiveMesh.cover) {\n        damp(this.interactiveMesh.disc.position, 'x', !this.status.toggle ? 0 : this.interactiveMesh.disc.scale.x * 15, .2, params.delta);\n        damp(this.interactiveMesh.disc.rotation, 'z', this.status.toggle ? Math.PI / 2 : 0, .2, params.delta);\n\n        if (this.interactiveMesh.trancheInsideMaterial) {\n          damp(this.interactiveMesh.trancheInsideMaterial, 'opacity', this.status.toggle ? 0 : 1, .2, params.delta);\n        }\n\n        if (this.interactiveMesh.article && this.moveArticle) {\n          damp(this.interactiveMesh.article.position, 'x', this.status.toggle ? (this.settings?.article_offset ?? 0) + 0.65 : this.settings?.article_offset ?? 0, .25, params.delta);\n          damp(this.interactiveMesh.article.rotation, 'z', this.status.toggle ? -Math.PI / 8 : 0, .25, params.delta);\n\n          damp(this.interactiveMesh.click!.position, 'x', this.status.toggle ? this.interactiveMesh.click!.userData.endX : this.interactiveMesh.click!.userData.x, .25, params.delta);\n        }\n      }\n    }\n\n    this.orbitControls.update();\n  }\n\n  dispose() {\n    // glScene.dispose()\n    // dispose every geometry and material for every Mesh children\n    planeGeom?.dispose();\n    boxGeom?.dispose();\n    this.interactiveMesh.trancheInsideMaterial?.dispose();\n    this.disposeGeometries(this.container);\n    this.interactiveMesh = {};\n    super.dispose();\n    this.removeEvents();\n\n    document.body.style.cursor = 'default';\n  }\n\n  onClickDown(): void {\n    this.clickTimers.start = Date.now();\n    this.clickTimers.end = 0;\n    this.isDown = true;\n  }\n\n  onClick(e: MouseEvent): void {\n    this.clickTimers.end = Date.now();\n    this.isDown = false;\n\n    const isRealClick = this.clickTimers.end - this.clickTimers.start;\n\n    if (isRealClick <= DELAY_CLICK) {\n      if (this.settings?.article && this.interactiveMesh.article) {\n        this.getMousePosition(e);\n        this.checkIntersection(e, \"click\");\n      }\n    }\n  }\n\n  onMouseMove(e: PointerEvent): void {\n    if (interfaceStore.state.supports.install) {\n      this.userInteract();\n      return;\n    }\n\n    this.getMousePosition(e);\n\n    if (this.settings?.article && this.interactiveMesh.article) {\n      this.checkIntersection(e, \"move\");\n    }\n  }\n\n  getMousePosition(evt: MouseEvent) {\n    const el = evt.currentTarget as HTMLElement;\n    const bounds = el.getBoundingClientRect();\n\n    let x = 0,\n      y = 0;\n\n    x = evt.clientX - bounds?.left;\n    y = evt.clientY - bounds?.top;\n\n    this.mouse.x = (x / mainWebGLRenderer!.domElement.offsetWidth) * 2 - 1;\n    this.mouse.y = -(y / mainWebGLRenderer!.domElement.offsetHeight) * 2 + 1;\n  }\n\n  show() {\n    this.container.visible = true;\n  }\n\n  toggleShowingInside(value: boolean) {\n    this.status.toggle = value;\n\n    setTimeout(() => {\n      this.moveArticle = value;\n      if (this.status.toggle) {\n        if (this.interactiveMesh.clickButtton) {\n          if(!this.interactiveMesh.clickButtton.parent) {\n            this.container.add(this.interactiveMesh.clickButtton);\n          }\n          gsap.timeline()\n            .set(this.interactiveMesh.clickButtton!.scale, { x: 0, y: 0, z: 0 }, 0)\n            .to(this.interactiveMesh.clickButtton!.scale, { x: this.interactiveMesh.clickButtton?.userData.scale.x, y: this.interactiveMesh.clickButtton?.userData.scale.y, z: this.interactiveMesh.clickButtton?.userData.scale.z, ease: \"power4.out\", overwrite: false, duration: .5 }, .5)\n        }\n      }\n\n      if (this.interactiveMesh.picto) {\n        gsap.timeline()\n          .set(this.interactiveMesh.picto!.scale, { x: 0, y: 0, z: 0 }, 0)\n          .to(this.interactiveMesh.picto!.scale, { x: this.interactiveMesh.picto?.userData.scale.x, y: this.interactiveMesh.picto?.userData.scale.y, z: this.interactiveMesh.picto?.userData.scale.z, ease: \"power4.out\", overwrite: false, duration: .5 }, .5)\n      }\n    }, 400)\n  }\n\n  prepareTexture(tex: Texture | CompressedTexture, noMipmaps = true) {\n    tex.colorSpace = SRGBColorSpace;\n    if (noMipmaps) {\n      tex.generateMipmaps = false;\n      tex.minFilter = NearestFilter;\n    }\n  }\n\n  checkIntersection(e: MouseEvent, type: string = \"click\") {\n\n    if (this.status.reduce && !this.status.toggle) return;\n\n    this.raycaster.setFromCamera(this.mouse, this.getActiveCamera());\n\n    // calculate objects intersecting the picking ray\n    const intersection = this.raycaster.intersectObject(this.interactiveMesh.click as Mesh);\n\n    // calculate objects intersecting the picking ray\n    let intersectionButton = [];\n    if (this.interactiveMesh.clickButtton) {\n      intersectionButton = this.raycaster.intersectObject(this.interactiveMesh.clickButtton as Mesh);\n    }\n\n\n    //change body cursor\n    if (type === 'move') {\n      const hasIntersection = intersection.length > 0;\n      const hasIntersectionButton = intersectionButton.length > 0;\n      document.body.style.cursor = (hasIntersection || hasIntersectionButton) ? 'pointer' : 'default';\n\n\n\n      const article = this.interactiveMesh.article?.getObjectByName(\"article\") as Mesh;\n      if (article && !this.isDown) {\n        gsap.to(article.position, { x: hasIntersection ? 0.1 : 0, ease: \"power3.out\", duration: 1 });\n      }\n    }\n\n    //handle the click and reduce the scene\n    if (intersection.length && type === 'click') this.goMiniature()\n\n    if (intersectionButton.length && type === 'click') {\n      this.goMiniature()\n    }\n  }\n\n  goMiniature() {\n    this.orbitControls.enabled = false;\n    this.status.reduce = true;\n    this.toggleShowingInside(false);\n\n    const article = this.interactiveMesh.article?.getObjectByName(\"article\") as Mesh;\n    const clickButtton = this.interactiveMesh.clickButtton?.getObjectByName(\"clickButtton\") as Mesh;\n    if (article) {\n      gsap.to(article.position, { x: 0, ease: \"power3.out\", duration: 1 });\n    }\n    if (clickButtton) {\n      gsap.to(clickButtton.scale, { x: 0, y: 0, z: 0, ease: \"power3.out\", duration: .5, onComplete: () => {\n        clickButtton.parent?.remove(clickButtton);\n        this.interactiveMesh.clickButtton = undefined;\n      } });\n    }\n    document.body.style.cursor = \"default\";\n\n    const size = calculateUnitSize(35, this.camera as PerspectiveCamera);\n\n    gsap.timeline()\n      .to(this.getActiveCamera().position, { z: 35, x: this.orbitDefaultState.cam.x, y: this.orbitDefaultState.cam.y, ease: \"power4.inOut\", duration: 1.5 }, 0)\n      .to(this.orbitControls.target, { z: this.orbitDefaultState.target.z, y: this.orbitDefaultState.target.y, x: this.orbitDefaultState.target.x, ease: \"power4.inOut\", duration: 1.5 }, 0)\n      .to(this.container.position, {\n        x: -(size.width / 2) + (this.container.scale.x * 1.8),\n        y: (size.height / 2) - (this.container.scale.y * 1.8), ease: \"power4.inOut\", duration: 1.5\n      }, .25)\n      .add(() => {\n        const { width, height } = getPixelSize(this.container, this.camera);\n        emitter.emit(EVENTS.OBJECT_SHOW_ARTICLE, { width, height });\n      }, 1.5);\n\n    if (this.interactiveMesh.picto) {\n      this.userInteract();\n    }\n  }\n\n  revertToInteractive() {\n    gsap.timeline()\n      .to(this.getActiveCamera().position, { z: 5, ease: \"power4.inOut\", duration: 1.5 }, .25)\n      .to(this.container.position, {\n        x: -this.container.scale.x / 2,\n        y: 0, ease: \"power4.inOut\", duration: 1.5\n      }, 0)\n      .add(() => {\n        this.status.reduce = false;\n        this.toggleShowingInside(true);\n        this.orbitControls.enabled = true;\n      }, 1.3)\n\n  }\n\n  userInteract() {\n    if (!interfaceStore.hasInteract.vinyl) {\n      interfaceStore.toggleInteraction(true, 'vinyl');\n\n      if (this.interactiveMesh.picto) {\n        gsap.timeline({\n          onComplete: () => {\n            this.container.remove(this.interactiveMesh.picto!);\n            this.interactiveMesh.picto = undefined;\n          }\n        })\n          .to(this.interactiveMesh.picto!.scale, { x: 0, y: 0, z: 0, ease: \"power4.out\", duration: .5 }, 0)\n      }\n    }\n  }\n}\n\n"],"names":["boxGeom","BoxGeometry","planeGeom","PlaneGeometry","DELAY_CLICK","VinylScene","WebGLScene","options","__publicField","Vector2","mainWebGLRenderer","LinearToneMapping","Group","OrbitControls","PMREMGenerator","RoomEnvironment","Raycaster","model","loaderStore","child","c","coverFront","_a","_b","coverBack","_d","_e","MeshBasicMaterial","_g","trancheMaterial","_h","DoubleSide","cover","Mesh","MeshStandardMaterial","ratio","_i","articleGroup","isArray","_j","articleUrl","_k","_l","_m","articleTexture","article","ratioArticle","_o","_p","_q","_r","_s","plane","interfaceStore","spriteTexture","ratioTexture","button","AmbientLight","DirectionalLight","emitter","EVENTS","gsap","params","damp","e","evt","bounds","x","y","value","_c","_f","tex","noMipmaps","SRGBColorSpace","NearestFilter","type","intersection","intersectionButton","hasIntersection","hasIntersectionButton","clickButtton","size","calculateUnitSize","width","height","getPixelSize"],"mappings":"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"}