{"version":3,"file":"VinylScene-BJ0p6q7U.js","sources":["../../src/vue/src/pages/Thematique/blocks/webgl/VinylScene.ts"],"sourcesContent":["import { WebGLRenderParams, WebGLSceneOptions } from \"components/WebGL/gl\";\nimport { WebGLScene } from 'components/WebGL/three/glScene';\nimport { damp } from \"maath/easing\";\nimport emitter, { EVENTS } from \"plugins/store/events\";\nimport { mainWebGLRenderer } from \"plugins/webgl/three\";\nimport { calculateUnitSize, getPixelSize } from \"plugins/webgl/utils\";\nimport { AmbientLight, BoxGeometry, CompressedTexture, DirectionalLight, DoubleSide, Group, LinearToneMapping, Mesh, MeshBasicMaterial, MeshStandardMaterial, NearestFilter, PerspectiveCamera, PlaneGeometry, PMREMGenerator, Raycaster, SRGBColorSpace, Texture, Vector2 } from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { RoomEnvironment } from 'three/examples/jsm/environments/RoomEnvironment.js';\nimport { store as loaderStore } from 'ui/Loader/store';\nimport { gsap } from \"vendors/gsap\";\n\ninterface InteractiveMeshes {\n  disc?: Mesh;\n  cover?: Group;\n  article?:Group;\n  click?:Mesh;\n  trancheInsideMaterial?: MeshBasicMaterial,\n}\n\nconst boxGeom = new BoxGeometry(1,1, 1);\nconst planeGeom = new PlaneGeometry(1, 1);\n\nconst DELAY_CLICK = 350;\n\nexport class VinylScene extends WebGLScene {\n \n  handlers : Obj;\n  mouse : Vector2 = new Vector2();\n\n  moveArticle = false;\n\n  raycaster : Raycaster;\n\n  clickTimers = { start:0, end:0 };\n  isDown = false;\n\n  container : Group;\n  interactiveMesh : InteractiveMeshes = {}\n\n  lights : Obj = {};\n  \n  status = {\n    toggle: false,\n    reduce: false,\n  }\n\n  orbitControls : OrbitControls;\n  orbitDefaultState: Obj = {};\n\n  pmremGenerator : PMREMGenerator\n\n  constructor(options:WebGLSceneOptions) {\n    // new glScene(options)\n    super(options);\n\n    mainWebGLRenderer!.toneMapping = LinearToneMapping;\n\n    this.handlers = {\n      clickDown: this.onClickDown.bind(this),\n      click: this.onClick.bind(this),\n      move: this.onMouseMove.bind(this),\n    }\n\n    this.container = new Group();\n    this.container.position.x = -this.container.scale.x / 2;\n    this.container.visible = false;\n    this.orbitControls = new OrbitControls(this.getActiveCamera(), mainWebGLRenderer!.domElement);\n    this.orbitControls.enableDamping = true;\n    this.orbitControls.enablePan = false;\n    this.orbitControls.dampingFactor = 0.1\n    this.orbitControls.enableZoom = false;\n    \n    this.pmremGenerator = new PMREMGenerator(mainWebGLRenderer!);\n\t\tthis.pmremGenerator.compileEquirectangularShader();\n    this.scene.environment = this.pmremGenerator.fromScene(new RoomEnvironment()).texture;\n    this.scene.environmentIntensity = .25; \n\n    this.raycaster = new Raycaster();\n\n    return this;\n  }\n\n  async build() {\n    this.scene.add(this.container);\n   \n    const model = loaderStore.getModel('vinyl').clone();\n    model.name = \"vinyl\"\n    model.scale.multiplyScalar(.09);\n    this.container.add(model);\n\n    model.traverse( (child) => {\n      const c = child as Mesh;\n      // this one for translating the disc\n      if(c.name === \"Disc\") {\n        this.interactiveMesh.disc = c;\n        this.interactiveMesh.disc.position.x = 0;\n      }\n    });\n\n    //---create the case\n    this.interactiveMesh.cover = new Group();\n    this.container.add(this.interactiveMesh.cover);\n\n    const coverFront = await loaderStore.getLoader(\"texture\")?.loadAsync(this.settings?.folder + this.settings?.recto);\n    if(coverFront) {\n      this.prepareTexture(coverFront)\n    }\n\n    const coverBack = await loaderStore.getLoader(\"texture\")?.loadAsync(this.settings?.folder + this.settings?.verso);\n    if(coverBack) {\n      this.prepareTexture(coverBack)\n    }\n\n    this.interactiveMesh.trancheInsideMaterial = new MeshBasicMaterial({color: this.settings?.tranche, transparent:true, opacity:1}); \n    const trancheMaterial = new MeshBasicMaterial({color: this.settings?.tranche, side:DoubleSide}); \n\n    const cover = new Mesh(boxGeom, [\n      this.interactiveMesh.trancheInsideMaterial, //tranche droite\n      trancheMaterial, // tranche gauche\n      trancheMaterial, //tranche haut\n      trancheMaterial, //tranche bas\n      new MeshStandardMaterial({map: coverFront, side:DoubleSide, roughness:0.5, metalness:0.5}), //front\n      new MeshStandardMaterial({map: coverBack, side:DoubleSide}) //back\n    ]);\n\n    const ratio = coverFront?.image.width / coverFront?.image.height;\n    cover.name = \"cover\";\n    cover.scale.set(2.5, 2.5 / ratio, 0.05)\n    this.interactiveMesh.cover.add(cover);\n\n    // --- Add Article\n    if(this.settings?.article) {\n      const articleGroup = new Group();\n      this.container.add(articleGroup);\n      this.interactiveMesh.article = articleGroup;\n\n      const isArray = !(typeof this.settings?.article === 'string');\n      const articleUrl = this.settings?.folder + (isArray ? this.settings?.article[0] : this.settings?.article);\n      const articleTexture = await loaderStore.getLoader(\"texture\")?.loadAsync(articleUrl);\n      if(articleTexture) {\n        this.prepareTexture(articleTexture);\n\n        const article = new Mesh(planeGeom, new MeshStandardMaterial({\n          map: articleTexture,\n          roughness: 0.5,\n          metalness: 0.5,\n        }));\n    \n        const ratioArticle = articleTexture.image.width / articleTexture.image.height;\n        article.name = \"article\";\n        article.scale.set(this.settings?.article_scale, this.settings?.article_scale / ratioArticle, this.settings?.article_scale);\n        articleGroup.position.z = 0.01;\n        articleGroup.position.y = 0.2;\n        articleGroup.add(article);\n\n        if(this.settings?.article_offset) {\n          articleGroup.position.x += this.settings?.article_offset;\n        }\n       \n     \n        // add interaction\n        const plane = new Mesh(new PlaneGeometry(1,1), new MeshBasicMaterial({transparent:true, opacity:0}));\n        plane.name = \"click\";\n        plane.scale.set(1, article.scale.y, 1);\n        plane.userData.x = plane.position.x;\n        plane.userData.endX = plane.userData.x + ((article.scale.x/2) - (plane.scale.x/2));\n        this.interactiveMesh.click = plane;\n        articleGroup.add(plane);\n      }\n    }\n    \n    //--- Add Lights\n    this.lights = {\n      ambient: new AmbientLight(0xffffff, 3),\n      directional: new DirectionalLight(0xFFFFFF, 1),\n    }\n    \n    this.container.add(this.lights.ambient);    \n    this.lights.directional.position.set(-3, 2, 7.5);\n    this.container.add(this.lights.directional); \n\n    emitter.emit(EVENTS.OBJECT_DETAIL_READY);\n\n    this.orbitDefaultState.target = this.orbitControls.target.clone();\n    this.orbitDefaultState.cam = this.getActiveCamera().position.clone();\n\n    this.addEvents();\n  }\n\n  addEvents() {\n    mainWebGLRenderer?.domElement.addEventListener(\"pointerdown\", this.handlers.clickDown);\n    mainWebGLRenderer?.domElement.addEventListener(\"pointerup\", this.handlers.click);\n    mainWebGLRenderer?.domElement.addEventListener(\"mousemove\", this.handlers.move);\n  }\n  \n  removeEvents() {\n    mainWebGLRenderer?.domElement.removeEventListener(\"pointerdown\", this.handlers.clickDown);\n    mainWebGLRenderer?.domElement.removeEventListener(\"pointerup\", this.handlers.click);\n    mainWebGLRenderer?.domElement.removeEventListener(\"mousemove\", this.handlers.move);\n  }\n\n  // Resize is called by default (by the plugin) when the scene is created\n  resize() {\n    // glScene.resize()\n    super.resize();\n  }\n\n  render(params:WebGLRenderParams) {\n  \n    if(!this.scene.children.length) {\n      super.render(params);\n      this.build();\n    }\n    else{\n      super.render(params);\n\n      if(this.interactiveMesh.disc && this.interactiveMesh.cover) {\n        damp(this.interactiveMesh.disc.position, 'x', !this.status.toggle ? 0 : this.interactiveMesh.disc.scale.x * 15, .2, params.delta);\n        damp(this.interactiveMesh.disc.rotation, 'z', this.status.toggle ? Math.PI / 2 : 0, .2, params.delta);\n        \n        if(this.interactiveMesh.trancheInsideMaterial) {\n          damp(this.interactiveMesh.trancheInsideMaterial, 'opacity', this.status.toggle ? 0: 1, .2, params.delta);\n        }\n\n        if(this.interactiveMesh.article && this.moveArticle) {\n          damp(this.interactiveMesh.article.position, 'x', this.status.toggle ? (this.settings?.article_offset  ?? 0) + 0.65 : this.settings?.article_offset ?? 0, .25, params.delta);\n          damp(this.interactiveMesh.article.rotation, 'z', this.status.toggle ? -Math.PI / 8 : 0, .25, params.delta);\n\n          damp(this.interactiveMesh.click!.position, 'x', this.status.toggle ? this.interactiveMesh.click!.userData.endX : this.interactiveMesh.click!.userData.x, .25, params.delta);\n        }\n      }\n    }\n\n    this.raycaster.setFromCamera(this.mouse, this.getActiveCamera());\n    this.orbitControls.update();\n  }\n\n  dispose() {\n    // glScene.dispose()\n    // dispose every geometry and material for every Mesh children\n    planeGeom?.dispose();\n    boxGeom?.dispose();\n    this.interactiveMesh.trancheInsideMaterial?.dispose();\n    this.disposeGeometries(this.container);\n    this.interactiveMesh = {};\n    super.dispose(); \n    this.removeEvents();\n\n    document.body.style.cursor = 'default';\n  }\n\n  onClickDown() : void {\n    this.clickTimers.start = Date.now(); \n    this.clickTimers.end = 0; \n    this.isDown = true;\n  }\n  \n  onClick(e:MouseEvent) : void { \n    this.clickTimers.end = Date.now();\n    this.isDown = false;\n    \n    const isRealClick = this.clickTimers.end - this.clickTimers.start;\n\n    if(isRealClick <= DELAY_CLICK) {\n      if(this.settings?.article && this.interactiveMesh.article) {\n        this.checkIntersection(e, \"click\");\n      }\n    }  \n  }\n\n  onMouseMove(e:MouseEvent) : void {\n    this.getMousePosition(e);\n    \n    if(this.settings?.article && this.interactiveMesh.article) {\n      this.checkIntersection(e, \"move\");\n    }\n  }\n\n  getMousePosition(evt : MouseEvent) {\n    const el = evt.currentTarget as HTMLElement;\n    const bounds = el.getBoundingClientRect();\n\n    let x = 0,\n        y = 0;\n\n    x = evt.clientX - bounds?.left;\n    y = evt.clientY - bounds?.top;\n\n    this.mouse.x = (x / mainWebGLRenderer!.domElement.offsetWidth) * 2 - 1;\n    this.mouse.y = -(y / mainWebGLRenderer!.domElement.offsetHeight) * 2 + 1;\n  }\n\n  show() {\n    this.container.visible = true;\n  }\n\n  toggleShowingInside(value: boolean) {\n    this.status.toggle = value;\n\n    setTimeout( () => {\n      this.moveArticle = value\n    }, 400)\n  }\n\n  prepareTexture(tex : Texture | CompressedTexture) {\n    tex.colorSpace = SRGBColorSpace;\n    tex.generateMipmaps = false;\n    tex.minFilter = NearestFilter;\n  }\n\n  checkIntersection(e:MouseEvent, type:string = \"click\") {\n\n    if(this.status.reduce && !this.status.toggle) return;\n\n    // calculate objects intersecting the picking ray\n\t  const intersection = this.raycaster.intersectObject( this.interactiveMesh.click as Mesh );\n    \n    //change body cursor\n    if(type === 'move') {\n      const hasIntersection = intersection.length > 0;\n      document.body.style.cursor = hasIntersection ? 'pointer' : 'default';\n\n      const article = this.interactiveMesh.article?.getObjectByName(\"article\") as Mesh;\n      if(article && !this.isDown){\n        gsap.to(article.position, {x:hasIntersection ? 0.1 : 0, ease:\"power3.out\", duration:1});\n      }\n    }\n\n    //handle the click and reduce the scene\n    if(intersection.length && type === 'click') this.goMiniature()\n  }\n\n  goMiniature() {\n    this.orbitControls.enabled = false;\n    this.status.reduce = true;\n    this.toggleShowingInside(false);\n\n    const article = this.interactiveMesh.article?.getObjectByName(\"article\") as Mesh;\n    if(article){\n      gsap.to(article.position, {x:0, ease:\"power3.out\", duration:1});\n    }\n\n    document.body.style.cursor = \"default\";\n\n    const size = calculateUnitSize(35, this.camera as PerspectiveCamera);\n\n    gsap.timeline()\n      .to(this.getActiveCamera().position, {z:35, x:this.orbitDefaultState.cam.x, y:this.orbitDefaultState.cam.y, ease:\"power4.inOut\", duration:1.5}, 0)\n      .to(this.orbitControls.target, {z:this.orbitDefaultState.target.z, y:this.orbitDefaultState.target.y, x:this.orbitDefaultState.target.x, ease:\"power4.inOut\", duration:1.5}, 0)\n      .to(this.container.position, {\n        x:-(size.width / 2) + (this.container.scale.x * 1.8),\n        y:(size.height / 2) - (this.container.scale.y * 1.8), ease:\"power4.inOut\", duration:1.5}, .25)\n      .add( () => {\n        const {width, height} = getPixelSize(this.container, this.camera);\n        emitter.emit(EVENTS.OBJECT_SHOW_ARTICLE, {width, height});\n      }, 1.5);\n  }\n\n  revertToInteractive() {\n    gsap.timeline()\n    .to(this.getActiveCamera().position, {z:5, ease:\"power4.inOut\", duration:1.5}, .25)\n    .to(this.container.position, {\n      x:-this.container.scale.x / 2,\n      y:0, ease:\"power4.inOut\", duration:1.5}, 0)\n    .add( () => {\n      this.status.reduce = false;\n      this.toggleShowingInside(true);\n      this.orbitControls.enabled = true;\n    }, 1.3)\n\n  }\n}\n\n"],"names":["boxGeom","BoxGeometry","planeGeom","PlaneGeometry","DELAY_CLICK","VinylScene","WebGLScene","options","__publicField","Vector2","mainWebGLRenderer","LinearToneMapping","Group","OrbitControls","PMREMGenerator","RoomEnvironment","Raycaster","model","loaderStore","child","c","coverFront","_a","_b","coverBack","_d","_e","MeshBasicMaterial","_g","trancheMaterial","_h","DoubleSide","cover","Mesh","MeshStandardMaterial","ratio","_i","articleGroup","isArray","_j","articleUrl","_k","_l","_m","articleTexture","article","ratioArticle","_o","_p","_q","_r","_s","plane","AmbientLight","DirectionalLight","emitter","EVENTS","params","damp","e","evt","bounds","x","y","value","tex","SRGBColorSpace","NearestFilter","type","intersection","hasIntersection","gsap","size","calculateUnitSize","width","height","getPixelSize"],"mappings":"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"}